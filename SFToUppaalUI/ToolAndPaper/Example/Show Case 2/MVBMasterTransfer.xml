<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>// Place global declarations here.
// Place global declarations here.
typedef struct
{
    int mEvent;
    int mDest;
    int mDestCPosition;// This is state ID. Only activation used , this is what the child state who send the activation ID is.
    int mInfo;
    bool mValid;
    int mAutomatonType;
    int mCEPosition;   // This is state ID.
    int mPahse;
} StackFrame;

const int MaxStackSize = 512;
const int aConditionalAutomaton = 0;
const int aCommonAutomaton = 1;
const int aControllerAutomaton = 2;
const int aControllerActionAutomaton = 3;
const int vValidEventBase = 40;
const int eTrigger = vValidEventBase;
const int eActiveChild = -19;
const int eActiveParallel = -18;
const int eChildOver = -17;
const int eSelfLogicOver = -16;
const int eDispathToSelfLogic = -15;
const int eDuring = -14;
const int eExitActionOver = -13;
const int eDeActivationJudgeOver = -12;
const int eDefaultActivation = -11;
const int eDeActivation = -10;
const int eActivationJudgeOver = -9;
const int eActivation = -8;
const int eTransToStateDirectly = -7;
const int eDeActivationOver = -5;
//const int eActivationOver = -4;
const int eJudgeActionOver = -3;
const int mStatusActive = -5;
const int mStatusDeActive = -6;
const int iStayOnStack = -1;
const int iConsumedStack = 0;
const int iTransOnlyBack = -12;
const int iDuringOver = -13;
const int iSelfLogicOver = -14;
const int iCouldDispatchToParallel = -15;
const int iActivationDrivenEvent = -16;
const int iOnlyToThisState = -17;


int mEmptyOp = 0;

int mActStopStateID = -1;

//int RecentFirstActivationIdx = -1;
//int RecentFirstDeActivationIdx = -1;

int mExecutionStackTop = -1;
StackFrame mExecutionStack[MaxStackSize+1];

//stack record.
int mStackTopDestChildRecord;
int mStackTopEventIdRecord;

//history state used both by runner and controller.
//int mSSIDHistoryState = -1;etc.

// history state used both by runner and controller.
int mChartHistoryState = -1;
int mChart_MasterShipHistoryState = -1;
int mChart_MasterShip_OneMVB1HistoryState = -1;
int mChart_MasterShip_OneMVB1_LOGICHistoryState = -1;
int mChart_MasterShip_OneMVB1_TimerHistoryState = -1;
int mChart_MasterShip_OneMVB1_Timer_BControllerHistoryState = -1;
int mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState = -1;
int mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState = -1;
int mChart_MasterShip_OneMVB1_Timer_BController_CCHistoryState = -1;
int mChart_MasterShip_OneMVB1_Timer_AControllerHistoryState = -1;
int mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState = -1;
int mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState = -1;
int mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerHistoryState = -1;
int mChart_MasterShip_OneMVB1_ChnannelHistoryState = -1;
int mChart_MasterShip_OneMVB2HistoryState = -1;
int mChart_MasterShip_OneMVB2_ChnannelHistoryState = -1;
int mChart_MasterShip_OneMVB2_TimerHistoryState = -1;
int mChart_MasterShip_OneMVB2_Timer_BControllerHistoryState = -1;
int mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState = -1;
int mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState = -1;
int mChart_MasterShip_OneMVB2_Timer_BController_CCHistoryState = -1;
int mChart_MasterShip_OneMVB2_Timer_AControllerHistoryState = -1;
int mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState = -1;
int mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState = -1;
int mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerHistoryState = -1;
int mChart_MasterShip_OneMVB2_LOGICHistoryState = -1;

// state child active used both by runner and controller.
bool mChartChildActive = false;
bool mChart_MasterShipChildActive = false;
bool mChart_MasterShip_OneMVB1ChildActive = false;
bool mChart_MasterShip_OneMVB1_LOGICChildActive = false;
bool mChart_MasterShip_OneMVB1_TimerChildActive = false;
bool mChart_MasterShip_OneMVB1_Timer_BControllerChildActive = false;
bool mChart_MasterShip_OneMVB1_Timer_BController_ACChildActive = false;
bool mChart_MasterShip_OneMVB1_Timer_BController_BCChildActive = false;
bool mChart_MasterShip_OneMVB1_Timer_BController_CCChildActive = false;
bool mChart_MasterShip_OneMVB1_Timer_AControllerChildActive = false;
bool mChart_MasterShip_OneMVB1_Timer_AController_DCChildActive = false;
bool mChart_MasterShip_OneMVB1_Timer_AController_ECChildActive = false;
bool mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerChildActive = false;
bool mChart_MasterShip_OneMVB1_ChnannelChildActive = false;
bool mChart_MasterShip_OneMVB2ChildActive = false;
bool mChart_MasterShip_OneMVB2_ChnannelChildActive = false;
bool mChart_MasterShip_OneMVB2_TimerChildActive = false;
bool mChart_MasterShip_OneMVB2_Timer_BControllerChildActive = false;
bool mChart_MasterShip_OneMVB2_Timer_BController_ACChildActive = false;
bool mChart_MasterShip_OneMVB2_Timer_BController_BCChildActive = false;
bool mChart_MasterShip_OneMVB2_Timer_BController_CCChildActive = false;
bool mChart_MasterShip_OneMVB2_Timer_AControllerChildActive = false;
bool mChart_MasterShip_OneMVB2_Timer_AController_DCChildActive = false;
bool mChart_MasterShip_OneMVB2_Timer_AController_ECChildActive = false;
bool mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerChildActive = false;
bool mChart_MasterShip_OneMVB2_LOGICChildActive = false;

// state childs if exist a valid path used both by runner and controller.
bool mChartExistPath = false;
bool mChart_MasterShipExistPath = false;
bool mChart_MasterShip_OneMVB1ExistPath = false;
bool mChart_MasterShip_OneMVB1_LOGICExistPath = false;
bool mChart_MasterShip_OneMVB1_TimerExistPath = false;
bool mChart_MasterShip_OneMVB1_Timer_BControllerExistPath = false;
bool mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath = false;
bool mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath = false;
bool mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath = false;
bool mChart_MasterShip_OneMVB1_Timer_AControllerExistPath = false;
bool mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath = false;
bool mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath = false;
bool mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerExistPath = false;
bool mChart_MasterShip_OneMVB1_ChnannelExistPath = false;
bool mChart_MasterShip_OneMVB2ExistPath = false;
bool mChart_MasterShip_OneMVB2_ChnannelExistPath = false;
bool mChart_MasterShip_OneMVB2_TimerExistPath = false;
bool mChart_MasterShip_OneMVB2_Timer_BControllerExistPath = false;
bool mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath = false;
bool mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath = false;
bool mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath = false;
bool mChart_MasterShip_OneMVB2_Timer_AControllerExistPath = false;
bool mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath = false;
bool mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath = false;
bool mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerExistPath = false;
bool mChart_MasterShip_OneMVB2_LOGICExistPath = false;

// state common automaton if lose control.
bool mChartLoseControl = false;
bool mChart_MasterShipLoseControl = false;
bool mChart_MasterShip_OneMVB1LoseControl = false;
bool mChart_MasterShip_OneMVB1_LOGICLoseControl = false;
bool mChart_MasterShip_OneMVB1_TimerLoseControl = false;
bool mChart_MasterShip_OneMVB1_Timer_BControllerLoseControl = false;
bool mChart_MasterShip_OneMVB1_Timer_BController_ACLoseControl = false;
bool mChart_MasterShip_OneMVB1_Timer_BController_BCLoseControl = false;
bool mChart_MasterShip_OneMVB1_Timer_BController_CCLoseControl = false;
bool mChart_MasterShip_OneMVB1_Timer_AControllerLoseControl = false;
bool mChart_MasterShip_OneMVB1_Timer_AController_DCLoseControl = false;
bool mChart_MasterShip_OneMVB1_Timer_AController_ECLoseControl = false;
bool mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerLoseControl = false;
bool mChart_MasterShip_OneMVB1_ChnannelLoseControl = false;
bool mChart_MasterShip_OneMVB2LoseControl = false;
bool mChart_MasterShip_OneMVB2_ChnannelLoseControl = false;
bool mChart_MasterShip_OneMVB2_TimerLoseControl = false;
bool mChart_MasterShip_OneMVB2_Timer_BControllerLoseControl = false;
bool mChart_MasterShip_OneMVB2_Timer_BController_ACLoseControl = false;
bool mChart_MasterShip_OneMVB2_Timer_BController_BCLoseControl = false;
bool mChart_MasterShip_OneMVB2_Timer_BController_CCLoseControl = false;
bool mChart_MasterShip_OneMVB2_Timer_AControllerLoseControl = false;
bool mChart_MasterShip_OneMVB2_Timer_AController_DCLoseControl = false;
bool mChart_MasterShip_OneMVB2_Timer_AController_ECLoseControl = false;
bool mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerLoseControl = false;
bool mChart_MasterShip_OneMVB2_LOGICLoseControl = false;


// ---------------------Print state id.e.g.Iterate StateManager.---------------------
//Chart's id=1
//Chart_MasterShip_OneMVB2_Chnannel_Master_Frame's id=54
//Chart_MasterShip's id=28
//Chart_MasterShip_OneMVB1's id=29
//Chart_MasterShip_OneMVB1_LOGIC's id=13
//Chart_MasterShip_OneMVB1_LOGIC_Standby_Master's id=33
//Chart_MasterShip_OneMVB1_LOGIC_Rrgular_Master's id=34
//Chart_MasterShip_OneMVB1_LOGIC_st's id=35
//Chart_MasterShip_OneMVB1_LOGIC_bt's id=36
//Chart_MasterShip_OneMVB1_LOGIC_sr's id=37
//Chart_MasterShip_OneMVB1_LOGIC_Interim_Master's id=38
//Chart_MasterShip_OneMVB1_LOGIC_Find_Next's id=39
//Chart_MasterShip_OneMVB1_LOGIC_T_F's id=40
//Chart_MasterShip_OneMVB1_LOGIC_initial's id=41
//Chart_MasterShip_OneMVB1_Timer_BController's id=42
//Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timer's id=5
//Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timer's id=6
//Chart_MasterShip_OneMVB1_Timer_BController_AC's id=44
//Chart_MasterShip_OneMVB1_Timer_BController_BC's id=46
//Chart_MasterShip_OneMVB1_Timer_BController_CC's id=45
//Chart_MasterShip_OneMVB1_Timer_BController_CC_resign_event_watcher's id=47
//Chart_MasterShip_OneMVB1_Timer_AController's id=43
//Chart_MasterShip_OneMVB1_Timer's id=32
//Chart_MasterShip_OneMVB1_Timer_AController_DC's id=48
//Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timer's id=2
//Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timer's id=3
//Chart_MasterShip_OneMVB1_Timer_AController_EC's id=50
//Chart_MasterShip_OneMVB1_Timer_AController_UltimateController's id=49
//Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_Time's id=4
//Chart_MasterShip_OneMVB2's id=30
//Chart_MasterShip_OneMVB2_Chnannel's id=52
//Chart_MasterShip_OneMVB2_Timer's id=53
//Chart_MasterShip_OneMVB2_Timer_BController's id=55
//Chart_MasterShip_OneMVB2_Timer_BController_AC's id=57
//Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timer's id=10
//Chart_MasterShip_OneMVB2_Timer_BController_BC's id=59
//Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timer's id=11
//Chart_MasterShip_OneMVB2_Timer_BController_CC's id=58
//Chart_MasterShip_OneMVB2_Timer_BController_CC_resign_event_watcher's id=60
//Chart_MasterShip_OneMVB2_Timer_AController's id=56
//Chart_MasterShip_OneMVB2_Timer_AController_DC's id=61
//Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timer's id=7
//Chart_MasterShip_OneMVB2_Timer_AController_EC's id=63
//Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timer's id=8
//Chart_MasterShip_OneMVB2_Timer_AController_UltimateController's id=62
//Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_Time's id=9
//Chart_MasterShip_OneMVB2_LOGIC's id=21
//Chart_MasterShip_OneMVB2_LOGIC_ps's id=64
//Chart_MasterShip_OneMVB2_LOGIC_Standby_Master's id=65
//Chart_MasterShip_OneMVB2_LOGIC_Rrgular_Master's id=66
//Chart_MasterShip_OneMVB2_LOGIC_st's id=67
//Chart_MasterShip_OneMVB2_LOGIC_bt's id=68
//Chart_MasterShip_OneMVB2_LOGIC_sr's id=69
//Chart_MasterShip_OneMVB2_LOGIC_Interim_Master's id=70
//Chart_MasterShip_OneMVB2_LOGIC_Find_Next's id=71
//Chart_MasterShip_OneMVB2_LOGIC_T_F's id=72
//Chart_MasterShip_OneMVB1_Chnannel's id=31
//Chart_MasterShip_OneMVB1_Chnannel_Master_Frame's id=51


// ---------------------Print modified data.e.g.Iterate StateManager.---------------------
// this is just a overview.
//int Chart_BAitr = 0;
//int Chart_BAlen = 2;
//int Chart_CNMasterShip = 1;
//int Chart_CNStatusRequest = 2;
//int Chart_CurrentMasterId = 1;
//int Chart_ReqId = 0;
//int Chart_RevMVBId = 0;
//int Chart_T_RMTurn = 8;
//int Chart_T_alive = 2;
//int Chart_error = 0;
//int Chart_master_frame_error = 0;
//int Chart_resign = 0;
//int Chart_status_response_type = 0;
//int Chart_valid_master_frame = 1;
//int Chart_valid_master_input = 1;
//int Chart_MasterShip_OneMVB1_CNACT = 1;
//int Chart_MasterShip_OneMVB1_CNMVBId = 1;
//int Chart_MasterShip_OneMVB1_LOGIC_HasMasterFrame = 0;
//int Chart_MasterShip_OneMVB1_Timer_BController_AC_run = 0;
//int Chart_MasterShip_OneMVB1_Timer_BController_AC_turn = 0;
//int Chart_MasterShip_OneMVB1_Timer_BController_BC_run = 0;
//int Chart_MasterShip_OneMVB1_Timer_BController_BC_turn = 0;
//int Chart_MasterShip_OneMVB1_Timer_BController_CC_canpatch = 0;
//int Chart_MasterShip_OneMVB1_Timer_AController_DC_run = 0;
//int Chart_MasterShip_OneMVB1_Timer_AController_EC_run = 0;
//int Chart_MasterShip_OneMVB2_CNACT = 1;
//int Chart_MasterShip_OneMVB2_CNMVBId = 2;
//int Chart_MasterShip_OneMVB2_run = 0;
//int Chart_MasterShip_OneMVB2_Timer_BController_AC_run = 0;
//int Chart_MasterShip_OneMVB2_Timer_BController_AC_turn = 0;
//int Chart_MasterShip_OneMVB2_Timer_BController_BC_run = 0;
//int Chart_MasterShip_OneMVB2_Timer_BController_BC_turn = 0;
//int Chart_MasterShip_OneMVB2_Timer_BController_CC_canpatch = 0;
//int Chart_MasterShip_OneMVB2_Timer_AController_DC_run = 0;
//int Chart_MasterShip_OneMVB2_Timer_AController_DC_turn = 0;
//int Chart_MasterShip_OneMVB2_Timer_AController_EC_run = 0;
//int Chart_MasterShip_OneMVB2_Timer_AController_EC_turn = 0;
//int Chart_MasterShip_OneMVB2_LOGIC_HasMasterFrame = 0;


// ---------------------Print modified event.e.g.Iterate EventRegistry.---------------------
//value -1 means unused.
//T_find_next's id=56
//T_interim_event's id=55
//T_standby_event's id=57
//resign_watch_event's id=-1
//master_frame_event's id=49
//master_turn_over_event's id=52
//resign_event's id=51
//start_find_timer's id=47
//start_interim_timer's id=45
//start_master_turn's id=43
//start_standby_timer's id=41
//stop_find_timer's id=48
//stop_interim_timer's id=46
//stop_master_turn's id=44
//stop_standby_timer's id=42
//trigger_freq_event's id=58
//T_find_next's id=73
//T_interim_event's id=70
//T_standby_event's id=62
//resign_watch_event's id=-1
//master_frame_event's id=59
//master_turn_over_event's id=65
//resign_event's id=67
//start_find_timer's id=71
//start_interim_timer's id=68
//start_master_turn's id=63
//start_standby_timer's id=60
//stop_find_timer's id=72
//stop_interim_timer's id=69
//stop_master_turn's id=64
//stop_standby_timer's id=61
//trigger_freq_event's id=66
//Master_Frame_Input's id=53
//bemaster_response_event's id=50
//status_response_event's id=54

// ---------------------Print only used event.e.g.Iterate EventRegistry.---------------------
//unappeared event means unused.
//Chart_MasterShip_OneMVB1_T_find_next's id=56
//Chart_MasterShip_OneMVB1_T_interim_event's id=55
//Chart_MasterShip_OneMVB1_T_standby_event's id=57
//Chart_MasterShip_OneMVB1_master_frame_event's id=49
//Chart_MasterShip_OneMVB1_master_turn_over_event's id=52
//Chart_MasterShip_OneMVB1_resign_event's id=51
//Chart_MasterShip_OneMVB1_start_find_timer's id=47
//Chart_MasterShip_OneMVB1_start_interim_timer's id=45
//Chart_MasterShip_OneMVB1_start_master_turn's id=43
//Chart_MasterShip_OneMVB1_start_standby_timer's id=41
//Chart_MasterShip_OneMVB1_stop_find_timer's id=48
//Chart_MasterShip_OneMVB1_stop_interim_timer's id=46
//Chart_MasterShip_OneMVB1_stop_master_turn's id=44
//Chart_MasterShip_OneMVB1_stop_standby_timer's id=42
//Chart_MasterShip_OneMVB1_trigger_freq_event's id=58
//Chart_MasterShip_OneMVB2_T_find_next's id=73
//Chart_MasterShip_OneMVB2_T_interim_event's id=70
//Chart_MasterShip_OneMVB2_T_standby_event's id=62
//Chart_MasterShip_OneMVB2_master_frame_event's id=59
//Chart_MasterShip_OneMVB2_master_turn_over_event's id=65
//Chart_MasterShip_OneMVB2_resign_event's id=67
//Chart_MasterShip_OneMVB2_start_find_timer's id=71
//Chart_MasterShip_OneMVB2_start_interim_timer's id=68
//Chart_MasterShip_OneMVB2_start_master_turn's id=63
//Chart_MasterShip_OneMVB2_start_standby_timer's id=60
//Chart_MasterShip_OneMVB2_stop_find_timer's id=72
//Chart_MasterShip_OneMVB2_stop_interim_timer's id=69
//Chart_MasterShip_OneMVB2_stop_master_turn's id=64
//Chart_MasterShip_OneMVB2_stop_standby_timer's id=61
//Chart_MasterShip_OneMVB2_trigger_freq_event's id=66
//Chart_Master_Frame_Input's id=53
//Chart_bemaster_response_event's id=50
//Chart_status_response_event's id=54
//sec's id=40

int Chart_BAitr = 0;
int Chart_BAlen = 2;
int Chart_CNMasterShip = 1;
int Chart_CNStatusRequest = 2;
int Chart_CurrentMasterId = 1;
int Chart_MasterShip_OneMVB1_CNACT = 1;
int Chart_MasterShip_OneMVB1_CNMVBId = 1;
int Chart_MasterShip_OneMVB1_LOGIC_HasMasterFrame = 0;
int Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounter[1];
int Chart_MasterShip_OneMVB1_Timer_AController_DC_run = 0;
int Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounter[1];
int Chart_MasterShip_OneMVB1_Timer_AController_EC_run = 0;
int Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounter[1];
int Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounter[1];
int Chart_MasterShip_OneMVB1_Timer_BController_AC_run = 0;
int Chart_MasterShip_OneMVB1_Timer_BController_AC_turn = 0;
int Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounter[1];
int Chart_MasterShip_OneMVB1_Timer_BController_BC_run = 0;
int Chart_MasterShip_OneMVB1_Timer_BController_BC_turn = 0;
int Chart_MasterShip_OneMVB1_Timer_BController_CC_canpatch = 0;
int Chart_MasterShip_OneMVB2_CNACT = 1;
int Chart_MasterShip_OneMVB2_CNMVBId = 2;
int Chart_MasterShip_OneMVB2_LOGIC_HasMasterFrame = 0;
int Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounter[1];
int Chart_MasterShip_OneMVB2_Timer_AController_DC_run = 0;
int Chart_MasterShip_OneMVB2_Timer_AController_DC_turn = 0;
int Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounter[1];
int Chart_MasterShip_OneMVB2_Timer_AController_EC_run = 0;
int Chart_MasterShip_OneMVB2_Timer_AController_EC_turn = 0;
int Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounter[1];
int Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounter[1];
int Chart_MasterShip_OneMVB2_Timer_BController_AC_run = 0;
int Chart_MasterShip_OneMVB2_Timer_BController_AC_turn = 0;
int Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounter[1];
int Chart_MasterShip_OneMVB2_Timer_BController_BC_run = 0;
int Chart_MasterShip_OneMVB2_Timer_BController_BC_turn = 0;
int Chart_MasterShip_OneMVB2_Timer_BController_CC_canpatch = 0;
int Chart_MasterShip_OneMVB2_run = 0;
int Chart_ReqId = 0;
int Chart_RevMVBId = 0;
int Chart_T_RMTurn = 8;
int Chart_T_alive = 2;
int Chart_error = 0;
int Chart_master_frame_error = 0;
int Chart_resign = 0;
int Chart_status_response_type = 0;
int Chart_valid_master_frame = 1;
int Chart_valid_master_input = 1;
int mChartChildPath[1];
int mChartPathSelect[1];
const int mChartPathSelectLength = 1;
int mChart_MasterShip_OneMVB1_ChnannelChildPath[1];
int mChart_MasterShip_OneMVB1_ChnannelPathSelect[1];
const int mChart_MasterShip_OneMVB1_ChnannelPathSelectLength = 1;
int mChart_MasterShip_OneMVB1_LOGICChildPath[4];
int mChart_MasterShip_OneMVB1_LOGICPathSelect[4];
const int mChart_MasterShip_OneMVB1_LOGICPathSelectLength = 4;
int mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[1];
int mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[1];
const int mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelectLength = 1;
int mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[1];
int mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[1];
const int mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelectLength = 1;
int mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerChildPath[1];
int mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect[1];
const int mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelectLength = 1;
int mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[1];
int mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[1];
const int mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelectLength = 1;
int mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[1];
int mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[1];
const int mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelectLength = 1;
int mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[1];
int mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect[1];
const int mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelectLength = 1;
int mChart_MasterShip_OneMVB2_ChnannelChildPath[1];
int mChart_MasterShip_OneMVB2_ChnannelPathSelect[1];
const int mChart_MasterShip_OneMVB2_ChnannelPathSelectLength = 1;
int mChart_MasterShip_OneMVB2_LOGICChildPath[4];
int mChart_MasterShip_OneMVB2_LOGICPathSelect[4];
const int mChart_MasterShip_OneMVB2_LOGICPathSelectLength = 4;
int mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[1];
int mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[1];
const int mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelectLength = 1;
int mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[1];
int mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[1];
const int mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelectLength = 1;
int mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerChildPath[1];
int mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect[1];
const int mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelectLength = 1;
int mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[1];
int mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[1];
const int mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelectLength = 1;
int mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[1];
int mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[1];
const int mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelectLength = 1;
int mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[1];
int mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect[1];
const int mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelectLength = 1;
bool mIfIncArray[10];
int mIfIncArrayLength = 10;

void ClearChartPathSelect()
{
    int i = mChartPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChartPathSelect[i] = 1;
        i--;
    }
}

void ClearChartPathSelectAtDepth(int depth)
{
    mChartPathSelect[depth] = 1;
}

void ClearChart_MasterShip_OneMVB1_ChnannelPathSelect()
{
    int i = mChart_MasterShip_OneMVB1_ChnannelPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB1_ChnannelPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB1_ChnannelPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB1_ChnannelPathSelect[depth] = 1;
}

void ClearChart_MasterShip_OneMVB1_LOGICPathSelect()
{
    int i = mChart_MasterShip_OneMVB1_LOGICPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB1_LOGICPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB1_LOGICPathSelect[depth] = 1;
}

void ClearChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect()
{
    int i = mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB1_Timer_AController_DCPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[depth] = 1;
}

void Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounterCleaner()
{
    int i=0;
    while(i&gt;=0){
        Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounter[i]=0;
        i--;
    }
}

int Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounterIdTranslate(int evtid)
{
    if (evtid == 40){return 0;}
    return -1;
}

void Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounterInc()
{
    int evtid = -1;
    int evtpos = -1;
    if ((mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mEvent;}
    if ((evtid == -1) &amp;&amp; (mExecutionStack[mExecutionStackTop].mInfo &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mInfo;}
    if (evtid == -1){return;}
    evtpos = Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounterIdTranslate(evtid);
    if (evtpos == -1){return;}
    Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounter[evtpos]++;
}

void ClearChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect()
{
    int i = mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB1_Timer_AController_ECPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[depth] = 1;
}

void Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounterCleaner()
{
    int i=0;
    while(i&gt;=0){
        Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounter[i]=0;
        i--;
    }
}

int Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounterIdTranslate(int evtid)
{
    if (evtid == 40){return 0;}
    return -1;
}

void Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounterInc()
{
    int evtid = -1;
    int evtpos = -1;
    if ((mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mEvent;}
    if ((evtid == -1) &amp;&amp; (mExecutionStack[mExecutionStackTop].mInfo &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mInfo;}
    if (evtid == -1){return;}
    evtpos = Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounterIdTranslate(evtid);
    if (evtpos == -1){return;}
    Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounter[evtpos]++;
}

void ClearChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect()
{
    int i = mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect[depth] = 1;
}

void Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounterCleaner()
{
    int i=0;
    while(i&gt;=0){
        Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounter[i]=0;
        i--;
    }
}

int Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounterIdTranslate(int evtid)
{
    if (evtid == 40){return 0;}
    return -1;
}

void Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounterInc()
{
    int evtid = -1;
    int evtpos = -1;
    if ((mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mEvent;}
    if ((evtid == -1) &amp;&amp; (mExecutionStack[mExecutionStackTop].mInfo &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mInfo;}
    if (evtid == -1){return;}
    evtpos = Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounterIdTranslate(evtid);
    if (evtpos == -1){return;}
    Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounter[evtpos]++;
}

void ClearChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect()
{
    int i = mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB1_Timer_BController_ACPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[depth] = 1;
}

void Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounterCleaner()
{
    int i=0;
    while(i&gt;=0){
        Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounter[i]=0;
        i--;
    }
}

int Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounterIdTranslate(int evtid)
{
    if (evtid == 40){return 0;}
    return -1;
}

void Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounterInc()
{
    int evtid = -1;
    int evtpos = -1;
    if ((mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mEvent;}
    if ((evtid == -1) &amp;&amp; (mExecutionStack[mExecutionStackTop].mInfo &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mInfo;}
    if (evtid == -1){return;}
    evtpos = Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounterIdTranslate(evtid);
    if (evtpos == -1){return;}
    Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounter[evtpos]++;
}

void ClearChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect()
{
    int i = mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB1_Timer_BController_BCPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[depth] = 1;
}

void Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounterCleaner()
{
    int i=0;
    while(i&gt;=0){
        Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounter[i]=0;
        i--;
    }
}

int Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounterIdTranslate(int evtid)
{
    if (evtid == 40){return 0;}
    return -1;
}

void Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounterInc()
{
    int evtid = -1;
    int evtpos = -1;
    if ((mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mEvent;}
    if ((evtid == -1) &amp;&amp; (mExecutionStack[mExecutionStackTop].mInfo &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mInfo;}
    if (evtid == -1){return;}
    evtpos = Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounterIdTranslate(evtid);
    if (evtpos == -1){return;}
    Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounter[evtpos]++;
}

void ClearChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect()
{
    int i = mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB1_Timer_BController_CCPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect[depth] = 1;
}

void ClearChart_MasterShip_OneMVB2_ChnannelPathSelect()
{
    int i = mChart_MasterShip_OneMVB2_ChnannelPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB2_ChnannelPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB2_ChnannelPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB2_ChnannelPathSelect[depth] = 1;
}

void ClearChart_MasterShip_OneMVB2_LOGICPathSelect()
{
    int i = mChart_MasterShip_OneMVB2_LOGICPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB2_LOGICPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB2_LOGICPathSelect[depth] = 1;
}

void ClearChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect()
{
    int i = mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB2_Timer_AController_DCPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[depth] = 1;
}

void Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounterCleaner()
{
    int i=0;
    while(i&gt;=0){
        Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounter[i]=0;
        i--;
    }
}

int Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounterIdTranslate(int evtid)
{
    if (evtid == 40){return 0;}
    return -1;
}

void Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounterInc()
{
    int evtid = -1;
    int evtpos = -1;
    if ((mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mEvent;}
    if ((evtid == -1) &amp;&amp; (mExecutionStack[mExecutionStackTop].mInfo &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mInfo;}
    if (evtid == -1){return;}
    evtpos = Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounterIdTranslate(evtid);
    if (evtpos == -1){return;}
    Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounter[evtpos]++;
}

void ClearChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect()
{
    int i = mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB2_Timer_AController_ECPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[depth] = 1;
}

void Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounterCleaner()
{
    int i=0;
    while(i&gt;=0){
        Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounter[i]=0;
        i--;
    }
}

int Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounterIdTranslate(int evtid)
{
    if (evtid == 40){return 0;}
    return -1;
}

void Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounterInc()
{
    int evtid = -1;
    int evtpos = -1;
    if ((mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mEvent;}
    if ((evtid == -1) &amp;&amp; (mExecutionStack[mExecutionStackTop].mInfo &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mInfo;}
    if (evtid == -1){return;}
    evtpos = Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounterIdTranslate(evtid);
    if (evtpos == -1){return;}
    Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounter[evtpos]++;
}

void ClearChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect()
{
    int i = mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect[depth] = 1;
}

void Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounterCleaner()
{
    int i=0;
    while(i&gt;=0){
        Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounter[i]=0;
        i--;
    }
}

int Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounterIdTranslate(int evtid)
{
    if (evtid == 40){return 0;}
    return -1;
}

void Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounterInc()
{
    int evtid = -1;
    int evtpos = -1;
    if ((mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mEvent;}
    if ((evtid == -1) &amp;&amp; (mExecutionStack[mExecutionStackTop].mInfo &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mInfo;}
    if (evtid == -1){return;}
    evtpos = Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounterIdTranslate(evtid);
    if (evtpos == -1){return;}
    Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounter[evtpos]++;
}

void ClearChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect()
{
    int i = mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB2_Timer_BController_ACPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[depth] = 1;
}

void Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounterCleaner()
{
    int i=0;
    while(i&gt;=0){
        Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounter[i]=0;
        i--;
    }
}

int Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounterIdTranslate(int evtid)
{
    if (evtid == 40){return 0;}
    return -1;
}

void Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounterInc()
{
    int evtid = -1;
    int evtpos = -1;
    if ((mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mEvent;}
    if ((evtid == -1) &amp;&amp; (mExecutionStack[mExecutionStackTop].mInfo &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mInfo;}
    if (evtid == -1){return;}
    evtpos = Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounterIdTranslate(evtid);
    if (evtpos == -1){return;}
    Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounter[evtpos]++;
}

void ClearChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect()
{
    int i = mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB2_Timer_BController_BCPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[depth] = 1;
}

void Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounterCleaner()
{
    int i=0;
    while(i&gt;=0){
        Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounter[i]=0;
        i--;
    }
}

int Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounterIdTranslate(int evtid)
{
    if (evtid == 40){return 0;}
    return -1;
}

void Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounterInc()
{
    int evtid = -1;
    int evtpos = -1;
    if ((mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mEvent;}
    if ((evtid == -1) &amp;&amp; (mExecutionStack[mExecutionStackTop].mInfo &gt;= vValidEventBase)){evtid = mExecutionStack[mExecutionStackTop].mInfo;}
    if (evtid == -1){return;}
    evtpos = Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounterIdTranslate(evtid);
    if (evtpos == -1){return;}
    Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounter[evtpos]++;
}

void ClearChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect()
{
    int i = mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelectLength-1;
    while (i &gt;= 0)
    {
        mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect[i] = 1;
        i--;
    }
}

void ClearChart_MasterShip_OneMVB2_Timer_BController_CCPathSelectAtDepth(int depth)
{
    mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect[depth] = 1;
}

int IfIncIdx(int stateid)
{
    if (stateid == 2){return 0;}
    if (stateid == 3){return 1;}
    if (stateid == 4){return 2;}
    if (stateid == 5){return 3;}
    if (stateid == 6){return 4;}
    if (stateid == 7){return 5;}
    if (stateid == 8){return 6;}
    if (stateid == 9){return 7;}
    if (stateid == 10){return 8;}
    if (stateid == 11){return 9;}
    return -1;
}

bool IfIncWFunc(int stateid)
{
    int pos = IfIncIdx(stateid);
    if (pos == -1){return false;}
    return mIfIncArray[pos];
}

void SetAllIfIncToTrue()
{
    int i = mIfIncArrayLength-1;
    while(i&gt;=0){
        mIfIncArray[i]=true;
        i--;
    }
}

void SetOneIfIncToFalse(int stateid)
{
    int pos = IfIncIdx(stateid);
    if (pos == -1){return;}
    mIfIncArray[pos] = false;
}

void WhichInvokeForStateIdAndEvtId(int stateid)
{
    if (stateid == -1){return;}
    if (stateid == 2 &amp;&amp; IfIncWFunc(2)){Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounterInc();}
    if (stateid == 3 &amp;&amp; IfIncWFunc(3)){Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounterInc();}
    if (stateid == 4 &amp;&amp; IfIncWFunc(4)){Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounterInc();}
    if (stateid == 5 &amp;&amp; IfIncWFunc(5)){Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounterInc();}
    if (stateid == 6 &amp;&amp; IfIncWFunc(6)){Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounterInc();}
    if (stateid == 7 &amp;&amp; IfIncWFunc(7)){Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounterInc();}
    if (stateid == 8 &amp;&amp; IfIncWFunc(8)){Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounterInc();}
    if (stateid == 9 &amp;&amp; IfIncWFunc(9)){Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounterInc();}
    if (stateid == 10 &amp;&amp; IfIncWFunc(10)){Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounterInc();}
    if (stateid == 11 &amp;&amp; IfIncWFunc(11)){Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounterInc();}
}


int GetStackTopInfo()
{
    return mExecutionStack[mExecutionStackTop].mInfo;
}

int GetStackTopDest()
{
    return mExecutionStack[mExecutionStackTop].mDest;
}

bool JVSETrigger()
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent == eTrigger;
}

bool JTopStackInValid()
{
    return mExecutionStackTop&gt;=0 &amp;&amp; !mExecutionStack[mExecutionStackTop].mValid;
}

void PushOneEvent(int event,int dest,int destCPosition,int info,bool valid,int automatonType,int cEPosition,int pahse)
{
    int stateid = dest;
    if (dest == -1)
    {
        return;
    }
    mExecutionStackTop++;
    mExecutionStack[mExecutionStackTop].mEvent = event;
    mExecutionStack[mExecutionStackTop].mDest = dest;
    mExecutionStack[mExecutionStackTop].mDestCPosition = destCPosition;
    mExecutionStack[mExecutionStackTop].mInfo = info;
    mExecutionStack[mExecutionStackTop].mValid = valid;
    mExecutionStack[mExecutionStackTop].mAutomatonType = automatonType;
    mExecutionStack[mExecutionStackTop].mCEPosition = cEPosition;
    mExecutionStack[mExecutionStackTop].mPahse = pahse;
}

void PopOneEvent()
{
    mExecutionStackTop--;
}

//may be unused.
//too many state to verify.
//state space explosion.
void InvalidAllEventsRelatedWithStateId(int stateid)
{
    int i = mExecutionStackTop;
    while (i &gt;= 0)
    {
        if (mExecutionStack[i].mDest == stateid)
        {
             mExecutionStack[i].mValid = false;
        }
    }
}

void MSEAutoDest(int autoState)
{
    mExecutionStack[mExecutionStackTop].mDest = autoState;
}

void MSEAutoType(int autoType)
{
    mExecutionStack[mExecutionStackTop].mAutomatonType = autoType;
}

void MSEAutoInfo(int autoInfo)
{
    mExecutionStack[mExecutionStackTop].mInfo = autoInfo;
}

void ResetControllerActionAutomaton(int stateid)
{
    PushOneEvent(eTransToStateDirectly,stateid,-1,iTransOnlyBack,true,aControllerActionAutomaton,-1,-1);
}

void ResetCommonAutomaton(int stateid)
{
    PushOneEvent(eTransToStateDirectly,stateid,-1,iTransOnlyBack,true,aCommonAutomaton,-1,-1);
}

void ResetConditionAutomaton(int stateid,int childstateid)
{
    PushOneEvent(eTransToStateDirectly,stateid,childstateid,-1,true,aConditionalAutomaton ,-1,-1);
}

void RecordTopStackInfoAndPopUp()
{
    mStackTopDestChildRecord = mExecutionStack[mExecutionStackTop].mDestCPosition;
    // &amp;&amp; mExecutionStack[mExecutionStackTop].mInfo &gt; 0; the judge concat to the back of the following judgement.
    if ((mExecutionStack[mExecutionStackTop].mEvent == eActivation || mExecutionStack[mExecutionStackTop].mEvent == eDeActivation))
    {
        mStackTopEventIdRecord = mExecutionStack[mExecutionStackTop].mInfo;
    }
    else
    {
        if (mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)
        {
            mStackTopEventIdRecord = mExecutionStack[mExecutionStackTop].mEvent;
        }
        else
        {
            mStackTopEventIdRecord = -1;
        }
    }
    PopOneEvent();
}

void RecordTopStackInfoAndNotPopUp()
{
    mStackTopDestChildRecord = mExecutionStack[mExecutionStackTop].mDestCPosition;
    // &amp;&amp; mExecutionStack[mExecutionStackTop].mInfo &gt; 0; the judge concat to the back of the following judgement.
    if ((mExecutionStack[mExecutionStackTop].mEvent == eActivation || mExecutionStack[mExecutionStackTop].mEvent == eDeActivation))
    {
        mStackTopEventIdRecord = mExecutionStack[mExecutionStackTop].mInfo;
    }
    else
    {
        if (mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase)
        {
            mStackTopEventIdRecord = mExecutionStack[mExecutionStackTop].mEvent;
        }
        else
        {
            mStackTopEventIdRecord = -1;
        }
    }
}

void DispatchInstantEvent(int event,int dest,int autotype)
{
	PushOneEvent(event,dest,-1,-1,true,autotype,-1,-1);
}

void DispatchFuncEvent(int event,int dest,int info)
{
    PushOneEvent(event,dest,-1,info,true,aControllerAutomaton,-1,-1);
}

void DispatchEvent(int event,int dest,int info,int automaton)
{
    PushOneEvent(event,dest,-1,info,true,automaton,-1,-1);
}

void DispatchControllerEventJudgeDuplicate(int event,int dest,int info)
{
    if (mExecutionStackTop &lt; 0 || (mExecutionStack[mExecutionStackTop].mDest != dest &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent != event))
    {
        PushOneEvent(event,dest,-1,info,true,aControllerAutomaton,-1,-1);
    }
}

void PathTryDelEvtIfOver(int parentstate,int trystate,int pathlen)
{
    if (mExecutionStack[mExecutionStackTop].mInfo == 0)
    {
        PushOneEvent(eTransToStateDirectly,parentstate,trystate,-1,true,aConditionalAutomaton,-1,-1);
    }
    mExecutionStack[mExecutionStackTop].mAutomatonType = aConditionalAutomaton;
    mExecutionStack[mExecutionStackTop].mInfo++;
    if (mExecutionStack[mExecutionStackTop].mInfo == pathlen)
    {
        PopOneEvent();
    }
}
//Functions commonly used by controller.

//Activation Helper Function
//Stack Top Judge if Activation is On Stack(should not be consumed).
bool JVSAO(int stateid,int automatonType)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mValid &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == stateid &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent == eActivation &amp;&amp; mExecutionStack[mExecutionStackTop].mInfo &lt; 0 &amp;&amp; mExecutionStack[mExecutionStackTop].mAutomatonType == automatonType;
}

//Judge if Activation should be stopped.
bool JVSAH(int automatonType)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mValid &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == mActStopStateID &amp;&amp; mExecutionStack[mExecutionStackTop].mAutomatonType == automatonType;
}

bool JVSAL(int stateid,int automatonType)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mValid &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == stateid &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent == eActivation &amp;&amp; mExecutionStack[mExecutionStackTop].mInfo &gt;= 0 &amp;&amp; mExecutionStack[mExecutionStackTop].mAutomatonType == automatonType;
}

//Stack Top Judge if Activation should be Consumed(Leaved).

//active stop dispatching events.
void ActivationStopDispatch(bool nativeactive)
{
	if (nativeactive)
	{
		PopOneEvent();
	}
}

//Modified OnStack state to Consumed(Leaved)
void MSO2L()
{
    if (mExecutionStack[mExecutionStackTop].mInfo &lt; 0)
    {
        mExecutionStack[mExecutionStackTop].mInfo = -mExecutionStack[mExecutionStackTop].mInfo;
    }
}

//DeActivation Helper Function
//Stack Top Judge if Activation is On Stack(should not be consumed).
bool JVSDaO(int stateid,int automatonType)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mValid &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == stateid &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent == eDeActivation &amp;&amp; mExecutionStack[mExecutionStackTop].mInfo &lt; 0 &amp;&amp; mExecutionStack[mExecutionStackTop].mAutomatonType == automatonType;
}

bool JVSDaH(int automatonType)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mValid &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == mExecutionStack[mExecutionStackTop].mInfo &amp;&amp; mExecutionStack[mExecutionStackTop].mAutomatonType == automatonType;
}

//Stack Top Judge if Activation should be Consumed(Leaved).
bool JVSDaL(int stateid,int automatonType)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mValid &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == stateid &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent == eDeActivation &amp;&amp; mExecutionStack[mExecutionStackTop].mInfo &gt;= 0 &amp;&amp; mExecutionStack[mExecutionStackTop].mAutomatonType == automatonType;
}

bool JVSTD(int parentstateid,int automatonType)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mValid &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == parentstateid &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent == eTransToStateDirectly &amp;&amp; mExecutionStack[mExecutionStackTop].mAutomatonType == automatonType;
}

bool JVT2I(int parentstateid,int automatonType)
{
    return JVSTD(parentstateid,automatonType);
    //JVSDaL(parentstateid,automatonType) || 
}

bool JVI2T(int parentstateid,int uppaalorsfstateid,int automatonType)
{
    return JVSTD(parentstateid,automatonType) &amp;&amp; mExecutionStack[mExecutionStackTop].mDestCPosition == uppaalorsfstateid;
}

bool JVSE2MForAll(int stateid,int automatonType)
{
	return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == stateid &amp;&amp; mExecutionStack[mExecutionStackTop].mValid &amp;&amp; mExecutionStack[mExecutionStackTop].mAutomatonType == automatonType;
}

bool NotDeactiveAndActiveRelatedEvents()
{
	return mExecutionStack[mExecutionStackTop].mEvent != eActivation &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent != eDeActivation &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent != eExitActionOver;
}

bool JVSE2M(int stateid,int automatonType)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == stateid &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent &gt;= vValidEventBase &amp;&amp; mExecutionStack[mExecutionStackTop].mValid &amp;&amp; mExecutionStack[mExecutionStackTop].mAutomatonType == automatonType;
}

bool JVSEF(int evtid)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent == evtid;
}

bool JVSEF2M(int stateid,int evtid,int automatonType)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == stateid &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent == evtid &amp;&amp; mExecutionStack[mExecutionStackTop].mValid &amp;&amp; mExecutionStack[mExecutionStackTop].mAutomatonType == automatonType;
}

bool JVSEDestPos(int destcpos)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mDestCPosition == destcpos;
}

void DelEvtIfOnlyBack()
{
    if (mExecutionStack[mExecutionStackTop].mEvent == eTransToStateDirectly &amp;&amp; mExecutionStack[mExecutionStackTop].mInfo == iTransOnlyBack)
    {
        PopOneEvent();
    }
}

//question:
//mDeactStopStateID does this should put into stack frame?????
//deacive
void Deactive(int begindeactiveid,int stopdeactiveid)
{
    PushOneEvent(eDeActivation,begindeactiveid,-1,-stopdeactiveid,true,aControllerAutomaton,-1,-1);
}

//question:
//mActStopStateID does this should put into stack frame?????
//active
void Active(int beginactiveid,int stopactiveid)
{
	int info = -1;
	if (mStackTopEventIdRecord &gt;= vValidEventBase)
	{
		info = -mStackTopEventIdRecord;
	}
	if (mExecutionStackTop &lt; 0)
	{
		info = -eTrigger;
	}
    PushOneEvent(eActivation,beginactiveid,-1,info,true,aControllerAutomaton,-1,-1);
    mActStopStateID = stopactiveid;
}

bool JNSEDispatchToSelfController(int stateid)
{
    return mExecutionStackTop&gt;=0 &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent == eDispathToSelfLogic &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == stateid &amp;&amp; mExecutionStack[mExecutionStackTop].mInfo == -1 &amp;&amp; mExecutionStack[mExecutionStackTop].mValid &amp;&amp; mExecutionStack[mExecutionStackTop].mAutomatonType == aControllerAutomaton;
}

void MNSESelfLogicOver(bool nativeactive)
{
    //pop up eDispatchToSelfLogic event if have.
    int info = mExecutionStack[mExecutionStackTop].mInfo;
    if (mExecutionStack[mExecutionStackTop].mEvent == eDispathToSelfLogic)
    {
        PopOneEvent();
    }
    if (!nativeactive)
    {
        PopOneEvent();
    }
    else
    {
    	DispatchEvent(eSelfLogicOver,GetStackTopDest(),info,aControllerAutomaton);
    }
}

void FirstRoundEventDispatchHandle(bool hasControllerAction, int stateid, bool parentparallel, bool childparallel, int activechildid)
{
    bool runduring = false;
    if (mExecutionStack[mExecutionStackTop].mInfo &lt; 0)
    {
        mExecutionStack[mExecutionStackTop].mInfo = -1;
        DispatchEvent(eDispathToSelfLogic,stateid,-1,aControllerAutomaton);
        runduring = true;
    }
    else
    {
        if (mExecutionStack[mExecutionStackTop].mInfo != stateid)
        {
            if (!childparallel)
            {
                if (activechildid == mExecutionStack[mExecutionStackTop].mInfo)
                {
                    mExecutionStack[mExecutionStackTop].mInfo = -1;
                    DispatchEvent(eDispathToSelfLogic,stateid,-1,aControllerAutomaton);
                }
                else
                {
                    PopOneEvent();
                }
            }
            else
            {
                mExecutionStack[mExecutionStackTop].mDest = mExecutionStack[mExecutionStackTop].mInfo;
            }
        }
        else
        {
            runduring = true;
            if (parentparallel)
            {
                mExecutionStack[mExecutionStackTop].mInfo = iOnlyToThisState;
                DispatchEvent(eDispathToSelfLogic,stateid,iOnlyToThisState,aControllerAutomaton);
            }
            else
            {
                mExecutionStack[mExecutionStackTop].mInfo = -1;
                DispatchEvent(eDispathToSelfLogic,stateid,-1,aControllerAutomaton);
            }
        }
    }
    if (hasControllerAction &amp;&amp; runduring)
    {
        PushOneEvent(eDuring,stateid,-1,-1,true,aControllerActionAutomaton,-1,-1);
        PushOneEvent(eTransToStateDirectly,stateid,-1,iTransOnlyBack,true,aControllerActionAutomaton,-1,-1);
    }
}

bool JNSESelfLogicOver(int stateid)
{
    return JVSE2MForAll(stateid,aControllerAutomaton) &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent == eSelfLogicOver;
}

void MNSEDispatchToSelfLogic(bool nativeactive,int parentstateid,bool isChildSequence,bool hasControllerAction,bool isLoseControl)
{
    //pop up during judge over if have.
    if (mExecutionStack[mExecutionStackTop].mEvent == eDispathToSelfLogic &amp;&amp; mExecutionStack[mExecutionStackTop].mDest == parentstateid)
    {
        PopOneEvent();
    }
    if (!nativeactive)
    {
        PopOneEvent();
    }
    else
    {
        if (mExecutionStack[mExecutionStackTop].mInfo &lt; 0 &amp;&amp; isChildSequence &amp;&amp; !isLoseControl)
        {
        	//let this driven event run by common automaton.
            MSEAutoType(aCommonAutomaton);
        }
        else
        {
            MNSESelfLogicOver(nativeactive);
        }
    }
}

void MNSEDispatchToChild(int childstateid,bool haschild)
{
    int event = -1;
    int stateid  = -1;
    int info = -1;
    PopOneEvent();
    //pop eSelfLogicOver.
    //this function is invoked before the below function and must be invoked imediately just after self logic is over.
    stateid  = mExecutionStack[mExecutionStackTop].mDest;
    event = mExecutionStack[mExecutionStackTop].mEvent;
    info = mExecutionStack[mExecutionStackTop].mInfo;
    //here don't pop up the driven event
    if (childstateid != -1)
    {
        DispatchEvent(eChildOver,stateid,info,aControllerAutomaton);
        if (info &lt; 0)
        {
        	info = -1;
        }
        DispatchEvent(event,childstateid,info,aControllerAutomaton);
    }
    else
    {
    	DispatchEvent(eChildOver,stateid,info,aControllerAutomaton);
    }
}

void MNSEDispatchToParallel(int nextstateid)
{
	int event = -1;
    int info = -1;
    //pop up child judge over if have.
    if (mExecutionStack[mExecutionStackTop].mEvent == eChildOver)
    {
        PopOneEvent();
    }
    event = mExecutionStack[mExecutionStackTop].mEvent;
    info = mExecutionStack[mExecutionStackTop].mInfo;
    PopOneEvent();
    //here pop up the driven event.
    if (nextstateid != -1 &amp;&amp; info != iOnlyToThisState)
    {
        DispatchEvent(event,nextstateid,info,aControllerAutomaton);
    }
}

void GenerateDrivenEvent(int chartid)
{
    PushOneEvent(eTrigger,chartid,-1,-1,true,aControllerAutomaton,-1,-1);
}

bool IsStackEmpty()
{
    return mExecutionStackTop &lt;= -1;
}

void HandleeDefaultActivation(bool parallel,int firstchildstateid)
{
    int drivenevent = mExecutionStack[mExecutionStackTop].mInfo;
    int parentstateid = mExecutionStack[mExecutionStackTop].mDest;
    PopOneEvent();
    if (parallel)
    {
        DispatchControllerEventJudgeDuplicate(eActivation,firstchildstateid,drivenevent);
    }
    else
    {
        DispatchEvent(drivenevent,parentstateid,iActivationDrivenEvent,aCommonAutomaton);
    }
}

void ChildStateFunction(bool haschilds,bool parallel,int firstchildstateid)
{
    int drivenevent = mExecutionStack[mExecutionStackTop].mInfo;
    int parentstateid = mExecutionStack[mExecutionStackTop].mDest;
    PopOneEvent();
    if (!haschilds)
    {
    	return;
    }
    if (parallel)
    {
        DispatchControllerEventJudgeDuplicate(eActivation,firstchildstateid,drivenevent);
    }
    else
    {
        if (mExecutionStack[mExecutionStackTop].mEvent != eActivation)
        {
            DispatchEvent(eDefaultActivation,parentstateid,drivenevent,aControllerAutomaton);
        }
    }
}

void ChildStateFunctionWithoutConsiderPreviousEvent(bool shoulddefaultactivation,bool haschilds,bool parallel,int firstchildstateid,int drivenevent,int parentstateid)
{
	if (!haschilds)
    {
    	return;
    }
    if (parallel)
    {
        DispatchControllerEventJudgeDuplicate(eActivation,firstchildstateid,drivenevent);
    }
    else
    {
        if (shoulddefaultactivation)
        {
            DispatchEvent(eDefaultActivation,parentstateid,drivenevent,aControllerAutomaton);
        }
    }
}

//This function is invoked in the process of activation.
//And because when activation the state must be deactive.
//So transfer to child state is always harmless.
//Even the state is on specified state wanted to transferred,This function still doesn't have harm.
void MVToCStateDirectly(int parentstateid,int pCEstateid,int autoType)
{
    if (parentstateid == -1)
    {
        return;
    }
    PushOneEvent(eTransToStateDirectly,parentstateid,pCEstateid,-1,true,autoType,-1,0);
}

//Firstly should delete eActivation event.
void HandleeActivation(int parentid,bool active,bool parallel,bool haschild,bool resetcommontodest,bool hasentry,int firstchildstateid)
{
    int drivenevent = mExecutionStack[mExecutionStackTop].mInfo;
    int stateid = mExecutionStack[mExecutionStackTop].mDest;
    if (active)
    {
        if (haschild)
        {
            ChildStateFunction(haschild,parallel,firstchildstateid);
        }
        else
        {
            PopOneEvent();
        }
    }
    else
    {
    	PopOneEvent();
        DispatchEvent(eActiveChild,stateid,drivenevent,aControllerAutomaton);
        if (hasentry)
        {
            DispatchInstantEvent(eActivation,stateid,aControllerActionAutomaton);
        }
        if (resetcommontodest)
        {
            MVToCStateDirectly(parentid,stateid,aCommonAutomaton);
        }
    }
}

void HandleeActiveChild(bool parentparllel,bool haschilds,bool parallel,int firstchildstateid)
{
    int drivenevent = mExecutionStack[mExecutionStackTop].mInfo;
    int stateid = mExecutionStack[mExecutionStackTop].mDest;
    bool shoulddefaultactivatoin = true;
    PopOneEvent();
    if (mExecutionStackTop &gt;= 0 &amp;&amp; mExecutionStack[mExecutionStackTop].mEvent == eActivation)
    {
        shoulddefaultactivatoin = false;
    }
    //pop up eActiveChild event, ChildStateFunction will pop up the event.
    if (parentparllel)
    {
        DispatchEvent(eActiveParallel,stateid,drivenevent,aControllerAutomaton);
    }
    ChildStateFunctionWithoutConsiderPreviousEvent(shoulddefaultactivatoin,haschilds,parallel,firstchildstateid,drivenevent,stateid);
}

void HandleeActiveParallel(int nextstateid)
{
    int drivenevent = mExecutionStack[mExecutionStackTop].mInfo;
    PopOneEvent();
    if (nextstateid != -1)
    {
    	DispatchControllerEventJudgeDuplicate(eActivation,nextstateid,drivenevent);
    }
}

//the following two function are all on stack, so info is negative.
void HandleSimpleDeactivation(int parentid)
{
    int stopid = -mExecutionStack[mExecutionStackTop].mInfo;
    PopOneEvent();
    if (stopid != parentid)
    {
        DispatchEvent(eDeActivation,parentid,stopid,aControllerAutomaton);
        //this dispatch to parent, so dispatch leave stack event.
    }
}

void HandleSimpleActivationOnStack(int parentid, int nowstateid)
{
    int drivenevent = mExecutionStack[mExecutionStackTop].mInfo;
    mExecutionStack[mExecutionStackTop].mInfo = -drivenevent;
    if (!JVSAH(aControllerAutomaton))
    {
        PushOneEvent(eActivation, parentid, nowstateid, drivenevent, true, aControllerAutomaton,-1,-1);
    }
}

void HandleSimpleActivationLeaveStack(int parentid, int nowstateid)
{
    PopOneEvent();
    MVToCStateDirectly(parentid,nowstateid,aCommonAutomaton);
}

void HandleInactiveInDeactivation(bool parentparallel,bool hasprevious,int previousid,int parentid)
{
    int stopid = mExecutionStack[mExecutionStackTop].mInfo;
    PopOneEvent();
    if (parentparallel &amp;&amp; hasprevious)
    {
        //sent to previous.
        DispatchEvent(eDeActivation,previousid,-stopid,aControllerAutomaton);
    }
    else
    {
        if (stopid != parentid)
        {
            DispatchEvent(eDeActivation,parentid,stopid,aControllerAutomaton);
            //this dispatch to parent, so dispatch leave stack event.
        }
    }
}

void HandleActiveInDeactivation(bool hasexitaction,bool haschild,bool parallel)
{
    int stopid = mExecutionStack[mExecutionStackTop].mInfo;
    int stateid = mExecutionStack[mExecutionStackTop].mDest;
    PopOneEvent();
    DispatchEvent(eExitActionOver,stateid,stopid,aControllerAutomaton);
    if (haschild &amp;&amp; !parallel)
    {
        ResetCommonAutomaton(stateid);
    }
    if (hasexitaction)
    {
    	DispatchEvent(eDeActivation,stateid,stopid,aControllerActionAutomaton);
    	ResetControllerActionAutomaton(stateid);
    }
}

void HandleeExitActionOver(bool parentparallel,bool hasprevious,int previousid,int parentid)
{
    int stopid = mExecutionStack[mExecutionStackTop].mInfo;
    int stateid = mExecutionStack[mExecutionStackTop].mDest;
    PopOneEvent();
    //pop up eExitActionOver event.
    //InvalidAllEventsRelatedWithStateId(stateid);
    if (parentparallel &amp;&amp; hasprevious)
    {
        DispatchEvent(eDeActivation,previousid,-stopid,aControllerAutomaton);
    }
    else
    {
    	if (stopid != parentid)
        {
            DispatchEvent(eDeActivation,parentid,stopid,aControllerAutomaton);
            //this dispatch to parent, so dispatch leave stack event.
        }
    }
}

void CommonActionEventConsumed(bool parentparentchildparallel,bool istargetstate)
{
    if (mExecutionStack[mExecutionStackTop].mInfo == iActivationDrivenEvent)
    {
        if (istargetstate)
        {
            RecordTopStackInfoAndPopUp();
        }
        else
        {
            RecordTopStackInfoAndNotPopUp();
        }
    }
    else
    {
        if (parentparentchildparallel)
        {
            RecordTopStackInfoAndNotPopUp();
            if (istargetstate)
            {
                DispatchEvent(eChildOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
            }
        }
        else
        {
            if (istargetstate)
            {
                RecordTopStackInfoAndPopUp();
            }
            else
            {
                RecordTopStackInfoAndNotPopUp();
            }
        }
    }
}
</declaration>

<template>
<name>all_controller</name>
<declaration>// Place local declarations here.
int mDrivenTime = 0;
bool mFirstActivated = false;
int mTotalTime = 0;
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">all_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="320" y="190">JTopStackInValid()</label>
    <label kind="assignment" x="320" y="205">PopOneEvent()</label>
    <nail x="160" y="190"/>
    <nail x="320" y="190"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="288" y="270">!mFirstActivated</label>
    <label kind="assignment" x="288" y="285">mFirstActivated=true,Active(1,1)</label>
    <nail x="192" y="270"/>
    <nail x="288" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="368" y="320">mFirstActivated&amp;&amp;IsStackEmpty() &amp;&amp; mDrivenTime &lt; 1</label>
    <label kind="assignment" x="368" y="335">mTotalTime=mTotalTime+1,mDrivenTime=mDrivenTime+1</label>
    <nail x="112" y="320"/>
    <nail x="368" y="320"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="448" y="370">mFirstActivated&amp;&amp;IsStackEmpty() &amp;&amp; mDrivenTime &gt;= 1 &amp;&amp; mTotalTime &lt;= 100</label>
    <label kind="assignment" x="448" y="385">mDrivenTime=mDrivenTime-1,SetAllIfIncToTrue(),GenerateDrivenEvent(1)</label>
    <nail x="32" y="370"/>
    <nail x="448" y="370"/>
</transition>
</template>
<template>
<name>junc_514</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_514_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(12,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(12,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,12)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(12,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,12)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(12,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_515</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_515_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(14,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(14,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,14)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(14,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,14)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(14,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_516</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_516_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(15,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(15,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,15)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(15,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,15)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(15,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_517</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_517_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(16,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(16,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,16)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(16,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,16)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(16,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_518</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_518_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(17,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(17,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,17)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(17,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,17)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(17,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_519</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_519_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(18,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(18,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,18)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(18,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,18)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(18,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_520</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_520_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(19,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(19,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,19)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(19,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,19)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(19,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_939</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_939_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(20,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(20,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,20)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(20,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,20)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(20,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_940</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_940_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(22,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(22,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,22)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(22,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,22)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(22,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_941</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_941_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(23,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(23,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,23)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(23,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,23)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(23,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_942</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_942_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(24,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(24,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,24)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(24,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,24)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(24,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_943</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_943_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(25,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(25,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,25)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(25,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,25)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(25,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_944</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_944_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(26,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(26,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,26)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(26,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,26)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(26,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>junc_945</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">junc_945_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(27,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(27,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,27)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(27,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,27)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(27,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChartHistoryState != -1;
}

int GHS()
{
    return mChartHistoryState;
}

bool IsLoseControl()
{
    return mChartLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Chart_ctrl_initial</name>
    <urgent/>
</location>
<location id="99983" x = "880" y = "210">
    <urgent/>
</location>
<location id="99982" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99983"/>
    <label kind="guard" x="528" y="276">JVSAO(1,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99983"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99983"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,-1,1,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(1,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(1,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(-1,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(1,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(false,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(1,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99982"/>
    <label kind="guard" x="84" y="374">JVSDaO(1,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99982"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99982"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSEF2M(1,eDeActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="125" y="555">PopOneEvent()</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(1,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 1,false,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(1,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 1,false,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(1,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),1,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(1)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(1,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">Chart_serial_initial</name>
    <urgent/>
</location>
<location id="28" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="240">(!mChartExistPath)&amp;&amp;JVSE2M(1,aCommonAutomaton)</label>
    <label kind="assignment" x="125" y="255">CommonAutomatonCommunicateWithControllerAndConditional(1,0),ClearChartPathSelect()</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="28"/>
    <label kind="guard" x="100" y="300">JVI2T(1,28,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="28"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(1,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="28"/>
    <label kind="guard" x="15" y="250">(mChartChildPath[0] == 0)&amp;&amp;(mChartExistPath)&amp;&amp;JVSE2M(1,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChartExistPath = false,mChartHistoryState=-1,mChartLoseControl=false,mChartHistoryState=28,mTryFindPath = false,CommonActionEventConsumed(false,true),Active(28,28)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="28"/>
    <target ref="28"/>
    <label kind="guard" x="125" y="480">(!mChartExistPath)&amp;&amp;JVSE2M(1,aCommonAutomaton)</label>
    <label kind="assignment" x="125" y="495">ReturnToController()</label>
    <nail x="5" y="380"/>
    <nail x="155" y="380"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShipHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShipHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShipLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">MasterShip_ctrl_initial</name>
    <urgent/>
</location>
<location id="99980" x = "880" y = "210">
    <urgent/>
</location>
<location id="99979" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99980"/>
    <label kind="guard" x="528" y="276">JVSAO(28,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99980"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99980"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,1,28,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(28,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(true,29)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(28,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(1,JNCRA(),true,true,true,false,29),(!JNCRA())?mChartHistoryState=28:mEmptyOp=0,MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(28,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(false,true,true,29)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(28,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99979"/>
    <label kind="guard" x="84" y="374">JVSDaO(28,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99979"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99979"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(30),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(28,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(false,false,-1,1)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(28,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,true),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(28,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(false,false,-1,1)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(28,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">FirstRoundEventDispatchHandle(false, 28,false,true,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(28,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 28,false,true,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(28,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(28)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(29,true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(28,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">MasterShip_parallel_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">JVSE2M(28,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">PopOneEvent()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1HistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1HistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1LoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">OneMVB1_ctrl_initial</name>
    <urgent/>
</location>
<location id="99977" x = "880" y = "210">
    <urgent/>
</location>
<location id="99976" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99977"/>
    <label kind="guard" x="528" y="276">JVSAO(29,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99977"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99977"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,28,29,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(29,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(true,13)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(29,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(28,JNCRA(),true,true,false,false,13),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(29,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,true,13)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(29,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(30)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99976"/>
    <label kind="guard" x="84" y="374">JVSDaO(29,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99976"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99976"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(31),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(29,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,false,-1,28)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(29,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,true),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(29,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,false,-1,28)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(29,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">FirstRoundEventDispatchHandle(false, 29,true,true,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(29,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 29,true,true,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(29,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(29)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(13,true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(29,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(30)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">OneMVB1_parallel_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">JVSE2M(29,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">PopOneEvent()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1_LOGICHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1_LOGICHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1_LOGICLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">LOGIC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99974" x = "880" y = "210">
    <urgent/>
</location>
<location id="99973" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99974"/>
    <label kind="guard" x="528" y="276">JVSAO(13,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99974"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99974"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,29,13,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(13,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(13,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(29,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(13,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(13,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(32)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99973"/>
    <label kind="guard" x="84" y="374">JVSDaO(13,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99973"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99973"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(13,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,false,-1,29)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(13,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(13,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,false,-1,29)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(13,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 13,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(13,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 13,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(13,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),13,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(13)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(13,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(32)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">LOGIC_serial_initial</name>
    <urgent/>
</location>
<location id="41" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_LOGIC_initial</name>
    <urgent/>
</location>
<location id="33" x = "-118" y = "434">
    <name x="-128" y="419">Chart_MasterShip_OneMVB1_LOGIC_Standby_Master</name>
    <urgent/>
</location>
<location id="12" x = "92" y = "609">
    <name x="82" y="594">SSID514</name>
    <urgent/>
</location>
<location id="17" x = "304" y = "769">
    <name x="294" y="754">SSID518</name>
    <urgent/>
</location>
<location id="14" x = "304" y = "769">
    <name x="294" y="754">SSID515</name>
    <urgent/>
</location>
<location id="36" x = "478" y = "679">
    <name x="468" y="664">Chart_MasterShip_OneMVB1_LOGIC_bt</name>
    <urgent/>
</location>
<location id="34" x = "962" y = "-321">
    <name x="952" y="-336">Chart_MasterShip_OneMVB1_LOGIC_Rrgular_Master</name>
    <urgent/>
</location>
<location id="99936" x = "599" y = "429">
    <urgent/>
</location>
<location id="99935" x = "720" y = "179">
    <urgent/>
</location>
<location id="99934" x = "841" y = "-71">
    <urgent/>
</location>
<location id="99932" x = "692" y = "-132">
    <urgent/>
</location>
<location id="16" x = "962" y = "-321">
    <name x="952" y="-336">SSID517</name>
    <urgent/>
</location>
<location id="15" x = "735" y = "-321">
    <name x="725" y="-336">SSID516</name>
    <urgent/>
</location>
<location id="99928" x = "712" y = "-321">
    <urgent/>
</location>
<location id="99926" x = "985" y = "-321">
    <urgent/>
</location>
<location id="39" x = "-516" y = "351">
    <name x="-526" y="336">Chart_MasterShip_OneMVB1_LOGIC_Find_Next</name>
    <urgent/>
</location>
<location id="99924" x = "485" y = "-186">
    <urgent/>
</location>
<location id="99923" x = "234" y = "-51">
    <urgent/>
</location>
<location id="99922" x = "-16" y = "83">
    <urgent/>
</location>
<location id="99921" x = "-266" y = "217">
    <urgent/>
</location>
<location id="37" x = "-705" y = "120">
    <name x="-715" y="105">Chart_MasterShip_OneMVB1_LOGIC_sr</name>
    <urgent/>
</location>
<location id="38" x = "-1955" y = "465">
    <name x="-1965" y="450">Chart_MasterShip_OneMVB1_LOGIC_Interim_Master</name>
    <urgent/>
</location>
<location id="99918" x = "-955" y = "189">
    <urgent/>
</location>
<location id="99917" x = "-1205" y = "258">
    <urgent/>
</location>
<location id="99916" x = "-1455" y = "327">
    <urgent/>
</location>
<location id="99915" x = "-1705" y = "396">
    <urgent/>
</location>
<location id="19" x = "-2203" y = "508">
    <name x="-2213" y="493">SSID520</name>
    <urgent/>
</location>
<location id="99913" x = "-2205" y = "508">
    <urgent/>
</location>
<location id="18" x = "-2176" y = "474">
    <name x="-2186" y="459">SSID519</name>
    <urgent/>
</location>
<location id="99910" x = "-2205" y = "475">
    <urgent/>
</location>
<location id="99907" x = "-2205" y = "508">
    <urgent/>
</location>
<location id="40" x = "-516" y = "351">
    <name x="-526" y="336">Chart_MasterShip_OneMVB1_LOGIC_T_F</name>
    <urgent/>
</location>
<location id="99902" x = "712" y = "-321">
    <urgent/>
</location>
<location id="35" x = "278" y = "523">
    <name x="268" y="508">Chart_MasterShip_OneMVB1_LOGIC_st</name>
    <urgent/>
</location>
<location id="99898" x = "28" y = "466">
    <urgent/>
</location>
<location id="99897" x = "-222" y = "409">
    <urgent/>
</location>
<location id="99896" x = "-472" y = "352">
    <urgent/>
</location>
<location id="99894" x = "54" y = "570">
    <urgent/>
</location>
<location id="99891" x = "132" y = "642">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(13,0),ClearChart_MasterShip_OneMVB1_LOGICPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="41"/>
    <label kind="guard" x="100" y="300">JVI2T(13,41,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="41"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(13,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="41"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB1_LOGICExistPath = false,mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=41,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="41"/>
    <target ref="41"/>
    <label kind="guard" x="150" y="500">(!mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="150" y="515">CommonAutomatonCommunicateWithControllerAndConditional(13,41),ClearChart_MasterShip_OneMVB1_LOGICPathSelect()</label>
    <nail x="-20" y="400"/>
    <nail x="180" y="400"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="33"/>
    <label kind="guard" x="-6" y="381">JVI2T(13,33,1)</label>
    <label kind="assignment" x="-6" y="396">PopOneEvent()</label>
    <nail x="24" y="281"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="0"/>
    <label kind="guard" x="-49" y="357">JVT2I(13,1)</label>
    <label kind="assignment" x="-49" y="372">DelEvtIfOnlyBack()</label>
    <nail x="-19" y="257"/>
</transition>
<transition>
    <source ref="41"/>
    <target ref="41"/>
    <label kind="guard" x="215" y="490">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="215" y="505">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="41"/>
    <target ref="33"/>
    <label kind="guard" x="-25" y="520">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 1)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-25" y="535">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=33,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(33,33)</label>
    <nail x="5" y="420"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="33"/>
    <label kind="guard" x="2" y="654">(!mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="2" y="669">CommonAutomatonCommunicateWithControllerAndConditional(13,33),ClearChart_MasterShip_OneMVB1_LOGICPathSelect()</label>
    <nail x="-268" y="554"/>
    <nail x="32" y="554"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="12"/>
    <label kind="guard" x="105" y="443">JVI2T(13,12,1)</label>
    <label kind="assignment" x="105" y="458">PopOneEvent()</label>
    <nail x="135" y="343"/>
</transition>
<transition>
    <source ref="12"/>
    <target ref="0"/>
    <label kind="guard" x="56" y="444">JVT2I(13,1)</label>
    <label kind="assignment" x="56" y="459">DelEvtIfOnlyBack()</label>
    <nail x="86" y="344"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="33"/>
    <label kind="guard" x="67" y="644">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="67" y="659">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(33,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-318" y="594"/>
    <nail x="82" y="594"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="12"/>
    <label kind="guard" x="-11" y="583">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 2)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-11" y="598">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=12,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="19" y="483"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="17"/>
    <label kind="guard" x="209" y="509">JVI2T(13,17,1)</label>
    <label kind="assignment" x="209" y="524">PopOneEvent()</label>
    <nail x="239" y="409"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="0"/>
    <label kind="guard" x="162" y="524">JVT2I(13,1)</label>
    <label kind="assignment" x="162" y="539">DelEvtIfOnlyBack()</label>
    <nail x="192" y="424"/>
</transition>
<transition>
    <source ref="12"/>
    <target ref="12"/>
    <label kind="guard" x="137" y="769">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 3)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="137" y="784">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="17" y="669"/>
    <nail x="167" y="669"/>
</transition>
<transition>
    <source ref="12"/>
    <target ref="17"/>
    <label kind="guard" x="198" y="750">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 3)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="198" y="765">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=17,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="228" y="650"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="14"/>
    <label kind="guard" x="209" y="509">JVI2T(13,14,1)</label>
    <label kind="assignment" x="209" y="524">PopOneEvent()</label>
    <nail x="239" y="409"/>
</transition>
<transition>
    <source ref="14"/>
    <target ref="0"/>
    <label kind="guard" x="162" y="524">JVT2I(13,1)</label>
    <label kind="assignment" x="162" y="539">DelEvtIfOnlyBack()</label>
    <nail x="192" y="424"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="17"/>
    <label kind="guard" x="374" y="949">(mChart_MasterShip_OneMVB1_LOGICChildPath[2] == 4)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="374" y="964">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="204" y="849"/>
    <nail x="404" y="849"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="14"/>
    <label kind="guard" x="274" y="869">(mChart_MasterShip_OneMVB1_LOGICChildPath[2] == 4)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="274" y="884">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=14,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="304" y="769"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="36"/>
    <label kind="guard" x="290" y="452">JVI2T(13,36,1)</label>
    <label kind="assignment" x="290" y="467">PopOneEvent()</label>
    <nail x="320" y="352"/>
</transition>
<transition>
    <source ref="36"/>
    <target ref="0"/>
    <label kind="guard" x="249" y="479">JVT2I(13,1)</label>
    <label kind="assignment" x="249" y="494">DelEvtIfOnlyBack()</label>
    <nail x="279" y="379"/>
</transition>
<transition>
    <source ref="14"/>
    <target ref="14"/>
    <label kind="guard" x="349" y="929">(mChart_MasterShip_OneMVB1_LOGICChildPath[3] == 5)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="349" y="944">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="229" y="829"/>
    <nail x="379" y="829"/>
</transition>
<transition>
    <source ref="14"/>
    <target ref="36"/>
    <label kind="guard" x="339" y="780">(mChart_MasterShip_OneMVB1_LOGICChildPath[3] == 5)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="339" y="795">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=36,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="369" y="680"/>
</transition>
<transition>
    <source ref="36"/>
    <target ref="36"/>
    <label kind="guard" x="548" y="859">(!mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="548" y="874">CommonAutomatonCommunicateWithControllerAndConditional(13,36),ClearChart_MasterShip_OneMVB1_LOGICPathSelect()</label>
    <nail x="378" y="759"/>
    <nail x="578" y="759"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="34"/>
    <label kind="guard" x="330" y="335">JVI2T(13,34,1)</label>
    <label kind="assignment" x="330" y="350">PopOneEvent()</label>
    <nail x="360" y="235"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="0"/>
    <label kind="guard" x="300" y="374">JVT2I(13,1)</label>
    <label kind="assignment" x="300" y="389">DelEvtIfOnlyBack()</label>
    <nail x="330" y="274"/>
</transition>
<transition>
    <source ref="36"/>
    <target ref="36"/>
    <label kind="guard" x="613" y="849">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 6)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="613" y="864">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="328" y="799"/>
    <nail x="628" y="799"/>
</transition>
<transition>
    <source ref="99936"/>
    <target ref="99935"/>
    <label kind="assignment" x="674" y="440">Chart_CurrentMasterId=Chart_MasterShip_OneMVB1_CNMVBId</label>
    <nail x="704" y="325"/>
</transition>
<transition>
    <source ref="99935"/>
    <target ref="99934"/>
    <label kind="assignment" x="795" y="190">DispatchEvent(eJudgeActionOver,13,-1,aCommonAutomaton),DispatchFuncEvent(50,1,-1)</label>
    <nail x="825" y="75"/>
</transition>
<transition>
    <source ref="99934"/>
    <target ref="34"/>
    <label kind="guard" x="916" y="-75">JVSEF2M(13,eJudgeActionOver,1)</label>
    <label kind="assignment" x="916" y="-60">mChart_MasterShip_OneMVB1_LOGICHistoryState=34,PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=34,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(34,34)</label>
    <nail x="946" y="-175"/>
</transition>
<transition>
    <source ref="36"/>
    <target ref="99936"/>
    <label kind="guard" x="463" y="633">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 6)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="463" y="648">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="493" y="533"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="34"/>
    <label kind="guard" x="1082" y="-101">(!mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="1082" y="-86">CommonAutomatonCommunicateWithControllerAndConditional(13,34),ClearChart_MasterShip_OneMVB1_LOGICPathSelect()</label>
    <nail x="812" y="-201"/>
    <nail x="1112" y="-201"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="34"/>
    <label kind="guard" x="1147" y="-111">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 7)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="1147" y="-96">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(34,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="762" y="-161"/>
    <nail x="1162" y="-161"/>
</transition>
<transition>
    <source ref="99932"/>
    <target ref="33"/>
    <label kind="assignment" x="285" y="306">Chart_MasterShip_OneMVB1_LOGIC_HasMasterFrame=1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=33,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(33,33)</label>
    <nail x="315" y="191"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="99932"/>
    <label kind="guard" x="825" y="-86">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 7)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="825" y="-71">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="855" y="-186"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="34"/>
    <label kind="guard" x="1202" y="-191">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 8)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="1202" y="-176">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(34,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="737" y="-141"/>
    <nail x="1187" y="-141"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="33"/>
    <label kind="guard" x="420" y="196">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 8)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="420" y="211">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=33,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(33,33)</label>
    <nail x="450" y="96"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="16"/>
    <label kind="guard" x="471" y="-65">JVI2T(13,16,1)</label>
    <label kind="assignment" x="471" y="-50">PopOneEvent()</label>
    <nail x="501" y="-165"/>
</transition>
<transition>
    <source ref="16"/>
    <target ref="0"/>
    <label kind="guard" x="491" y="-20">JVT2I(13,1)</label>
    <label kind="assignment" x="491" y="-5">DelEvtIfOnlyBack()</label>
    <nail x="521" y="-120"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="34"/>
    <label kind="guard" x="1242" y="-221">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 9)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="1242" y="-206">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(34,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="712" y="-121"/>
    <nail x="1212" y="-121"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="16"/>
    <label kind="guard" x="932" y="-221">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 9)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="932" y="-206">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=16,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="962" y="-321"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="15"/>
    <label kind="guard" x="351" y="-62">JVI2T(13,15,1)</label>
    <label kind="assignment" x="351" y="-47">PopOneEvent()</label>
    <nail x="381" y="-162"/>
</transition>
<transition>
    <source ref="15"/>
    <target ref="0"/>
    <label kind="guard" x="377" y="-20">JVT2I(13,1)</label>
    <label kind="assignment" x="377" y="-5">DelEvtIfOnlyBack()</label>
    <nail x="407" y="-120"/>
</transition>
<transition>
    <source ref="16"/>
    <target ref="16"/>
    <label kind="guard" x="1007" y="-161">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 10)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="1007" y="-146">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="887" y="-261"/>
    <nail x="1037" y="-261"/>
</transition>
<transition>
    <source ref="99928"/>
    <target ref="15"/>
    <label kind="assignment" x="693" y="-256">Chart_BAitr=Chart_BAitr+2,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=15,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="723" y="-371"/>
</transition>
<transition>
    <source ref="16"/>
    <target ref="99928"/>
    <label kind="guard" x="807" y="-171">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 10)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="807" y="-156">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="837" y="-271"/>
</transition>
<transition>
    <source ref="15"/>
    <target ref="15"/>
    <label kind="guard" x="780" y="-161">(mChart_MasterShip_OneMVB1_LOGICChildPath[2] == 11)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="780" y="-146">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="660" y="-261"/>
    <nail x="810" y="-261"/>
</transition>
<transition>
    <source ref="99926"/>
    <target ref="34"/>
    <label kind="assignment" x="943" y="-156">Chart_BAitr=0,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=34,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(34,34)</label>
    <nail x="973" y="-271"/>
</transition>
<transition>
    <source ref="15"/>
    <target ref="99926"/>
    <label kind="guard" x="830" y="-271">(mChart_MasterShip_OneMVB1_LOGICChildPath[2] == 11)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="830" y="-256">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="860" y="-371"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="39"/>
    <label kind="guard" x="263" y="-15">JVI2T(13,39,1)</label>
    <label kind="assignment" x="263" y="0">PopOneEvent()</label>
    <nail x="293" y="-115"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="0"/>
    <label kind="guard" x="289" y="27">JVT2I(13,1)</label>
    <label kind="assignment" x="289" y="42">DelEvtIfOnlyBack()</label>
    <nail x="319" y="-73"/>
</transition>
<transition>
    <source ref="15"/>
    <target ref="15"/>
    <label kind="guard" x="820" y="-191">(mChart_MasterShip_OneMVB1_LOGICChildPath[2] == 12)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="820" y="-176">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="635" y="-241"/>
    <nail x="835" y="-241"/>
</transition>
<transition>
    <source ref="99924"/>
    <target ref="99923"/>
    <label kind="assignment" x="306" y="-47">Chart_ReqId=Chart_CNStatusRequest</label>
    <nail x="336" y="-162"/>
</transition>
<transition>
    <source ref="99923"/>
    <target ref="99922"/>
    <label kind="assignment" x="56" y="87">Chart_RevMVBId=Chart_BAitr</label>
    <nail x="86" y="-28"/>
</transition>
<transition>
    <source ref="99922"/>
    <target ref="99921"/>
    <label kind="assignment" x="-194" y="221">DispatchEvent(eJudgeActionOver,13,-1,aCommonAutomaton),DispatchFuncEvent(53,1,-1)</label>
    <nail x="-164" y="106"/>
</transition>
<transition>
    <source ref="99921"/>
    <target ref="39"/>
    <label kind="guard" x="-444" y="340">JVSEF2M(13,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-444" y="355">mChart_MasterShip_OneMVB1_LOGICHistoryState=39,PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=39,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(39,39)</label>
    <nail x="-414" y="240"/>
</transition>
<transition>
    <source ref="15"/>
    <target ref="99924"/>
    <label kind="guard" x="603" y="-110">(mChart_MasterShip_OneMVB1_LOGICChildPath[2] == 12)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="603" y="-95">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="633" y="-210"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="39"/>
    <label kind="guard" x="-396" y="571">(!mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-396" y="586">CommonAutomatonCommunicateWithControllerAndConditional(13,39),ClearChart_MasterShip_OneMVB1_LOGICPathSelect()</label>
    <nail x="-666" y="471"/>
    <nail x="-366" y="471"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="37"/>
    <label kind="guard" x="-340" y="249">JVI2T(13,37,1)</label>
    <label kind="assignment" x="-340" y="264">PopOneEvent()</label>
    <nail x="-310" y="149"/>
</transition>
<transition>
    <source ref="37"/>
    <target ref="0"/>
    <label kind="guard" x="-342" y="200">JVT2I(13,1)</label>
    <label kind="assignment" x="-342" y="215">DelEvtIfOnlyBack()</label>
    <nail x="-312" y="100"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="39"/>
    <label kind="guard" x="-331" y="561">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 13)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-331" y="576">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(39,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-716" y="511"/>
    <nail x="-316" y="511"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="37"/>
    <label kind="guard" x="-678" y="366">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 13)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-678" y="381">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=37,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-648" y="266"/>
</transition>
<transition>
    <source ref="37"/>
    <target ref="37"/>
    <label kind="guard" x="-635" y="300">(!mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-635" y="315">CommonAutomatonCommunicateWithControllerAndConditional(13,37),ClearChart_MasterShip_OneMVB1_LOGICPathSelect()</label>
    <nail x="-805" y="200"/>
    <nail x="-605" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="38"/>
    <label kind="guard" x="-459" y="283">JVI2T(13,38,1)</label>
    <label kind="assignment" x="-459" y="298">PopOneEvent()</label>
    <nail x="-429" y="183"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="0"/>
    <label kind="guard" x="-464" y="234">JVT2I(13,1)</label>
    <label kind="assignment" x="-464" y="249">DelEvtIfOnlyBack()</label>
    <nail x="-434" y="134"/>
</transition>
<transition>
    <source ref="37"/>
    <target ref="37"/>
    <label kind="guard" x="-570" y="290">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 14)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-570" y="305">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-855" y="240"/>
    <nail x="-555" y="240"/>
</transition>
<transition>
    <source ref="99918"/>
    <target ref="99917"/>
    <label kind="assignment" x="-1123" y="290">Chart_ReqId=Chart_CNMasterShip</label>
    <nail x="-1093" y="175"/>
</transition>
<transition>
    <source ref="99917"/>
    <target ref="99916"/>
    <label kind="assignment" x="-1373" y="359">Chart_RevMVBId=Chart_BAitr</label>
    <nail x="-1343" y="244"/>
</transition>
<transition>
    <source ref="99916"/>
    <target ref="99915"/>
    <label kind="assignment" x="-1623" y="428">DispatchEvent(eJudgeActionOver,13,-1,aCommonAutomaton),DispatchFuncEvent(53,1,-1)</label>
    <nail x="-1593" y="313"/>
</transition>
<transition>
    <source ref="99915"/>
    <target ref="38"/>
    <label kind="guard" x="-1873" y="482">JVSEF2M(13,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-1873" y="497">mChart_MasterShip_OneMVB1_LOGICHistoryState=38,PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=38,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(38,38)</label>
    <nail x="-1843" y="382"/>
</transition>
<transition>
    <source ref="37"/>
    <target ref="99918"/>
    <label kind="guard" x="-847" y="302">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 14)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-847" y="317">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="-817" y="202"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="38"/>
    <label kind="guard" x="-1835" y="685">(!mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-1835" y="700">CommonAutomatonCommunicateWithControllerAndConditional(13,38),ClearChart_MasterShip_OneMVB1_LOGICPathSelect()</label>
    <nail x="-2105" y="585"/>
    <nail x="-1805" y="585"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="19"/>
    <label kind="guard" x="-1082" y="443">JVI2T(13,19,1)</label>
    <label kind="assignment" x="-1082" y="458">PopOneEvent()</label>
    <nail x="-1052" y="343"/>
</transition>
<transition>
    <source ref="19"/>
    <target ref="0"/>
    <label kind="guard" x="-1091" y="394">JVT2I(13,1)</label>
    <label kind="assignment" x="-1091" y="409">DelEvtIfOnlyBack()</label>
    <nail x="-1061" y="294"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="38"/>
    <label kind="guard" x="-1770" y="675">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 15)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-1770" y="690">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(38,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-2155" y="625"/>
    <nail x="-1755" y="625"/>
</transition>
<transition>
    <source ref="99913"/>
    <target ref="19"/>
    <label kind="assignment" x="-2234" y="573">Chart_error=0,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=19,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="-2204" y="458"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="99913"/>
    <label kind="guard" x="-2102" y="635">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 15)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-2102" y="650">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="-2072" y="535"/>
</transition>
<transition>
    <source ref="19"/>
    <target ref="19"/>
    <label kind="guard" x="-2183" y="648">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 16)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-2183" y="663">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-2253" y="548"/>
    <nail x="-2153" y="548"/>
</transition>
<transition>
    <source ref="19"/>
    <target ref="33"/>
    <label kind="guard" x="-1191" y="522">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 16)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-1191" y="537">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=33,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(33,33)</label>
    <nail x="-1161" y="422"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="18"/>
    <label kind="guard" x="-1070" y="426">JVI2T(13,18,1)</label>
    <label kind="assignment" x="-1070" y="441">PopOneEvent()</label>
    <nail x="-1040" y="326"/>
</transition>
<transition>
    <source ref="18"/>
    <target ref="0"/>
    <label kind="guard" x="-1078" y="377">JVT2I(13,1)</label>
    <label kind="assignment" x="-1078" y="392">DelEvtIfOnlyBack()</label>
    <nail x="-1048" y="277"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="38"/>
    <label kind="guard" x="-1715" y="595">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 17)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-1715" y="610">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(38,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-2180" y="645"/>
    <nail x="-1730" y="645"/>
</transition>
<transition>
    <source ref="99910"/>
    <target ref="18"/>
    <label kind="assignment" x="-2221" y="540">Chart_error=1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=18,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="-2191" y="425"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="99910"/>
    <label kind="guard" x="-2109" y="619">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 17)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-2109" y="634">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="-2079" y="519"/>
</transition>
<transition>
    <source ref="18"/>
    <target ref="18"/>
    <label kind="guard" x="-2156" y="614">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 18)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-2156" y="629">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-2226" y="514"/>
    <nail x="-2126" y="514"/>
</transition>
<transition>
    <source ref="18"/>
    <target ref="33"/>
    <label kind="guard" x="-1177" y="505">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 18)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-1177" y="520">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=33,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(33,33)</label>
    <nail x="-1147" y="405"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="38"/>
    <label kind="guard" x="-1675" y="565">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 19)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-1675" y="580">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(38,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-2205" y="665"/>
    <nail x="-1705" y="665"/>
</transition>
<transition>
    <source ref="99907"/>
    <target ref="19"/>
    <label kind="assignment" x="-2234" y="573">Chart_error=1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=19,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="-2204" y="458"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="99907"/>
    <label kind="guard" x="-2102" y="635">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 19)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-2102" y="650">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="-2072" y="535"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="40"/>
    <label kind="guard" x="-228" y="360">JVI2T(13,40,1)</label>
    <label kind="assignment" x="-228" y="375">PopOneEvent()</label>
    <nail x="-198" y="260"/>
</transition>
<transition>
    <source ref="40"/>
    <target ref="0"/>
    <label kind="guard" x="-248" y="315">JVT2I(13,1)</label>
    <label kind="assignment" x="-248" y="330">DelEvtIfOnlyBack()</label>
    <nail x="-218" y="215"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="39"/>
    <label kind="guard" x="-276" y="481">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 20)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-276" y="496">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(39,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-741" y="531"/>
    <nail x="-291" y="531"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="40"/>
    <label kind="guard" x="-546" y="451">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 20)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-546" y="466">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=40,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-516" y="351"/>
</transition>
<transition>
    <source ref="40"/>
    <target ref="40"/>
    <label kind="guard" x="-446" y="531">(!mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-446" y="546">CommonAutomatonCommunicateWithControllerAndConditional(13,40),ClearChart_MasterShip_OneMVB1_LOGICPathSelect()</label>
    <nail x="-616" y="431"/>
    <nail x="-416" y="431"/>
</transition>
<transition>
    <source ref="40"/>
    <target ref="40"/>
    <label kind="guard" x="-381" y="521">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 21)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-381" y="536">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-666" y="471"/>
    <nail x="-366" y="471"/>
</transition>
<transition>
    <source ref="40"/>
    <target ref="16"/>
    <label kind="guard" x="173" y="70">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 21)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="173" y="85">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=16,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="203" y="-30"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="39"/>
    <label kind="guard" x="-236" y="451">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 22)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="-236" y="466">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(39,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-766" y="551"/>
    <nail x="-266" y="551"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="40"/>
    <label kind="guard" x="-531" y="401">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 22)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-531" y="416">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=40,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-516" y="351"/>
</transition>
<transition>
    <source ref="16"/>
    <target ref="16"/>
    <label kind="guard" x="1047" y="-191">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 23)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="1047" y="-176">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="862" y="-241"/>
    <nail x="1062" y="-241"/>
</transition>
<transition>
    <source ref="99902"/>
    <target ref="15"/>
    <label kind="assignment" x="693" y="-256">Chart_BAitr=Chart_BAitr+1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=15,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="723" y="-371"/>
</transition>
<transition>
    <source ref="16"/>
    <target ref="99902"/>
    <label kind="guard" x="807" y="-171">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 23)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="807" y="-156">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="837" y="-271"/>
</transition>
<transition>
    <source ref="14"/>
    <target ref="14"/>
    <label kind="guard" x="389" y="899">(mChart_MasterShip_OneMVB1_LOGICChildPath[3] == 24)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="389" y="914">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="204" y="849"/>
    <nail x="404" y="849"/>
</transition>
<transition>
    <source ref="14"/>
    <target ref="33"/>
    <label kind="guard" x="32" y="740">(mChart_MasterShip_OneMVB1_LOGICChildPath[3] == 24)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="32" y="755">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=33,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(33,33)</label>
    <nail x="62" y="640"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="35"/>
    <label kind="guard" x="194" y="381">JVI2T(13,35,1)</label>
    <label kind="assignment" x="194" y="396">PopOneEvent()</label>
    <nail x="224" y="281"/>
</transition>
<transition>
    <source ref="35"/>
    <target ref="0"/>
    <label kind="guard" x="149" y="401">JVT2I(13,1)</label>
    <label kind="assignment" x="149" y="416">DelEvtIfOnlyBack()</label>
    <nail x="179" y="301"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="17"/>
    <label kind="guard" x="414" y="919">(mChart_MasterShip_OneMVB1_LOGICChildPath[2] == 25)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="414" y="934">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="179" y="869"/>
    <nail x="429" y="869"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="35"/>
    <label kind="guard" x="212" y="751">(mChart_MasterShip_OneMVB1_LOGICChildPath[2] == 25)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="212" y="766">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=35,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="242" y="651"/>
</transition>
<transition>
    <source ref="35"/>
    <target ref="35"/>
    <label kind="guard" x="348" y="703">(!mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="348" y="718">CommonAutomatonCommunicateWithControllerAndConditional(13,35),ClearChart_MasterShip_OneMVB1_LOGICPathSelect()</label>
    <nail x="178" y="603"/>
    <nail x="378" y="603"/>
</transition>
<transition>
    <source ref="35"/>
    <target ref="35"/>
    <label kind="guard" x="413" y="693">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 26)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="413" y="708">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="128" y="643"/>
    <nail x="428" y="643"/>
</transition>
<transition>
    <source ref="99898"/>
    <target ref="99897"/>
    <label kind="assignment" x="-116" y="504">Chart_status_response_type=1</label>
    <nail x="-86" y="389"/>
</transition>
<transition>
    <source ref="99897"/>
    <target ref="99896"/>
    <label kind="assignment" x="-366" y="447">DispatchEvent(eJudgeActionOver,13,-1,aCommonAutomaton),DispatchFuncEvent(54,1,-1)</label>
    <nail x="-336" y="332"/>
</transition>
<transition>
    <source ref="99896"/>
    <target ref="33"/>
    <label kind="guard" x="-336" y="541">JVSEF2M(13,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-336" y="556">mChart_MasterShip_OneMVB1_LOGICHistoryState=33,PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=33,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(33,33)</label>
    <nail x="-306" y="441"/>
</transition>
<transition>
    <source ref="35"/>
    <target ref="99898"/>
    <label kind="guard" x="112" y="642">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 26)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="112" y="657">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="142" y="542"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="17"/>
    <label kind="guard" x="469" y="839">(mChart_MasterShip_OneMVB1_LOGICChildPath[2] == 27)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="469" y="854">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="154" y="889"/>
    <nail x="454" y="889"/>
</transition>
<transition>
    <source ref="99894"/>
    <target ref="33"/>
    <label kind="assignment" x="-93" y="656">Chart_status_response_type=2,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=33,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(33,33)</label>
    <nail x="-63" y="541"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="99894"/>
    <label kind="guard" x="118" y="808">(mChart_MasterShip_OneMVB1_LOGICChildPath[2] == 27)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="118" y="823">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="148" y="708"/>
</transition>
<transition>
    <source ref="12"/>
    <target ref="12"/>
    <label kind="guard" x="177" y="739">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 28)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="177" y="754">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-8" y="689"/>
    <nail x="192" y="689"/>
</transition>
<transition>
    <source ref="12"/>
    <target ref="33"/>
    <label kind="guard" x="-43" y="621">(mChart_MasterShip_OneMVB1_LOGICChildPath[1] == 28)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-43" y="636">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=33,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(33,33)</label>
    <nail x="-13" y="521"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="33"/>
    <label kind="guard" x="122" y="564">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 29)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="122" y="579">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(33,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-343" y="614"/>
    <nail x="107" y="614"/>
</transition>
<transition>
    <source ref="99891"/>
    <target ref="12"/>
    <label kind="assignment" x="51" y="778">Chart_MasterShip_OneMVB1_LOGIC_HasMasterFrame=0,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=12,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="81" y="663"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="99891"/>
    <label kind="guard" x="8" y="600">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 29)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="8" y="615">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=true</label>
    <nail x="38" y="500"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="33"/>
    <label kind="guard" x="162" y="534">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 30)&amp;&amp;(mChart_MasterShip_OneMVB1_LOGICExistPath)&amp;&amp;JVSE2M(13,aCommonAutomaton)</label>
    <label kind="assignment" x="162" y="549">DispatchEvent(eDeActivationOver,13,-1,aCommonAutomaton),Deactive(33,13),mChart_MasterShip_OneMVB1_LOGICExistPath = false</label>
    <nail x="-368" y="634"/>
    <nail x="132" y="634"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="34"/>
    <label kind="guard" x="392" y="156">(mChart_MasterShip_OneMVB1_LOGICChildPath[0] == 30)&amp;&amp;JVSEF2M(13,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="392" y="171">PopOneEvent(),mChart_MasterShip_OneMVB1_LOGICHistoryState=-1,mChart_MasterShip_OneMVB1_LOGICLoseControl=false,mChart_MasterShip_OneMVB1_LOGICHistoryState=34,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(34,34)</label>
    <nail x="422" y="56"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_Standby_Master_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return false;
}

int GHS()
{
    return -1;
}

bool IsLoseControl()
{
    return false;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Standby_Master_ctrl_initial</name>
    <urgent/>
</location>
<location id="99968" x = "880" y = "210">
    <urgent/>
</location>
<location id="99967" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99968"/>
    <label kind="guard" x="528" y="276">JVSAO(33,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99968"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99968"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,13,33,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(33,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(33,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(13,JNCRA(),false,false,true,true,-1),(!JNCRA())?mChart_MasterShip_OneMVB1_LOGICHistoryState=33:mEmptyOp=0,MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(33,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(false,false,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(33,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99967"/>
    <label kind="guard" x="84" y="374">JVSDaO(33,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99967"/>
    <target ref="0"/>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(33,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(false,false,-1,13)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(33,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(true,false,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(33,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(false,false,-1,13)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(33,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 33,false,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(33,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 33,false,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(33,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(33)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),false)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(33,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_Standby_Master_ctrlaction</name>
<declaration>// Place local declarations here.
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Standby_Master_ctrl_act_initial</name>
    <urgent/>
</location>
<location id="99971" x = "360" y = "400">
    <urgent/>
</location>
<location id="99970" x = "120" y = "400">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="260" y="380">JVSEF2M(33,eTransToStateDirectly,aControllerActionAutomaton)</label>
    <label kind="assignment" x="260" y="395">PopOneEvent()</label>
    <nail x="190" y="280"/>
    <nail x="290" y="280"/>
</transition>
<transition>
    <source ref="99971"/>
    <target ref="0"/>
    <label kind="guard" x="310" y="390">JVT2I(33,3)</label>
    <label kind="assignment" x="310" y="405">DelEvtIfOnlyBack()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99971"/>
    <label kind="guard" x="270" y="420">JVSEF2M(33,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="270" y="435">DispatchFuncEvent(41,29,32)</label>
    <nail x="300" y="320"/>
</transition>
<transition>
    <source ref="99971"/>
    <target ref="0"/>
    <label kind="guard" x="325" y="340">JVSEF2M(33,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="325" y="355">PopOneEvent()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="99970"/>
    <target ref="0"/>
    <label kind="guard" x="190" y="450">JVT2I(33,3)</label>
    <label kind="assignment" x="190" y="465">DelEvtIfOnlyBack()</label>
    <nail x="220" y="350"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99970"/>
    <label kind="guard" x="150" y="420">JVSEF2M(33,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="150" y="435">DispatchFuncEvent(42,29,32)</label>
    <nail x="180" y="320"/>
</transition>
<transition>
    <source ref="99970"/>
    <target ref="0"/>
    <label kind="guard" x="205" y="400">JVSEF2M(33,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="205" y="415">PopOneEvent()</label>
    <nail x="220" y="350"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_Rrgular_Master_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return false;
}

int GHS()
{
    return -1;
}

bool IsLoseControl()
{
    return false;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Rrgular_Master_ctrl_initial</name>
    <urgent/>
</location>
<location id="99962" x = "880" y = "210">
    <urgent/>
</location>
<location id="99961" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99962"/>
    <label kind="guard" x="528" y="276">JVSAO(34,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99962"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99962"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,13,34,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(34,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(34,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(13,JNCRA(),false,false,true,true,-1),(!JNCRA())?mChart_MasterShip_OneMVB1_LOGICHistoryState=34:mEmptyOp=0,MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(34,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(false,false,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(34,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99961"/>
    <label kind="guard" x="84" y="374">JVSDaO(34,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99961"/>
    <target ref="0"/>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(34,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(false,false,-1,13)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(34,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(true,false,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(34,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(false,false,-1,13)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(34,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 34,false,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(34,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 34,false,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(34,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(34)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),false)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(34,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_Rrgular_Master_ctrlaction</name>
<declaration>// Place local declarations here.
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Rrgular_Master_ctrl_act_initial</name>
    <urgent/>
</location>
<location id="99965" x = "360" y = "400">
    <urgent/>
</location>
<location id="99964" x = "120" y = "400">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="260" y="380">JVSEF2M(34,eTransToStateDirectly,aControllerActionAutomaton)</label>
    <label kind="assignment" x="260" y="395">PopOneEvent()</label>
    <nail x="190" y="280"/>
    <nail x="290" y="280"/>
</transition>
<transition>
    <source ref="99965"/>
    <target ref="0"/>
    <label kind="guard" x="310" y="390">JVT2I(34,3)</label>
    <label kind="assignment" x="310" y="405">DelEvtIfOnlyBack()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99965"/>
    <label kind="guard" x="270" y="420">JVSEF2M(34,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="270" y="435">DispatchFuncEvent(43,29,32)</label>
    <nail x="300" y="320"/>
</transition>
<transition>
    <source ref="99965"/>
    <target ref="0"/>
    <label kind="guard" x="325" y="340">JVSEF2M(34,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="325" y="355">PopOneEvent()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="99964"/>
    <target ref="0"/>
    <label kind="guard" x="190" y="450">JVT2I(34,3)</label>
    <label kind="assignment" x="190" y="465">DelEvtIfOnlyBack()</label>
    <nail x="220" y="350"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99964"/>
    <label kind="guard" x="150" y="420">JVSEF2M(34,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="150" y="435">DispatchFuncEvent(44,29,32)</label>
    <nail x="180" y="320"/>
</transition>
<transition>
    <source ref="99964"/>
    <target ref="0"/>
    <label kind="guard" x="205" y="400">JVSEF2M(34,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="205" y="415">PopOneEvent()</label>
    <nail x="220" y="350"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_st_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">st_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(35,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(35,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,35)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(35,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,35)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(35,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_bt_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">bt_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(36,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(36,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,36)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(36,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,36)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(36,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_sr_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">sr_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(37,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(37,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,37)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(37,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,37)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(37,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_Interim_Master_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return false;
}

int GHS()
{
    return -1;
}

bool IsLoseControl()
{
    return false;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Interim_Master_ctrl_initial</name>
    <urgent/>
</location>
<location id="99953" x = "880" y = "210">
    <urgent/>
</location>
<location id="99952" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99953"/>
    <label kind="guard" x="528" y="276">JVSAO(38,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99953"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99953"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,13,38,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(38,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(38,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(13,JNCRA(),false,false,true,true,-1),(!JNCRA())?mChart_MasterShip_OneMVB1_LOGICHistoryState=38:mEmptyOp=0,MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(38,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(false,false,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(38,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99952"/>
    <label kind="guard" x="84" y="374">JVSDaO(38,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99952"/>
    <target ref="0"/>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(38,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(false,false,-1,13)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(38,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(true,false,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(38,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(false,false,-1,13)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(38,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 38,false,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(38,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 38,false,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(38,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(38)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),false)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(38,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_Interim_Master_ctrlaction</name>
<declaration>// Place local declarations here.
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Interim_Master_ctrl_act_initial</name>
    <urgent/>
</location>
<location id="99956" x = "360" y = "400">
    <urgent/>
</location>
<location id="99955" x = "120" y = "400">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="260" y="380">JVSEF2M(38,eTransToStateDirectly,aControllerActionAutomaton)</label>
    <label kind="assignment" x="260" y="395">PopOneEvent()</label>
    <nail x="190" y="280"/>
    <nail x="290" y="280"/>
</transition>
<transition>
    <source ref="99956"/>
    <target ref="0"/>
    <label kind="guard" x="310" y="390">JVT2I(38,3)</label>
    <label kind="assignment" x="310" y="405">DelEvtIfOnlyBack()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99956"/>
    <label kind="guard" x="270" y="420">JVSEF2M(38,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="270" y="435">DispatchFuncEvent(45,29,32)</label>
    <nail x="300" y="320"/>
</transition>
<transition>
    <source ref="99956"/>
    <target ref="0"/>
    <label kind="guard" x="325" y="340">JVSEF2M(38,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="325" y="355">PopOneEvent()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="99955"/>
    <target ref="0"/>
    <label kind="guard" x="190" y="450">JVT2I(38,3)</label>
    <label kind="assignment" x="190" y="465">DelEvtIfOnlyBack()</label>
    <nail x="220" y="350"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99955"/>
    <label kind="guard" x="150" y="420">JVSEF2M(38,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="150" y="435">DispatchFuncEvent(46,29,32)</label>
    <nail x="180" y="320"/>
</transition>
<transition>
    <source ref="99955"/>
    <target ref="0"/>
    <label kind="guard" x="205" y="400">JVSEF2M(38,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="205" y="415">PopOneEvent()</label>
    <nail x="220" y="350"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_Find_Next_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return false;
}

int GHS()
{
    return -1;
}

bool IsLoseControl()
{
    return false;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Find_Next_ctrl_initial</name>
    <urgent/>
</location>
<location id="99947" x = "880" y = "210">
    <urgent/>
</location>
<location id="99946" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99947"/>
    <label kind="guard" x="528" y="276">JVSAO(39,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99947"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99947"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,13,39,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(39,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(39,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(13,JNCRA(),false,false,true,true,-1),(!JNCRA())?mChart_MasterShip_OneMVB1_LOGICHistoryState=39:mEmptyOp=0,MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(39,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(false,false,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(39,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99946"/>
    <label kind="guard" x="84" y="374">JVSDaO(39,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99946"/>
    <target ref="0"/>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(39,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(false,false,-1,13)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(39,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(true,false,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(39,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(false,false,-1,13)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(39,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 39,false,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(39,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 39,false,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(39,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(39)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),false)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(39,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_Find_Next_ctrlaction</name>
<declaration>// Place local declarations here.
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Find_Next_ctrl_act_initial</name>
    <urgent/>
</location>
<location id="99950" x = "360" y = "400">
    <urgent/>
</location>
<location id="99949" x = "120" y = "400">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="260" y="380">JVSEF2M(39,eTransToStateDirectly,aControllerActionAutomaton)</label>
    <label kind="assignment" x="260" y="395">PopOneEvent()</label>
    <nail x="190" y="280"/>
    <nail x="290" y="280"/>
</transition>
<transition>
    <source ref="99950"/>
    <target ref="0"/>
    <label kind="guard" x="310" y="390">JVT2I(39,3)</label>
    <label kind="assignment" x="310" y="405">DelEvtIfOnlyBack()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99950"/>
    <label kind="guard" x="270" y="420">JVSEF2M(39,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="270" y="435">DispatchFuncEvent(47,29,32)</label>
    <nail x="300" y="320"/>
</transition>
<transition>
    <source ref="99950"/>
    <target ref="0"/>
    <label kind="guard" x="325" y="340">JVSEF2M(39,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="325" y="355">PopOneEvent()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="99949"/>
    <target ref="0"/>
    <label kind="guard" x="190" y="450">JVT2I(39,3)</label>
    <label kind="assignment" x="190" y="465">DelEvtIfOnlyBack()</label>
    <nail x="220" y="350"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99949"/>
    <label kind="guard" x="150" y="420">JVSEF2M(39,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="150" y="435">DispatchFuncEvent(48,29,32)</label>
    <nail x="180" y="320"/>
</transition>
<transition>
    <source ref="99949"/>
    <target ref="0"/>
    <label kind="guard" x="205" y="400">JVSEF2M(39,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="205" y="415">PopOneEvent()</label>
    <nail x="220" y="350"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_T_F_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">T_F_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(40,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(40,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,40)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(40,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,40)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(40,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_initial_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">initial_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(41,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(13)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(41,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(13,41)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(41,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(13,41)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(41,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_LOGIC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[4];
const int mSourceRecordLength = 4;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">LOGIC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="41" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_LOGIC_initial</name>
    <urgent/>
</location>
<location id="99942" x = "80" y = "80">
    <urgent/>
</location>
<location id="33" x = "-118" y = "434">
    <name x="-128" y="419">Chart_MasterShip_OneMVB1_LOGIC_Standby_Master</name>
    <urgent/>
</location>
<location id="99941" x = "-169" y = "-419">
    <urgent/>
</location>
<location id="12" x = "92" y = "609">
    <name x="82" y="594">SSID514</name>
    <urgent/>
</location>
<location id="99940" x = "132" y = "382">
    <urgent/>
</location>
<location id="17" x = "304" y = "769">
    <name x="294" y="754">SSID518</name>
    <urgent/>
</location>
<location id="99939" x = "342" y = "592">
    <urgent/>
</location>
<location id="14" x = "304" y = "769">
    <name x="294" y="754">SSID515</name>
    <urgent/>
</location>
<location id="99938" x = "0" y = "0">
    <urgent/>
</location>
<location id="36" x = "478" y = "679">
    <name x="468" y="664">Chart_MasterShip_OneMVB1_LOGIC_bt</name>
    <urgent/>
</location>
<location id="99937" x = "554" y = "804">
    <urgent/>
</location>
<location id="34" x = "580" y = "469">
    <name x="570" y="454">Chart_MasterShip_OneMVB1_LOGIC_Rrgular_Master</name>
    <urgent/>
</location>
<location id="99933" x = "599" y = "720">
    <urgent/>
</location>
<location id="99931" x = "330" y = "80">
    <urgent/>
</location>
<location id="99930" x = "330" y = "80">
    <urgent/>
</location>
<location id="16" x = "962" y = "-321">
    <name x="952" y="-336">SSID517</name>
    <urgent/>
</location>
<location id="99929" x = "700" y = "820">
    <urgent/>
</location>
<location id="15" x = "735" y = "-321">
    <name x="725" y="-336">SSID516</name>
    <urgent/>
</location>
<location id="99927" x = "712" y = "462">
    <urgent/>
</location>
<location id="99925" x = "685" y = "635">
    <urgent/>
</location>
<location id="39" x = "558" y = "-226">
    <name x="548" y="-241">Chart_MasterShip_OneMVB1_LOGIC_Find_Next</name>
    <urgent/>
</location>
<location id="99920" x = "485" y = "234">
    <urgent/>
</location>
<location id="37" x = "-705" y = "120">
    <name x="-715" y="105">Chart_MasterShip_OneMVB1_LOGIC_sr</name>
    <urgent/>
</location>
<location id="99919" x = "242" y = "-73">
    <urgent/>
</location>
<location id="38" x = "-949" y = "188">
    <name x="-959" y="173">Chart_MasterShip_OneMVB1_LOGIC_Interim_Master</name>
    <urgent/>
</location>
<location id="99914" x = "-955" y = "-1205">
    <urgent/>
</location>
<location id="19" x = "-2203" y = "508">
    <name x="-2213" y="493">SSID520</name>
    <urgent/>
</location>
<location id="99912" x = "-1262" y = "-1575">
    <urgent/>
</location>
<location id="99911" x = "-1681" y = "-1159">
    <urgent/>
</location>
<location id="18" x = "-2176" y = "474">
    <name x="-2186" y="459">SSID519</name>
    <urgent/>
</location>
<location id="99909" x = "-1255" y = "-1561">
    <urgent/>
</location>
<location id="99908" x = "-1661" y = "-1146">
    <urgent/>
</location>
<location id="99906" x = "-1262" y = "-1575">
    <urgent/>
</location>
<location id="40" x = "-516" y = "351">
    <name x="-526" y="336">Chart_MasterShip_OneMVB1_LOGIC_T_F</name>
    <urgent/>
</location>
<location id="99905" x = "289" y = "20">
    <urgent/>
</location>
<location id="99904" x = "-146" y = "223">
    <urgent/>
</location>
<location id="99903" x = "289" y = "20">
    <urgent/>
</location>
<location id="99901" x = "712" y = "462">
    <urgent/>
</location>
<location id="99900" x = "54" y = "-196">
    <urgent/>
</location>
<location id="35" x = "278" y = "523">
    <name x="268" y="508">Chart_MasterShip_OneMVB1_LOGIC_st</name>
    <urgent/>
</location>
<location id="99899" x = "277" y = "250">
    <urgent/>
</location>
<location id="99895" x = "28" y = "-221">
    <urgent/>
</location>
<location id="99893" x = "54" y = "-196">
    <urgent/>
</location>
<location id="99892" x = "-158" y = "-408">
    <urgent/>
</location>
<location id="99890" x = "132" y = "382">
    <urgent/>
</location>
<location id="99889" x = "132" y = "382">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB1_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(13,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="41"/>
    <label kind="guard" x="145" y="150">JVI2T(13,41,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="41"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(13,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99942"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99942"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99942"/>
    <target ref="41"/>
    <label kind="guard" x="100" y="300">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=0,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="41"/>
    <target ref="41"/>
    <label kind="guard" x="220" y="370">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="220" y="385">mChart_MasterShip_OneMVB1_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-45" y="420"/>
    <nail x="205" y="420"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="33"/>
    <label kind="guard" x="9" y="331">JVI2T(13,33,0)</label>
    <label kind="assignment" x="9" y="346">PopOneEvent()</label>
    <nail x="24" y="281"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="0"/>
    <label kind="guard" x="-34" y="307">JVT2I(13,0)</label>
    <label kind="assignment" x="-34" y="322">DelEvtIfOnlyBack()</label>
    <nail x="-19" y="257"/>
</transition>
<transition>
    <source ref="41"/>
    <target ref="99941"/>
    <label kind="guard" x="-121" y="66">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-121" y="81">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="-91" y="-34"/>
</transition>
<transition>
    <source ref="99941"/>
    <target ref="41"/>
    <label kind="guard" x="-74" y="51">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-74" y="66">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="-44" y="-49"/>
</transition>
<transition>
    <source ref="99941"/>
    <target ref="33"/>
    <label kind="guard" x="-124" y="105">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-124" y="120">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=1,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-94" y="5"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="33"/>
    <label kind="guard" x="102" y="424">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==4</label>
    <label kind="assignment" x="102" y="439">mChart_MasterShip_OneMVB1_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-293" y="574"/>
    <nail x="57" y="574"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="12"/>
    <label kind="guard" x="120" y="393">JVI2T(13,12,0)</label>
    <label kind="assignment" x="120" y="408">PopOneEvent()</label>
    <nail x="135" y="343"/>
</transition>
<transition>
    <source ref="12"/>
    <target ref="0"/>
    <label kind="guard" x="71" y="394">JVT2I(13,0)</label>
    <label kind="assignment" x="71" y="409">DelEvtIfOnlyBack()</label>
    <nail x="86" y="344"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="99940"/>
    <label kind="guard" x="-33" y="460">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-33" y="475">mSourceRecordArray[1]=2,mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="-3" y="360"/>
</transition>
<transition>
    <source ref="99940"/>
    <target ref="33"/>
    <label kind="guard" x="-23" y="508">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(13,49,aConditionalAutomaton)&amp;&amp;(Chart_valid_master_frame==1))</label>
    <label kind="assignment" x="-23" y="523">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="7" y="408"/>
</transition>
<transition>
    <source ref="99940"/>
    <target ref="12"/>
    <label kind="guard" x="131" y="603">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(13,49,aConditionalAutomaton)&amp;&amp;(Chart_valid_master_frame==1)</label>
    <label kind="assignment" x="131" y="618">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=2</label>
    <nail x="161" y="503"/>
</transition>
<transition>
    <source ref="12"/>
    <target ref="33"/>
    <label kind="guard" x="4" y="533">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==2&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==3</label>
    <label kind="assignment" x="4" y="548">mChart_MasterShip_OneMVB1_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(1)</label>
    <nail x="19" y="483"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="17"/>
    <label kind="guard" x="224" y="459">JVI2T(13,17,0)</label>
    <label kind="assignment" x="224" y="474">PopOneEvent()</label>
    <nail x="239" y="409"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="0"/>
    <label kind="guard" x="177" y="474">JVT2I(13,0)</label>
    <label kind="assignment" x="177" y="489">DelEvtIfOnlyBack()</label>
    <nail x="192" y="424"/>
</transition>
<transition>
    <source ref="12"/>
    <target ref="99939"/>
    <label kind="guard" x="184" y="651">mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="184" y="666">mSourceRecordArray[2]=3,mChart_MasterShip_OneMVB1_LOGICPathSelect[1]++</label>
    <nail x="214" y="551"/>
</transition>
<transition>
    <source ref="99939"/>
    <target ref="12"/>
    <label kind="guard" x="187" y="700">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_RevMVBId==Chart_MasterShip_OneMVB1_CNMVBId))</label>
    <label kind="assignment" x="187" y="715">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=-1</label>
    <nail x="217" y="600"/>
</transition>
<transition>
    <source ref="99939"/>
    <target ref="17"/>
    <label kind="guard" x="341" y="790">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_RevMVBId==Chart_MasterShip_OneMVB1_CNMVBId)</label>
    <label kind="assignment" x="341" y="805">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=3</label>
    <nail x="371" y="690"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="12"/>
    <label kind="guard" x="198" y="750">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[2]==3&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[2]==4</label>
    <label kind="assignment" x="198" y="765">mChart_MasterShip_OneMVB1_LOGICChildPath[1] = -1,ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(2)</label>
    <nail x="228" y="650"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="14"/>
    <label kind="guard" x="224" y="459">JVI2T(13,14,0)</label>
    <label kind="assignment" x="224" y="474">PopOneEvent()</label>
    <nail x="239" y="409"/>
</transition>
<transition>
    <source ref="14"/>
    <target ref="0"/>
    <label kind="guard" x="177" y="474">JVT2I(13,0)</label>
    <label kind="assignment" x="177" y="489">DelEvtIfOnlyBack()</label>
    <nail x="192" y="424"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="99938"/>
    <label kind="guard" x="76" y="502">mChart_MasterShip_OneMVB1_LOGICPathSelect[2]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="76" y="517">mSourceRecordArray[3]=4,mChart_MasterShip_OneMVB1_LOGICPathSelect[2]++</label>
    <nail x="106" y="402"/>
</transition>
<transition>
    <source ref="99938"/>
    <target ref="17"/>
    <label kind="guard" x="122" y="484">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_ReqId==Chart_CNMasterShip))</label>
    <label kind="assignment" x="122" y="499">mChart_MasterShip_OneMVB1_LOGICChildPath[2]=-1</label>
    <nail x="152" y="384"/>
</transition>
<transition>
    <source ref="99938"/>
    <target ref="14"/>
    <label kind="guard" x="168" y="466">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_ReqId==Chart_CNMasterShip)</label>
    <label kind="assignment" x="168" y="481">mChart_MasterShip_OneMVB1_LOGICChildPath[2]=4</label>
    <nail x="198" y="366"/>
</transition>
<transition>
    <source ref="14"/>
    <target ref="17"/>
    <label kind="guard" x="274" y="869">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[3]==4&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[3]==3</label>
    <label kind="assignment" x="274" y="884">mChart_MasterShip_OneMVB1_LOGICChildPath[2] = -1,ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(3)</label>
    <nail x="304" y="769"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="36"/>
    <label kind="guard" x="305" y="402">JVI2T(13,36,0)</label>
    <label kind="assignment" x="305" y="417">PopOneEvent()</label>
    <nail x="320" y="352"/>
</transition>
<transition>
    <source ref="36"/>
    <target ref="0"/>
    <label kind="guard" x="264" y="429">JVT2I(13,0)</label>
    <label kind="assignment" x="264" y="444">DelEvtIfOnlyBack()</label>
    <nail x="279" y="379"/>
</transition>
<transition>
    <source ref="14"/>
    <target ref="99937"/>
    <label kind="guard" x="405" y="837">mChart_MasterShip_OneMVB1_LOGICPathSelect[3]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="405" y="852">mChart_MasterShip_OneMVB1_LOGICPathSelect[3]++</label>
    <nail x="435" y="737"/>
</transition>
<transition>
    <source ref="99937"/>
    <target ref="14"/>
    <label kind="guard" x="399" y="886">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB1_CNACT==1))</label>
    <label kind="assignment" x="399" y="901">mChart_MasterShip_OneMVB1_LOGICChildPath[3]=-1</label>
    <nail x="429" y="786"/>
</transition>
<transition>
    <source ref="99937"/>
    <target ref="36"/>
    <label kind="guard" x="444" y="866">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB1_CNACT==1)</label>
    <label kind="assignment" x="444" y="881">mChart_MasterShip_OneMVB1_LOGICChildPath[3]=5,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="474" y="766"/>
</transition>
<transition>
    <source ref="36"/>
    <target ref="36"/>
    <label kind="guard" x="618" y="729">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="618" y="744">mChart_MasterShip_OneMVB1_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="353" y="779"/>
    <nail x="603" y="779"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="34"/>
    <label kind="guard" x="345" y="285">JVI2T(13,34,0)</label>
    <label kind="assignment" x="345" y="300">PopOneEvent()</label>
    <nail x="360" y="235"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="0"/>
    <label kind="guard" x="315" y="324">JVT2I(13,0)</label>
    <label kind="assignment" x="315" y="339">DelEvtIfOnlyBack()</label>
    <nail x="330" y="274"/>
</transition>
<transition>
    <source ref="36"/>
    <target ref="99933"/>
    <label kind="guard" x="524" y="752">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="524" y="767">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="554" y="652"/>
</transition>
<transition>
    <source ref="99933"/>
    <target ref="36"/>
    <label kind="guard" x="508" y="799">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="508" y="814">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="538" y="699"/>
</transition>
<transition>
    <source ref="99933"/>
    <target ref="34"/>
    <label kind="guard" x="510" y="697">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="510" y="712">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=6,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="540" y="597"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="34"/>
    <label kind="guard" x="800" y="459">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==4</label>
    <label kind="assignment" x="800" y="474">mChart_MasterShip_OneMVB1_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="405" y="609"/>
    <nail x="755" y="609"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="99931"/>
    <label kind="guard" x="383" y="401">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="383" y="416">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="413" y="301"/>
</transition>
<transition>
    <source ref="99931"/>
    <target ref="34"/>
    <label kind="guard" x="425" y="374">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(13,49,aConditionalAutomaton)&amp;&amp;(Chart_ReqId==Chart_CNMasterShip||Chart_ReqId==Chart_CNStatusRequest))</label>
    <label kind="assignment" x="425" y="389">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="455" y="274"/>
</transition>
<transition>
    <source ref="99931"/>
    <target ref="33"/>
    <label kind="guard" x="106" y="396">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(13,49,aConditionalAutomaton)&amp;&amp;(Chart_ReqId==Chart_CNMasterShip||Chart_ReqId==Chart_CNStatusRequest)</label>
    <label kind="assignment" x="106" y="411">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=7,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="136" y="296"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="99930"/>
    <label kind="guard" x="383" y="401">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==2&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="383" y="416">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="413" y="301"/>
</transition>
<transition>
    <source ref="99930"/>
    <target ref="34"/>
    <label kind="guard" x="425" y="374">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(13,51,aConditionalAutomaton))</label>
    <label kind="assignment" x="425" y="389">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="455" y="274"/>
</transition>
<transition>
    <source ref="99930"/>
    <target ref="33"/>
    <label kind="guard" x="106" y="396">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(13,51,aConditionalAutomaton)</label>
    <label kind="assignment" x="106" y="411">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=8,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="136" y="296"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="16"/>
    <label kind="guard" x="486" y="-115">JVI2T(13,16,0)</label>
    <label kind="assignment" x="486" y="-100">PopOneEvent()</label>
    <nail x="501" y="-165"/>
</transition>
<transition>
    <source ref="16"/>
    <target ref="0"/>
    <label kind="guard" x="506" y="-70">JVT2I(13,0)</label>
    <label kind="assignment" x="506" y="-55">DelEvtIfOnlyBack()</label>
    <nail x="521" y="-120"/>
</transition>
<transition>
    <source ref="34"/>
    <target ref="99929"/>
    <label kind="guard" x="657" y="728">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==3&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="657" y="743">mSourceRecordArray[1]=9,mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="687" y="628"/>
</transition>
<transition>
    <source ref="99929"/>
    <target ref="34"/>
    <label kind="guard" x="610" y="744">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(13,52,aConditionalAutomaton))</label>
    <label kind="assignment" x="610" y="759">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="640" y="644"/>
</transition>
<transition>
    <source ref="99929"/>
    <target ref="16"/>
    <label kind="guard" x="753" y="338">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(13,52,aConditionalAutomaton)</label>
    <label kind="assignment" x="753" y="353">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=9</label>
    <nail x="783" y="238"/>
</transition>
<transition>
    <source ref="16"/>
    <target ref="34"/>
    <label kind="guard" x="696" y="153">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==9&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==3</label>
    <label kind="assignment" x="696" y="168">mChart_MasterShip_OneMVB1_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(1)</label>
    <nail x="726" y="53"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="15"/>
    <label kind="guard" x="366" y="-112">JVI2T(13,15,0)</label>
    <label kind="assignment" x="366" y="-97">PopOneEvent()</label>
    <nail x="381" y="-162"/>
</transition>
<transition>
    <source ref="15"/>
    <target ref="0"/>
    <label kind="guard" x="392" y="-70">JVT2I(13,0)</label>
    <label kind="assignment" x="392" y="-55">DelEvtIfOnlyBack()</label>
    <nail x="407" y="-120"/>
</transition>
<transition>
    <source ref="16"/>
    <target ref="99927"/>
    <label kind="guard" x="854" y="185">mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="854" y="200">mSourceRecordArray[2]=10,mChart_MasterShip_OneMVB1_LOGICPathSelect[1]++</label>
    <nail x="884" y="85"/>
</transition>
<transition>
    <source ref="99927"/>
    <target ref="16"/>
    <label kind="guard" x="807" y="170">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_BAitr==Chart_MasterShip_OneMVB1_CNMVBId-1))</label>
    <label kind="assignment" x="807" y="185">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=-1</label>
    <nail x="837" y="70"/>
</transition>
<transition>
    <source ref="99927"/>
    <target ref="15"/>
    <label kind="guard" x="644" y="169">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_BAitr==Chart_MasterShip_OneMVB1_CNMVBId-1)</label>
    <label kind="assignment" x="644" y="184">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=10</label>
    <nail x="674" y="69"/>
</transition>
<transition>
    <source ref="15"/>
    <target ref="16"/>
    <label kind="guard" x="818" y="-171">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[2]==10&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[2]==3</label>
    <label kind="assignment" x="818" y="-156">mChart_MasterShip_OneMVB1_LOGICChildPath[1] = -1,ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(2)</label>
    <nail x="848" y="-271"/>
</transition>
<transition>
    <source ref="15"/>
    <target ref="99925"/>
    <label kind="guard" x="729" y="259">mChart_MasterShip_OneMVB1_LOGICPathSelect[2]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="729" y="274">mChart_MasterShip_OneMVB1_LOGICPathSelect[2]++</label>
    <nail x="759" y="159"/>
</transition>
<transition>
    <source ref="99925"/>
    <target ref="15"/>
    <label kind="guard" x="680" y="257">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_BAitr&gt;Chart_BAlen))</label>
    <label kind="assignment" x="680" y="272">mChart_MasterShip_OneMVB1_LOGICChildPath[2]=-1</label>
    <nail x="710" y="157"/>
</transition>
<transition>
    <source ref="99925"/>
    <target ref="34"/>
    <label kind="guard" x="560" y="678">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_BAitr&gt;Chart_BAlen)</label>
    <label kind="assignment" x="560" y="693">mChart_MasterShip_OneMVB1_LOGICChildPath[2]=11,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="590" y="578"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="39"/>
    <label kind="guard" x="278" y="-65">JVI2T(13,39,0)</label>
    <label kind="assignment" x="278" y="-50">PopOneEvent()</label>
    <nail x="293" y="-115"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="0"/>
    <label kind="guard" x="304" y="-23">JVT2I(13,0)</label>
    <label kind="assignment" x="304" y="-8">DelEvtIfOnlyBack()</label>
    <nail x="319" y="-73"/>
</transition>
<transition>
    <source ref="15"/>
    <target ref="99920"/>
    <label kind="guard" x="625" y="77">mChart_MasterShip_OneMVB1_LOGICPathSelect[2]==2&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="625" y="92">mChart_MasterShip_OneMVB1_LOGICPathSelect[2]++</label>
    <nail x="655" y="-23"/>
</transition>
<transition>
    <source ref="99920"/>
    <target ref="15"/>
    <label kind="guard" x="580" y="57">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="580" y="72">mChart_MasterShip_OneMVB1_LOGICChildPath[2]=-1</label>
    <nail x="610" y="-43"/>
</transition>
<transition>
    <source ref="99920"/>
    <target ref="39"/>
    <label kind="guard" x="442" y="97">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="442" y="112">mChart_MasterShip_OneMVB1_LOGICChildPath[2]=12,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="472" y="-3"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="39"/>
    <label kind="guard" x="778" y="-236">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==4</label>
    <label kind="assignment" x="778" y="-221">mChart_MasterShip_OneMVB1_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="383" y="-86"/>
    <nail x="733" y="-86"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="37"/>
    <label kind="guard" x="-325" y="199">JVI2T(13,37,0)</label>
    <label kind="assignment" x="-325" y="214">PopOneEvent()</label>
    <nail x="-310" y="149"/>
</transition>
<transition>
    <source ref="37"/>
    <target ref="0"/>
    <label kind="guard" x="-327" y="150">JVT2I(13,0)</label>
    <label kind="assignment" x="-327" y="165">DelEvtIfOnlyBack()</label>
    <nail x="-312" y="100"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="99919"/>
    <label kind="guard" x="391" y="-4">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="391" y="11">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="421" y="-104"/>
</transition>
<transition>
    <source ref="99919"/>
    <target ref="39"/>
    <label kind="guard" x="370" y="-49">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(13,54,aConditionalAutomaton)&amp;&amp;(Chart_status_response_type==1))</label>
    <label kind="assignment" x="370" y="-34">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="400" y="-149"/>
</transition>
<transition>
    <source ref="99919"/>
    <target ref="37"/>
    <label kind="guard" x="-252" y="171">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(13,54,aConditionalAutomaton)&amp;&amp;(Chart_status_response_type==1)</label>
    <label kind="assignment" x="-252" y="186">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=13,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-222" y="71"/>
</transition>
<transition>
    <source ref="37"/>
    <target ref="37"/>
    <label kind="guard" x="-565" y="170">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="-565" y="185">mChart_MasterShip_OneMVB1_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-830" y="220"/>
    <nail x="-580" y="220"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="38"/>
    <label kind="guard" x="-444" y="233">JVI2T(13,38,0)</label>
    <label kind="assignment" x="-444" y="248">PopOneEvent()</label>
    <nail x="-429" y="183"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="0"/>
    <label kind="guard" x="-449" y="184">JVT2I(13,0)</label>
    <label kind="assignment" x="-449" y="199">DelEvtIfOnlyBack()</label>
    <nail x="-434" y="134"/>
</transition>
<transition>
    <source ref="37"/>
    <target ref="99914"/>
    <label kind="guard" x="-909" y="-433">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-909" y="-418">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="-879" y="-533"/>
</transition>
<transition>
    <source ref="99914"/>
    <target ref="37"/>
    <label kind="guard" x="-860" y="-442">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-860" y="-427">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="-830" y="-542"/>
</transition>
<transition>
    <source ref="99914"/>
    <target ref="38"/>
    <label kind="guard" x="-933" y="-408">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-933" y="-393">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=14,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-903" y="-508"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="38"/>
    <label kind="guard" x="-729" y="178">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==4</label>
    <label kind="assignment" x="-729" y="193">mChart_MasterShip_OneMVB1_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-1124" y="328"/>
    <nail x="-774" y="328"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="19"/>
    <label kind="guard" x="-1067" y="393">JVI2T(13,19,0)</label>
    <label kind="assignment" x="-1067" y="408">PopOneEvent()</label>
    <nail x="-1052" y="343"/>
</transition>
<transition>
    <source ref="19"/>
    <target ref="0"/>
    <label kind="guard" x="-1076" y="344">JVT2I(13,0)</label>
    <label kind="assignment" x="-1076" y="359">DelEvtIfOnlyBack()</label>
    <nail x="-1061" y="294"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="99912"/>
    <label kind="guard" x="-1184" y="-585">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-1184" y="-570">mSourceRecordArray[1]=15,mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="-1154" y="-685"/>
</transition>
<transition>
    <source ref="99912"/>
    <target ref="38"/>
    <label kind="guard" x="-1135" y="-593">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(13,50,aConditionalAutomaton)&amp;&amp;(Chart_CurrentMasterId!=Chart_MasterShip_OneMVB1_CNMVBId))</label>
    <label kind="assignment" x="-1135" y="-578">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="-1105" y="-693"/>
</transition>
<transition>
    <source ref="99912"/>
    <target ref="19"/>
    <label kind="guard" x="-1717" y="-413">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(13,50,aConditionalAutomaton)&amp;&amp;(Chart_CurrentMasterId!=Chart_MasterShip_OneMVB1_CNMVBId)</label>
    <label kind="assignment" x="-1717" y="-398">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=15</label>
    <nail x="-1687" y="-513"/>
</transition>
<transition>
    <source ref="19"/>
    <target ref="38"/>
    <label kind="guard" x="-1594" y="496">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==15&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==2</label>
    <label kind="assignment" x="-1594" y="511">mChart_MasterShip_OneMVB1_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(1)</label>
    <nail x="-1564" y="396"/>
</transition>
<transition>
    <source ref="19"/>
    <target ref="99911"/>
    <label kind="guard" x="-2019" y="-239">mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-2019" y="-224">mChart_MasterShip_OneMVB1_LOGICPathSelect[1]++</label>
    <nail x="-1989" y="-339"/>
</transition>
<transition>
    <source ref="99911"/>
    <target ref="19"/>
    <label kind="guard" x="-1972" y="-225">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-1972" y="-210">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=-1</label>
    <nail x="-1942" y="-325"/>
</transition>
<transition>
    <source ref="99911"/>
    <target ref="33"/>
    <label kind="guard" x="-894" y="-297">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-894" y="-282">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=16,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-864" y="-397"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="18"/>
    <label kind="guard" x="-1055" y="376">JVI2T(13,18,0)</label>
    <label kind="assignment" x="-1055" y="391">PopOneEvent()</label>
    <nail x="-1040" y="326"/>
</transition>
<transition>
    <source ref="18"/>
    <target ref="0"/>
    <label kind="guard" x="-1063" y="327">JVT2I(13,0)</label>
    <label kind="assignment" x="-1063" y="342">DelEvtIfOnlyBack()</label>
    <nail x="-1048" y="277"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="99909"/>
    <label kind="guard" x="-1181" y="-578">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==2&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-1181" y="-563">mSourceRecordArray[1]=17,mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="-1151" y="-678"/>
</transition>
<transition>
    <source ref="99909"/>
    <target ref="38"/>
    <label kind="guard" x="-1132" y="-586">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(13,55,aConditionalAutomaton))</label>
    <label kind="assignment" x="-1132" y="-571">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="-1102" y="-686"/>
</transition>
<transition>
    <source ref="99909"/>
    <target ref="18"/>
    <label kind="guard" x="-1700" y="-423">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(13,55,aConditionalAutomaton)</label>
    <label kind="assignment" x="-1700" y="-408">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=17</label>
    <nail x="-1670" y="-523"/>
</transition>
<transition>
    <source ref="18"/>
    <target ref="38"/>
    <label kind="guard" x="-1581" y="479">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==17&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==2</label>
    <label kind="assignment" x="-1581" y="494">mChart_MasterShip_OneMVB1_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(1)</label>
    <nail x="-1551" y="379"/>
</transition>
<transition>
    <source ref="18"/>
    <target ref="99908"/>
    <label kind="guard" x="-1995" y="-251">mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-1995" y="-236">mChart_MasterShip_OneMVB1_LOGICPathSelect[1]++</label>
    <nail x="-1965" y="-351"/>
</transition>
<transition>
    <source ref="99908"/>
    <target ref="18"/>
    <label kind="guard" x="-1948" y="-236">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-1948" y="-221">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=-1</label>
    <nail x="-1918" y="-336"/>
</transition>
<transition>
    <source ref="99908"/>
    <target ref="33"/>
    <label kind="guard" x="-884" y="-290">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-884" y="-275">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=18,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-854" y="-390"/>
</transition>
<transition>
    <source ref="38"/>
    <target ref="99906"/>
    <label kind="guard" x="-1184" y="-585">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==3&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-1184" y="-570">mSourceRecordArray[1]=19,mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="-1154" y="-685"/>
</transition>
<transition>
    <source ref="99906"/>
    <target ref="38"/>
    <label kind="guard" x="-1135" y="-593">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(13,50,aConditionalAutomaton)&amp;&amp;(Chart_CurrentMasterId==Chart_MasterShip_OneMVB1_CNMVBId))</label>
    <label kind="assignment" x="-1135" y="-578">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="-1105" y="-693"/>
</transition>
<transition>
    <source ref="99906"/>
    <target ref="19"/>
    <label kind="guard" x="-1717" y="-413">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(13,50,aConditionalAutomaton)&amp;&amp;(Chart_CurrentMasterId==Chart_MasterShip_OneMVB1_CNMVBId)</label>
    <label kind="assignment" x="-1717" y="-398">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=19</label>
    <nail x="-1687" y="-513"/>
</transition>
<transition>
    <source ref="19"/>
    <target ref="38"/>
    <label kind="guard" x="-1591" y="398">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==19&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==2</label>
    <label kind="assignment" x="-1591" y="413">mChart_MasterShip_OneMVB1_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(1)</label>
    <nail x="-1576" y="348"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="40"/>
    <label kind="guard" x="-213" y="310">JVI2T(13,40,0)</label>
    <label kind="assignment" x="-213" y="325">PopOneEvent()</label>
    <nail x="-198" y="260"/>
</transition>
<transition>
    <source ref="40"/>
    <target ref="0"/>
    <label kind="guard" x="-233" y="265">JVT2I(13,0)</label>
    <label kind="assignment" x="-233" y="280">DelEvtIfOnlyBack()</label>
    <nail x="-218" y="215"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="99905"/>
    <label kind="guard" x="426" y="33">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==2&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="426" y="48">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="456" y="-67"/>
</transition>
<transition>
    <source ref="99905"/>
    <target ref="39"/>
    <label kind="guard" x="393" y="-3">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(13,56,aConditionalAutomaton))</label>
    <label kind="assignment" x="393" y="12">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="423" y="-103"/>
</transition>
<transition>
    <source ref="99905"/>
    <target ref="40"/>
    <label kind="guard" x="-124" y="331">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(13,56,aConditionalAutomaton)</label>
    <label kind="assignment" x="-124" y="346">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=20,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-94" y="231"/>
</transition>
<transition>
    <source ref="40"/>
    <target ref="40"/>
    <label kind="guard" x="-376" y="401">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="-376" y="416">mChart_MasterShip_OneMVB1_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-641" y="451"/>
    <nail x="-391" y="451"/>
</transition>
<transition>
    <source ref="40"/>
    <target ref="99904"/>
    <label kind="guard" x="-377" y="340">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-377" y="355">mSourceRecordArray[1]=21,mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="-347" y="240"/>
</transition>
<transition>
    <source ref="99904"/>
    <target ref="40"/>
    <label kind="guard" x="-361" y="387">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-361" y="402">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="-331" y="287"/>
</transition>
<transition>
    <source ref="99904"/>
    <target ref="16"/>
    <label kind="guard" x="356" y="7">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="356" y="22">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=21</label>
    <nail x="386" y="-93"/>
</transition>
<transition>
    <source ref="16"/>
    <target ref="40"/>
    <label kind="guard" x="173" y="70">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==21&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==3</label>
    <label kind="assignment" x="173" y="85">mChart_MasterShip_OneMVB1_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(1)</label>
    <nail x="203" y="-30"/>
</transition>
<transition>
    <source ref="39"/>
    <target ref="99903"/>
    <label kind="guard" x="426" y="33">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==3&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="426" y="48">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="456" y="-67"/>
</transition>
<transition>
    <source ref="99903"/>
    <target ref="39"/>
    <label kind="guard" x="393" y="-3">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(13,54,aConditionalAutomaton)&amp;&amp;(Chart_status_response_type&gt;=2))</label>
    <label kind="assignment" x="393" y="12">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="423" y="-103"/>
</transition>
<transition>
    <source ref="99903"/>
    <target ref="40"/>
    <label kind="guard" x="-124" y="331">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(13,54,aConditionalAutomaton)&amp;&amp;(Chart_status_response_type&gt;=2)</label>
    <label kind="assignment" x="-124" y="346">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=22,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-94" y="231"/>
</transition>
<transition>
    <source ref="16"/>
    <target ref="99901"/>
    <label kind="guard" x="854" y="185">mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==2&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="854" y="200">mSourceRecordArray[2]=23,mChart_MasterShip_OneMVB1_LOGICPathSelect[1]++</label>
    <nail x="884" y="85"/>
</transition>
<transition>
    <source ref="99901"/>
    <target ref="16"/>
    <label kind="guard" x="807" y="170">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="807" y="185">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=-1</label>
    <nail x="837" y="70"/>
</transition>
<transition>
    <source ref="99901"/>
    <target ref="15"/>
    <label kind="guard" x="644" y="169">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="644" y="184">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=23</label>
    <nail x="674" y="69"/>
</transition>
<transition>
    <source ref="15"/>
    <target ref="16"/>
    <label kind="guard" x="833" y="-271">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[2]==23&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[2]==3</label>
    <label kind="assignment" x="833" y="-256">mChart_MasterShip_OneMVB1_LOGICChildPath[1] = -1,ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(2)</label>
    <nail x="848" y="-321"/>
</transition>
<transition>
    <source ref="14"/>
    <target ref="99900"/>
    <label kind="guard" x="101" y="398">mChart_MasterShip_OneMVB1_LOGICPathSelect[3]==2&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="101" y="413">mChart_MasterShip_OneMVB1_LOGICPathSelect[3]++</label>
    <nail x="131" y="298"/>
</transition>
<transition>
    <source ref="99900"/>
    <target ref="14"/>
    <label kind="guard" x="149" y="386">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="149" y="401">mChart_MasterShip_OneMVB1_LOGICChildPath[3]=-1</label>
    <nail x="179" y="286"/>
</transition>
<transition>
    <source ref="99900"/>
    <target ref="33"/>
    <label kind="guard" x="-14" y="232">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-14" y="247">mChart_MasterShip_OneMVB1_LOGICChildPath[3]=24,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="16" y="132"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="35"/>
    <label kind="guard" x="209" y="331">JVI2T(13,35,0)</label>
    <label kind="assignment" x="209" y="346">PopOneEvent()</label>
    <nail x="224" y="281"/>
</transition>
<transition>
    <source ref="35"/>
    <target ref="0"/>
    <label kind="guard" x="164" y="351">JVT2I(13,0)</label>
    <label kind="assignment" x="164" y="366">DelEvtIfOnlyBack()</label>
    <nail x="179" y="301"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="99899"/>
    <label kind="guard" x="211" y="611">mChart_MasterShip_OneMVB1_LOGICPathSelect[2]==2&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="211" y="626">mChart_MasterShip_OneMVB1_LOGICPathSelect[2]++</label>
    <nail x="241" y="511"/>
</transition>
<transition>
    <source ref="99899"/>
    <target ref="17"/>
    <label kind="guard" x="260" y="609">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_ReqId==Chart_CNStatusRequest))</label>
    <label kind="assignment" x="260" y="624">mChart_MasterShip_OneMVB1_LOGICChildPath[2]=-1</label>
    <nail x="290" y="509"/>
</transition>
<transition>
    <source ref="99899"/>
    <target ref="35"/>
    <label kind="guard" x="296" y="486">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_ReqId==Chart_CNStatusRequest)</label>
    <label kind="assignment" x="296" y="501">mChart_MasterShip_OneMVB1_LOGICChildPath[2]=25,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="326" y="386"/>
</transition>
<transition>
    <source ref="35"/>
    <target ref="35"/>
    <label kind="guard" x="418" y="573">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="418" y="588">mChart_MasterShip_OneMVB1_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="153" y="623"/>
    <nail x="403" y="623"/>
</transition>
<transition>
    <source ref="35"/>
    <target ref="99895"/>
    <label kind="guard" x="76" y="266">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="76" y="281">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="106" y="166"/>
</transition>
<transition>
    <source ref="99895"/>
    <target ref="35"/>
    <label kind="guard" x="123" y="251">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="123" y="266">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="153" y="151"/>
</transition>
<transition>
    <source ref="99895"/>
    <target ref="33"/>
    <label kind="guard" x="-27" y="216">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-27" y="231">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=26,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="3" y="116"/>
</transition>
<transition>
    <source ref="17"/>
    <target ref="99893"/>
    <label kind="guard" x="101" y="398">mChart_MasterShip_OneMVB1_LOGICPathSelect[2]==3&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="101" y="413">mChart_MasterShip_OneMVB1_LOGICPathSelect[2]++</label>
    <nail x="131" y="298"/>
</transition>
<transition>
    <source ref="99893"/>
    <target ref="17"/>
    <label kind="guard" x="149" y="386">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="149" y="401">mChart_MasterShip_OneMVB1_LOGICChildPath[2]=-1</label>
    <nail x="179" y="286"/>
</transition>
<transition>
    <source ref="99893"/>
    <target ref="33"/>
    <label kind="guard" x="-14" y="232">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-14" y="247">mChart_MasterShip_OneMVB1_LOGICChildPath[2]=27,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="16" y="132"/>
</transition>
<transition>
    <source ref="12"/>
    <target ref="99892"/>
    <label kind="guard" x="-111" y="211">mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==2&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-111" y="226">mChart_MasterShip_OneMVB1_LOGICPathSelect[1]++</label>
    <nail x="-81" y="111"/>
</transition>
<transition>
    <source ref="99892"/>
    <target ref="12"/>
    <label kind="guard" x="-63" y="200">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-63" y="215">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=-1</label>
    <nail x="-33" y="100"/>
</transition>
<transition>
    <source ref="99892"/>
    <target ref="33"/>
    <label kind="guard" x="-119" y="111">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-119" y="126">mChart_MasterShip_OneMVB1_LOGICChildPath[1]=28,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-89" y="11"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="99890"/>
    <label kind="guard" x="-33" y="460">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==2&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-33" y="475">mSourceRecordArray[1]=29,mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="-3" y="360"/>
</transition>
<transition>
    <source ref="99890"/>
    <target ref="33"/>
    <label kind="guard" x="-23" y="508">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB1_LOGIC_HasMasterFrame==1&amp;&amp;Chart_valid_master_frame==1))</label>
    <label kind="assignment" x="-23" y="523">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="7" y="408"/>
</transition>
<transition>
    <source ref="99890"/>
    <target ref="12"/>
    <label kind="guard" x="131" y="603">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB1_LOGIC_HasMasterFrame==1&amp;&amp;Chart_valid_master_frame==1)</label>
    <label kind="assignment" x="131" y="618">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=29</label>
    <nail x="161" y="503"/>
</transition>
<transition>
    <source ref="12"/>
    <target ref="33"/>
    <label kind="guard" x="2" y="471">JVSE2M(13,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==29&amp;&amp;mChart_MasterShip_OneMVB1_LOGICPathSelect[1]==3</label>
    <label kind="assignment" x="2" y="486">mChart_MasterShip_OneMVB1_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB1_LOGICPathSelectAtDepth(1)</label>
    <nail x="-13" y="521"/>
</transition>
<transition>
    <source ref="33"/>
    <target ref="99889"/>
    <label kind="guard" x="-33" y="460">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]==3&amp;&amp;JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-33" y="475">mChart_MasterShip_OneMVB1_LOGICPathSelect[0]++</label>
    <nail x="-3" y="360"/>
</transition>
<transition>
    <source ref="99889"/>
    <target ref="33"/>
    <label kind="guard" x="-23" y="508">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(13,57,aConditionalAutomaton))</label>
    <label kind="assignment" x="-23" y="523">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=-1</label>
    <nail x="7" y="408"/>
</transition>
<transition>
    <source ref="99889"/>
    <target ref="34"/>
    <label kind="guard" x="335" y="476">JVSE2M(13,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(13,57,aConditionalAutomaton)</label>
    <label kind="assignment" x="335" y="491">mChart_MasterShip_OneMVB1_LOGICChildPath[0]=30,mChart_MasterShip_OneMVB1_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="365" y="376"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1_TimerHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1_TimerHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1_TimerLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Timer_ctrl_initial</name>
    <urgent/>
</location>
<location id="99887" x = "880" y = "210">
    <urgent/>
</location>
<location id="99886" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99887"/>
    <label kind="guard" x="528" y="276">JVSAO(32,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99887"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99887"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,29,32,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(32,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(true,42)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(32,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(29,JNCRA(),true,true,false,false,42),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(32,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,true,42)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(32,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(31)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99886"/>
    <label kind="guard" x="84" y="374">JVSDaO(32,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99886"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99886"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(43),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(32,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,13,29)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(32,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,true),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(32,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,13,29)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(32,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">FirstRoundEventDispatchHandle(false, 32,true,true,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(32,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 32,true,true,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(32,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(32)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(42,true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(32,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(31)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">Timer_parallel_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">JVSE2M(32,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">PopOneEvent()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1_Timer_BControllerHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1_Timer_BControllerHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1_Timer_BControllerLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">BController_ctrl_initial</name>
    <urgent/>
</location>
<location id="99884" x = "880" y = "210">
    <urgent/>
</location>
<location id="99883" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99884"/>
    <label kind="guard" x="528" y="276">JVSAO(42,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99884"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99884"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,32,42,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(42,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(true,44)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(42,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(32,JNCRA(),true,true,false,false,44),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(42,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,true,44)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(42,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(43)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99883"/>
    <label kind="guard" x="84" y="374">JVSDaO(42,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99883"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99883"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(45),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(42,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,false,-1,32)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(42,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,true),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(42,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,false,-1,32)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(42,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">FirstRoundEventDispatchHandle(false, 42,true,true,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(42,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 42,true,true,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(42,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(42)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(44,true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(42,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(43)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">BController_parallel_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">JVSE2M(42,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">PopOneEvent()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_AC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1_Timer_BController_ACLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">AC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99881" x = "880" y = "210">
    <urgent/>
</location>
<location id="99880" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99881"/>
    <label kind="guard" x="528" y="276">JVSAO(44,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99881"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99881"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,42,44,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(44,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(44,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(42,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(44,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(44,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(46)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99880"/>
    <label kind="guard" x="84" y="374">JVSDaO(44,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99880"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99880"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(44,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,false,-1,42)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(44,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(44,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,false,-1,42)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(44,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 44,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(44,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 44,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(44,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),44,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(44)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(44,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(46)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_AC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">AC_serial_initial</name>
    <urgent/>
</location>
<location id="5" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timer</name>
    <urgent/>
</location>
<location id="99876" x = "0" y = "0">
    <urgent/>
</location>
<location id="99874" x = "0" y = "0">
    <urgent/>
</location>
<location id="99872" x = "0" y = "0">
    <urgent/>
</location>
<location id="99871" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(44,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(44,0),ClearChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="5"/>
    <label kind="guard" x="100" y="300">JVI2T(44,5,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(44,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="5"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(44,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath = false,mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_BController_ACLoseControl=false,mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState=5,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounterCleaner(),SetOneIfIncToFalse(5)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="5"/>
    <label kind="guard" x="200" y="540">(!mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(44,aCommonAutomaton)</label>
    <label kind="assignment" x="200" y="555">CommonAutomatonCommunicateWithControllerAndConditional(44,5),ClearChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect()</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="5"/>
    <label kind="guard" x="265" y="530">(mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(44,aCommonAutomaton)</label>
    <label kind="assignment" x="265" y="545">DispatchEvent(eDeActivationOver,44,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath = false</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="99876"/>
    <target ref="5"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB1_Timer_BController_AC_run=1,mChart_MasterShip_OneMVB1_Timer_BController_ACLoseControl=false,mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState=5,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounterCleaner(),SetOneIfIncToFalse(5)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="99876"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0] == 1)&amp;&amp;JVSEF2M(44,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_BController_ACLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="5"/>
    <label kind="guard" x="320" y="450">(mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(44,aCommonAutomaton)</label>
    <label kind="assignment" x="320" y="465">DispatchEvent(eDeActivationOver,44,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath = false</label>
    <nail x="-145" y="500"/>
    <nail x="305" y="500"/>
</transition>
<transition>
    <source ref="99874"/>
    <target ref="5"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB1_Timer_BController_AC_run=0,mChart_MasterShip_OneMVB1_Timer_BController_ACLoseControl=false,mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState=5,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounterCleaner(),SetOneIfIncToFalse(5)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="99874"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0] == 2)&amp;&amp;JVSEF2M(44,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_BController_ACLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="5"/>
    <label kind="guard" x="360" y="420">(mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0] == 3)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(44,aCommonAutomaton)</label>
    <label kind="assignment" x="360" y="435">DispatchEvent(eDeActivationOver,44,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath = false</label>
    <nail x="-170" y="520"/>
    <nail x="330" y="520"/>
</transition>
<transition>
    <source ref="99872"/>
    <target ref="99871"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,44,-1,aCommonAutomaton),DispatchFuncEvent(57,28,29)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99871"/>
    <target ref="5"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(44,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState=5,PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_BController_ACLoseControl=false,mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState=5,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounterCleaner(),SetOneIfIncToFalse(5)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="99872"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0] == 3)&amp;&amp;JVSEF2M(44,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_BController_ACHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_BController_ACLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timer_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">T_standby_timer_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(5,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(44)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(5,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(44,5)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(5,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(44,5)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(5,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_AC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">AC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="5" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timer</name>
    <urgent/>
</location>
<location id="99877" x = "80" y = "80">
    <urgent/>
</location>
<location id="99875" x = "0" y = "0">
    <urgent/>
</location>
<location id="99873" x = "0" y = "0">
    <urgent/>
</location>
<location id="99870" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(44,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(44,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="5"/>
    <label kind="guard" x="145" y="150">JVI2T(44,5,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(44,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99877"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[0]==1&amp;&amp;JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99877"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99877"/>
    <target ref="5"/>
    <label kind="guard" x="100" y="300">JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0]=0,mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="5"/>
    <label kind="guard" x="300" y="310">JVSE2M(44,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[0]==4</label>
    <label kind="assignment" x="300" y="325">mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="99875"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[0]==1&amp;&amp;JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99875"/>
    <target ref="5"/>
    <label kind="guard" x="10" y="260">JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(44,41,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99875"/>
    <target ref="5"/>
    <label kind="guard" x="-24" y="222">JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(44,41,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0]=1,mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="99873"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[0]==2&amp;&amp;JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99873"/>
    <target ref="5"/>
    <label kind="guard" x="10" y="260">JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(44,42,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99873"/>
    <target ref="5"/>
    <label kind="guard" x="-24" y="222">JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(44,42,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0]=2,mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="5"/>
    <target ref="99870"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[0]==3&amp;&amp;JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_BController_ACPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99870"/>
    <target ref="5"/>
    <label kind="guard" x="10" y="260">JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB1_Timer_BController_AC_run==1&amp;&amp;Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounter[0]&gt;=(5/1)))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99870"/>
    <target ref="5"/>
    <label kind="guard" x="-24" y="222">JVSE2M(44,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB1_Timer_BController_AC_run==1&amp;&amp;Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timerEventCounter[0]&gt;=(5/1))</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_BController_ACChildPath[0]=3,mChart_MasterShip_OneMVB1_Timer_BController_ACExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_BC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1_Timer_BController_BCLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">BC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99868" x = "880" y = "210">
    <urgent/>
</location>
<location id="99867" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99868"/>
    <label kind="guard" x="528" y="276">JVSAO(46,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99868"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99868"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,42,46,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(46,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(46,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(42,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(46,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(46,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(45)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99867"/>
    <label kind="guard" x="84" y="374">JVSDaO(46,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99867"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99867"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(46,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,44,42)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(46,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(46,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,44,42)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(46,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 46,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(46,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 46,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(46,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),46,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(46)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(46,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(45)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_BC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">BC_serial_initial</name>
    <urgent/>
</location>
<location id="6" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timer</name>
    <urgent/>
</location>
<location id="99863" x = "0" y = "0">
    <urgent/>
</location>
<location id="99861" x = "0" y = "0">
    <urgent/>
</location>
<location id="99859" x = "0" y = "0">
    <urgent/>
</location>
<location id="99858" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(46,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(46,0),ClearChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="6"/>
    <label kind="guard" x="100" y="300">JVI2T(46,6,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(46,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="6"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(46,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath = false,mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_BController_BCLoseControl=false,mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState=6,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounterCleaner(),SetOneIfIncToFalse(6)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="6"/>
    <label kind="guard" x="200" y="540">(!mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(46,aCommonAutomaton)</label>
    <label kind="assignment" x="200" y="555">CommonAutomatonCommunicateWithControllerAndConditional(46,6),ClearChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect()</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="6"/>
    <label kind="guard" x="265" y="530">(mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(46,aCommonAutomaton)</label>
    <label kind="assignment" x="265" y="545">DispatchEvent(eDeActivationOver,46,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath = false</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="99863"/>
    <target ref="6"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB1_Timer_BController_BC_run=1,mChart_MasterShip_OneMVB1_Timer_BController_BCLoseControl=false,mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState=6,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounterCleaner(),SetOneIfIncToFalse(6)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="99863"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0] == 1)&amp;&amp;JVSEF2M(46,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_BController_BCLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="6"/>
    <label kind="guard" x="320" y="450">(mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(46,aCommonAutomaton)</label>
    <label kind="assignment" x="320" y="465">DispatchEvent(eDeActivationOver,46,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath = false</label>
    <nail x="-145" y="500"/>
    <nail x="305" y="500"/>
</transition>
<transition>
    <source ref="99861"/>
    <target ref="6"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB1_Timer_BController_BC_run=0,mChart_MasterShip_OneMVB1_Timer_BController_BCLoseControl=false,mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState=6,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounterCleaner(),SetOneIfIncToFalse(6)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="99861"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0] == 2)&amp;&amp;JVSEF2M(46,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_BController_BCLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="6"/>
    <label kind="guard" x="360" y="420">(mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0] == 3)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(46,aCommonAutomaton)</label>
    <label kind="assignment" x="360" y="435">DispatchEvent(eDeActivationOver,46,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath = false</label>
    <nail x="-170" y="520"/>
    <nail x="330" y="520"/>
</transition>
<transition>
    <source ref="99859"/>
    <target ref="99858"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,46,-1,aCommonAutomaton),DispatchFuncEvent(52,28,29)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99858"/>
    <target ref="6"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(46,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState=6,PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_BController_BCLoseControl=false,mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState=6,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounterCleaner(),SetOneIfIncToFalse(6)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="99859"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0] == 3)&amp;&amp;JVSEF2M(46,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_BController_BCHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_BController_BCLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timer_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">T_master_turn_timer_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(6,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(46)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(6,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(46,6)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(6,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(46,6)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(6,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_BC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">BC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="6" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timer</name>
    <urgent/>
</location>
<location id="99864" x = "80" y = "80">
    <urgent/>
</location>
<location id="99862" x = "0" y = "0">
    <urgent/>
</location>
<location id="99860" x = "0" y = "0">
    <urgent/>
</location>
<location id="99857" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(46,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(46,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="6"/>
    <label kind="guard" x="145" y="150">JVI2T(46,6,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(46,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99864"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[0]==1&amp;&amp;JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99864"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99864"/>
    <target ref="6"/>
    <label kind="guard" x="100" y="300">JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0]=0,mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="6"/>
    <label kind="guard" x="300" y="310">JVSE2M(46,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[0]==4</label>
    <label kind="assignment" x="300" y="325">mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="99862"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[0]==1&amp;&amp;JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99862"/>
    <target ref="6"/>
    <label kind="guard" x="10" y="260">JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(46,43,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99862"/>
    <target ref="6"/>
    <label kind="guard" x="-24" y="222">JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(46,43,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0]=1,mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="99860"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[0]==2&amp;&amp;JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99860"/>
    <target ref="6"/>
    <label kind="guard" x="10" y="260">JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(46,44,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99860"/>
    <target ref="6"/>
    <label kind="guard" x="-24" y="222">JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(46,44,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0]=2,mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="6"/>
    <target ref="99857"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[0]==3&amp;&amp;JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_BController_BCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99857"/>
    <target ref="6"/>
    <label kind="guard" x="10" y="260">JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB1_Timer_BController_BC_run==1&amp;&amp;Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounter[0]&gt;=(5/1)))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99857"/>
    <target ref="6"/>
    <label kind="guard" x="-24" y="222">JVSE2M(46,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB1_Timer_BController_BC_run==1&amp;&amp;Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timerEventCounter[0]&gt;=(5/1))</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_BController_BCChildPath[0]=3,mChart_MasterShip_OneMVB1_Timer_BController_BCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_CC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1_Timer_BController_CCHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1_Timer_BController_CCHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1_Timer_BController_CCLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">CC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99855" x = "880" y = "210">
    <urgent/>
</location>
<location id="99854" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99855"/>
    <label kind="guard" x="528" y="276">JVSAO(45,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99855"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99855"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,42,45,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(45,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(45,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(42,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(45,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(45,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99854"/>
    <label kind="guard" x="84" y="374">JVSDaO(45,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99854"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99854"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(45,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,46,42)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(45,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(45,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,46,42)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(45,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 45,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(45,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 45,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(45,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),45,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(45)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(45,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_CC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">CC_serial_initial</name>
    <urgent/>
</location>
<location id="47" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_BController_CC_resign_event_watcher</name>
    <urgent/>
</location>
<location id="99850" x = "0" y = "0">
    <urgent/>
</location>
<location id="99848" x = "0" y = "0">
    <urgent/>
</location>
<location id="99847" x = "0" y = "0">
    <urgent/>
</location>
<location id="99846" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath)&amp;&amp;JVSE2M(45,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(45,0),ClearChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="47"/>
    <label kind="guard" x="100" y="300">JVI2T(45,47,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="47"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(45,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="47"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath)&amp;&amp;JVSE2M(45,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath = false,mChart_MasterShip_OneMVB1_Timer_BController_CCHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_BController_CCLoseControl=false,mChart_MasterShip_OneMVB1_Timer_BController_CCHistoryState=47,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="47"/>
    <target ref="47"/>
    <label kind="guard" x="175" y="520">(!mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath)&amp;&amp;JVSE2M(45,aCommonAutomaton)</label>
    <label kind="assignment" x="175" y="535">CommonAutomatonCommunicateWithControllerAndConditional(45,47),ClearChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect()</label>
    <nail x="-45" y="420"/>
    <nail x="205" y="420"/>
</transition>
<transition>
    <source ref="47"/>
    <target ref="47"/>
    <label kind="guard" x="240" y="510">(mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath)&amp;&amp;JVSE2M(45,aCommonAutomaton)</label>
    <label kind="assignment" x="240" y="525">DispatchEvent(eDeActivationOver,45,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath = false</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="99850"/>
    <target ref="47"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB1_Timer_BController_CC_canpatch=1,mChart_MasterShip_OneMVB1_Timer_BController_CCLoseControl=false,mChart_MasterShip_OneMVB1_Timer_BController_CCHistoryState=47,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="47"/>
    <target ref="99850"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[0] == 1)&amp;&amp;JVSEF2M(45,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_BController_CCHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_BController_CCLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="47"/>
    <target ref="47"/>
    <label kind="guard" x="295" y="430">(mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath)&amp;&amp;JVSE2M(45,aCommonAutomaton)</label>
    <label kind="assignment" x="295" y="445">DispatchEvent(eDeActivationOver,45,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath = false</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="99848"/>
    <target ref="99847"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,45,-1,aCommonAutomaton),DispatchFuncEvent(51,28,29)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99847"/>
    <target ref="99846"/>
    <label kind="guard" x="-30" y="100">JVSEF2M(45,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-30" y="115">PopOneEvent(),Chart_MasterShip_OneMVB1_Timer_BController_CC_canpatch=0</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99846"/>
    <target ref="47"/>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_BController_CCLoseControl=false,mChart_MasterShip_OneMVB1_Timer_BController_CCHistoryState=47,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="47"/>
    <target ref="99848"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[0] == 2)&amp;&amp;JVSEF2M(45,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_BController_CCHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_BController_CCLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_CC_resign_event_watcher_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">resign_event_watcher_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(47,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(45)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(47,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(45,47)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(47,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(45,47)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(47,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_BController_CC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">CC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="47" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_BController_CC_resign_event_watcher</name>
    <urgent/>
</location>
<location id="99851" x = "80" y = "80">
    <urgent/>
</location>
<location id="99849" x = "0" y = "0">
    <urgent/>
</location>
<location id="99845" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(45,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(45,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="47"/>
    <label kind="guard" x="145" y="150">JVI2T(45,47,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="47"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(45,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99851"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect[0]==1&amp;&amp;JVSE2M(45,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99851"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(45,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99851"/>
    <target ref="47"/>
    <label kind="guard" x="100" y="300">JVSE2M(45,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[0]=0,mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="47"/>
    <target ref="47"/>
    <label kind="guard" x="260" y="340">JVSE2M(45,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect[0]==3</label>
    <label kind="assignment" x="260" y="355">mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="47"/>
    <target ref="99849"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect[0]==1&amp;&amp;JVSE2M(45,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99849"/>
    <target ref="47"/>
    <label kind="guard" x="10" y="260">JVSE2M(45,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(45,58,aConditionalAutomaton)&amp;&amp;(Chart_resign==0))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99849"/>
    <target ref="47"/>
    <label kind="guard" x="-24" y="222">JVSE2M(45,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(45,58,aConditionalAutomaton)&amp;&amp;(Chart_resign==0)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[0]=1,mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="47"/>
    <target ref="99845"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect[0]==2&amp;&amp;JVSE2M(45,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_BController_CCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99845"/>
    <target ref="47"/>
    <label kind="guard" x="10" y="260">JVSE2M(45,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_resign==1&amp;&amp;Chart_MasterShip_OneMVB1_Timer_BController_CC_canpatch==1))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99845"/>
    <target ref="47"/>
    <label kind="guard" x="-24" y="222">JVSE2M(45,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_resign==1&amp;&amp;Chart_MasterShip_OneMVB1_Timer_BController_CC_canpatch==1)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_BController_CCChildPath[0]=2,mChart_MasterShip_OneMVB1_Timer_BController_CCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1_Timer_AControllerHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1_Timer_AControllerHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1_Timer_AControllerLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">AController_ctrl_initial</name>
    <urgent/>
</location>
<location id="99843" x = "880" y = "210">
    <urgent/>
</location>
<location id="99842" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99843"/>
    <label kind="guard" x="528" y="276">JVSAO(43,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99843"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99843"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,32,43,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(43,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(true,48)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(43,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(32,JNCRA(),true,true,false,false,48),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(43,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,true,48)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(43,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99842"/>
    <label kind="guard" x="84" y="374">JVSDaO(43,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99842"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99842"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(49),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(43,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,42,32)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(43,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,true),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(43,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,42,32)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(43,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">FirstRoundEventDispatchHandle(false, 43,true,true,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(43,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 43,true,true,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(43,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(43)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(48,true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(43,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">AController_parallel_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">JVSE2M(43,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">PopOneEvent()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_DC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1_Timer_AController_DCLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">DC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99840" x = "880" y = "210">
    <urgent/>
</location>
<location id="99839" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99840"/>
    <label kind="guard" x="528" y="276">JVSAO(48,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99840"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99840"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,43,48,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(48,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(48,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(43,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(48,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(48,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(50)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99839"/>
    <label kind="guard" x="84" y="374">JVSDaO(48,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99839"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99839"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(48,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,false,-1,43)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(48,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(48,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,false,-1,43)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(48,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 48,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(48,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 48,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(48,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),48,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(48)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(48,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(50)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_DC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">DC_serial_initial</name>
    <urgent/>
</location>
<location id="2" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timer</name>
    <urgent/>
</location>
<location id="99835" x = "0" y = "0">
    <urgent/>
</location>
<location id="99833" x = "0" y = "0">
    <urgent/>
</location>
<location id="99831" x = "0" y = "0">
    <urgent/>
</location>
<location id="99830" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(48,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(48,0),ClearChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="2"/>
    <label kind="guard" x="100" y="300">JVI2T(48,2,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(48,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="2"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(48,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath = false,mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_AController_DCLoseControl=false,mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState=2,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounterCleaner(),SetOneIfIncToFalse(2)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="2"/>
    <label kind="guard" x="200" y="540">(!mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(48,aCommonAutomaton)</label>
    <label kind="assignment" x="200" y="555">CommonAutomatonCommunicateWithControllerAndConditional(48,2),ClearChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect()</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="2"/>
    <label kind="guard" x="265" y="530">(mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(48,aCommonAutomaton)</label>
    <label kind="assignment" x="265" y="545">DispatchEvent(eDeActivationOver,48,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath = false</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="99835"/>
    <target ref="2"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB1_Timer_AController_DC_run=1,mChart_MasterShip_OneMVB1_Timer_AController_DCLoseControl=false,mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState=2,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounterCleaner(),SetOneIfIncToFalse(2)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="99835"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0] == 1)&amp;&amp;JVSEF2M(48,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_AController_DCLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="2"/>
    <label kind="guard" x="320" y="450">(mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(48,aCommonAutomaton)</label>
    <label kind="assignment" x="320" y="465">DispatchEvent(eDeActivationOver,48,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath = false</label>
    <nail x="-145" y="500"/>
    <nail x="305" y="500"/>
</transition>
<transition>
    <source ref="99833"/>
    <target ref="2"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB1_Timer_AController_DC_run=0,mChart_MasterShip_OneMVB1_Timer_AController_DCLoseControl=false,mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState=2,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounterCleaner(),SetOneIfIncToFalse(2)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="99833"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0] == 2)&amp;&amp;JVSEF2M(48,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_AController_DCLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="2"/>
    <label kind="guard" x="360" y="420">(mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0] == 3)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(48,aCommonAutomaton)</label>
    <label kind="assignment" x="360" y="435">DispatchEvent(eDeActivationOver,48,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath = false</label>
    <nail x="-170" y="520"/>
    <nail x="330" y="520"/>
</transition>
<transition>
    <source ref="99831"/>
    <target ref="99830"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,48,-1,aCommonAutomaton),DispatchFuncEvent(55,28,29)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99830"/>
    <target ref="2"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(48,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState=2,PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_AController_DCLoseControl=false,mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState=2,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounterCleaner(),SetOneIfIncToFalse(2)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="99831"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0] == 3)&amp;&amp;JVSEF2M(48,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_AController_DCHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_AController_DCLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timer_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">T_interim_timer_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(2,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(48)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(2,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(48,2)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(2,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(48,2)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(2,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_DC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">DC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="2" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timer</name>
    <urgent/>
</location>
<location id="99836" x = "80" y = "80">
    <urgent/>
</location>
<location id="99834" x = "0" y = "0">
    <urgent/>
</location>
<location id="99832" x = "0" y = "0">
    <urgent/>
</location>
<location id="99829" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(48,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(48,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="2"/>
    <label kind="guard" x="145" y="150">JVI2T(48,2,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(48,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99836"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[0]==1&amp;&amp;JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99836"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99836"/>
    <target ref="2"/>
    <label kind="guard" x="100" y="300">JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0]=0,mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="2"/>
    <label kind="guard" x="300" y="310">JVSE2M(48,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[0]==4</label>
    <label kind="assignment" x="300" y="325">mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="99834"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[0]==1&amp;&amp;JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99834"/>
    <target ref="2"/>
    <label kind="guard" x="10" y="260">JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(48,45,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99834"/>
    <target ref="2"/>
    <label kind="guard" x="-24" y="222">JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(48,45,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0]=1,mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="99832"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[0]==2&amp;&amp;JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99832"/>
    <target ref="2"/>
    <label kind="guard" x="10" y="260">JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(48,46,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99832"/>
    <target ref="2"/>
    <label kind="guard" x="-24" y="222">JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(48,46,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0]=2,mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="2"/>
    <target ref="99829"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[0]==3&amp;&amp;JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_AController_DCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99829"/>
    <target ref="2"/>
    <label kind="guard" x="10" y="260">JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB1_Timer_AController_DC_run==1&amp;&amp;Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounter[0]&gt;=(3/1)))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99829"/>
    <target ref="2"/>
    <label kind="guard" x="-24" y="222">JVSE2M(48,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB1_Timer_AController_DC_run==1&amp;&amp;Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timerEventCounter[0]&gt;=(3/1))</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_AController_DCChildPath[0]=3,mChart_MasterShip_OneMVB1_Timer_AController_DCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_EC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1_Timer_AController_ECLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">EC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99827" x = "880" y = "210">
    <urgent/>
</location>
<location id="99826" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99827"/>
    <label kind="guard" x="528" y="276">JVSAO(50,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99827"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99827"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,43,50,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(50,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(50,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(43,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(50,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(50,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(49)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99826"/>
    <label kind="guard" x="84" y="374">JVSDaO(50,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99826"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99826"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(50,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,48,43)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(50,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(50,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,48,43)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(50,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 50,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(50,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 50,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(50,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),50,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(50)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(50,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(49)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_EC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">EC_serial_initial</name>
    <urgent/>
</location>
<location id="3" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timer</name>
    <urgent/>
</location>
<location id="99822" x = "0" y = "0">
    <urgent/>
</location>
<location id="99820" x = "0" y = "0">
    <urgent/>
</location>
<location id="99818" x = "0" y = "0">
    <urgent/>
</location>
<location id="99817" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(50,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(50,0),ClearChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="3"/>
    <label kind="guard" x="100" y="300">JVI2T(50,3,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(50,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="3"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(50,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath = false,mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_AController_ECLoseControl=false,mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState=3,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounterCleaner(),SetOneIfIncToFalse(3)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="3"/>
    <label kind="guard" x="200" y="540">(!mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(50,aCommonAutomaton)</label>
    <label kind="assignment" x="200" y="555">CommonAutomatonCommunicateWithControllerAndConditional(50,3),ClearChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect()</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="3"/>
    <label kind="guard" x="265" y="530">(mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(50,aCommonAutomaton)</label>
    <label kind="assignment" x="265" y="545">DispatchEvent(eDeActivationOver,50,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath = false</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="99822"/>
    <target ref="3"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB1_Timer_AController_EC_run=1,mChart_MasterShip_OneMVB1_Timer_AController_ECLoseControl=false,mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState=3,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounterCleaner(),SetOneIfIncToFalse(3)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="99822"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0] == 1)&amp;&amp;JVSEF2M(50,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_AController_ECLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="3"/>
    <label kind="guard" x="320" y="450">(mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(50,aCommonAutomaton)</label>
    <label kind="assignment" x="320" y="465">DispatchEvent(eDeActivationOver,50,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath = false</label>
    <nail x="-145" y="500"/>
    <nail x="305" y="500"/>
</transition>
<transition>
    <source ref="99820"/>
    <target ref="3"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB1_Timer_AController_EC_run=0,mChart_MasterShip_OneMVB1_Timer_AController_ECLoseControl=false,mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState=3,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounterCleaner(),SetOneIfIncToFalse(3)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="99820"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0] == 2)&amp;&amp;JVSEF2M(50,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_AController_ECLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="3"/>
    <label kind="guard" x="360" y="420">(mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0] == 3)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(50,aCommonAutomaton)</label>
    <label kind="assignment" x="360" y="435">DispatchEvent(eDeActivationOver,50,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath = false</label>
    <nail x="-170" y="520"/>
    <nail x="330" y="520"/>
</transition>
<transition>
    <source ref="99818"/>
    <target ref="99817"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,50,-1,aCommonAutomaton),DispatchFuncEvent(56,28,29)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99817"/>
    <target ref="3"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(50,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState=3,PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_AController_ECLoseControl=false,mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState=3,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounterCleaner(),SetOneIfIncToFalse(3)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="99818"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0] == 3)&amp;&amp;JVSEF2M(50,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_AController_ECHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_AController_ECLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timer_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">T_find_timer_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(3,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(50)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(3,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(50,3)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(3,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(50,3)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(3,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_EC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">EC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="3" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timer</name>
    <urgent/>
</location>
<location id="99823" x = "80" y = "80">
    <urgent/>
</location>
<location id="99821" x = "0" y = "0">
    <urgent/>
</location>
<location id="99819" x = "0" y = "0">
    <urgent/>
</location>
<location id="99816" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(50,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(50,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="3"/>
    <label kind="guard" x="145" y="150">JVI2T(50,3,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(50,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99823"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[0]==1&amp;&amp;JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99823"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99823"/>
    <target ref="3"/>
    <label kind="guard" x="100" y="300">JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0]=0,mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="3"/>
    <label kind="guard" x="300" y="310">JVSE2M(50,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[0]==4</label>
    <label kind="assignment" x="300" y="325">mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="99821"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[0]==1&amp;&amp;JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99821"/>
    <target ref="3"/>
    <label kind="guard" x="10" y="260">JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(50,47,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99821"/>
    <target ref="3"/>
    <label kind="guard" x="-24" y="222">JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(50,47,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0]=1,mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="99819"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[0]==2&amp;&amp;JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99819"/>
    <target ref="3"/>
    <label kind="guard" x="10" y="260">JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(50,48,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99819"/>
    <target ref="3"/>
    <label kind="guard" x="-24" y="222">JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(50,48,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0]=2,mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="3"/>
    <target ref="99816"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[0]==3&amp;&amp;JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_AController_ECPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99816"/>
    <target ref="3"/>
    <label kind="guard" x="10" y="260">JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB1_Timer_AController_EC_run==1&amp;&amp;Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounter[0]&gt;=(5/1)))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99816"/>
    <target ref="3"/>
    <label kind="guard" x="-24" y="222">JVSE2M(50,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB1_Timer_AController_EC_run==1&amp;&amp;Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timerEventCounter[0]&gt;=(5/1))</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_AController_ECChildPath[0]=3,mChart_MasterShip_OneMVB1_Timer_AController_ECExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">UltimateController_ctrl_initial</name>
    <urgent/>
</location>
<location id="99814" x = "880" y = "210">
    <urgent/>
</location>
<location id="99813" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99814"/>
    <label kind="guard" x="528" y="276">JVSAO(49,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99814"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99814"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,43,49,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(49,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(49,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(43,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(49,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(49,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99813"/>
    <label kind="guard" x="84" y="374">JVSDaO(49,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99813"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99813"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(49,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,50,43)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(49,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(49,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,50,43)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(49,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 49,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(49,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 49,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(49,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),49,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(49)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(49,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_UltimateController</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">UltimateController_serial_initial</name>
    <urgent/>
</location>
<location id="4" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_Time</name>
    <urgent/>
</location>
<location id="99809" x = "0" y = "0">
    <urgent/>
</location>
<location id="99808" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerExistPath)&amp;&amp;JVSE2M(49,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(49,0),ClearChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="4"/>
    <label kind="guard" x="100" y="300">JVI2T(49,4,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="4"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(49,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="4"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerExistPath)&amp;&amp;JVSE2M(49,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerExistPath = false,mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerLoseControl=false,mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerHistoryState=4,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounterCleaner(),SetOneIfIncToFalse(4)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="4"/>
    <target ref="4"/>
    <label kind="guard" x="150" y="500">(!mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerExistPath)&amp;&amp;JVSE2M(49,aCommonAutomaton)</label>
    <label kind="assignment" x="150" y="515">CommonAutomatonCommunicateWithControllerAndConditional(49,4),ClearChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect()</label>
    <nail x="-20" y="400"/>
    <nail x="180" y="400"/>
</transition>
<transition>
    <source ref="4"/>
    <target ref="4"/>
    <label kind="guard" x="215" y="490">(mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerExistPath)&amp;&amp;JVSE2M(49,aCommonAutomaton)</label>
    <label kind="assignment" x="215" y="505">DispatchEvent(eDeActivationOver,49,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerExistPath = false</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="99809"/>
    <target ref="99808"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,49,-1,aCommonAutomaton),DispatchFuncEvent(58,42,45)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99808"/>
    <target ref="4"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(49,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerHistoryState=4,PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerLoseControl=false,mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerHistoryState=4,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounterCleaner(),SetOneIfIncToFalse(4)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="4"/>
    <target ref="99809"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerChildPath[0] == 1)&amp;&amp;JVSEF2M(49,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerHistoryState=-1,mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_Time_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">The_Time_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(4,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(49)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(4,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(49,4)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(4,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(49,4)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(4,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">UltimateController_ser_cond_initial</name>
    <urgent/>
</location>
<location id="4" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_Time</name>
    <urgent/>
</location>
<location id="99810" x = "80" y = "80">
    <urgent/>
</location>
<location id="99807" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(49,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(49,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="4"/>
    <label kind="guard" x="145" y="150">JVI2T(49,4,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="4"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(49,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99810"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect[0]==1&amp;&amp;JVSE2M(49,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99810"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(49,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99810"/>
    <target ref="4"/>
    <label kind="guard" x="100" y="300">JVSE2M(49,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerChildPath[0]=0,mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="4"/>
    <target ref="4"/>
    <label kind="guard" x="220" y="370">JVSE2M(49,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect[0]==2</label>
    <label kind="assignment" x="220" y="385">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-45" y="420"/>
    <nail x="205" y="420"/>
</transition>
<transition>
    <source ref="4"/>
    <target ref="99807"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect[0]==1&amp;&amp;JVSE2M(49,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99807"/>
    <target ref="4"/>
    <label kind="guard" x="10" y="260">JVSE2M(49,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounter[0]&gt;=(1/1)))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99807"/>
    <target ref="4"/>
    <label kind="guard" x="-24" y="222">JVSE2M(49,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_TimeEventCounter[0]&gt;=(1/1))</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerChildPath[0]=1,mChart_MasterShip_OneMVB1_Timer_AController_UltimateControllerExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Chnannel_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB1_ChnannelHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB1_ChnannelHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB1_ChnannelLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Chnannel_ctrl_initial</name>
    <urgent/>
</location>
<location id="99805" x = "880" y = "210">
    <urgent/>
</location>
<location id="99804" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99805"/>
    <label kind="guard" x="528" y="276">JVSAO(31,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99805"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99805"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,29,31,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(31,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(31,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(29,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(31,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(31,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99804"/>
    <label kind="guard" x="84" y="374">JVSDaO(31,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99804"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99804"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(31,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,32,29)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(31,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(31,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,32,29)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(31,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 31,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(31,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 31,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(31,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),31,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(31)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(31,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Chnannel</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">Chnannel_serial_initial</name>
    <urgent/>
</location>
<location id="51" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Chnannel_Master_Frame</name>
    <urgent/>
</location>
<location id="99799" x = "0" y = "0">
    <urgent/>
</location>
<location id="99798" x = "0" y = "0">
    <urgent/>
</location>
<location id="99797" x = "0" y = "0">
    <urgent/>
</location>
<location id="99795" x = "0" y = "0">
    <urgent/>
</location>
<location id="99794" x = "0" y = "0">
    <urgent/>
</location>
<location id="99793" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB1_ChnannelExistPath)&amp;&amp;JVSE2M(31,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(31,0),ClearChart_MasterShip_OneMVB1_ChnannelPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="51"/>
    <label kind="guard" x="100" y="300">JVI2T(31,51,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(31,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="51"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB1_ChnannelChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB1_ChnannelExistPath)&amp;&amp;JVSE2M(31,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB1_ChnannelExistPath = false,mChart_MasterShip_OneMVB1_ChnannelHistoryState=-1,mChart_MasterShip_OneMVB1_ChnannelLoseControl=false,mChart_MasterShip_OneMVB1_ChnannelHistoryState=51,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="51"/>
    <label kind="guard" x="225" y="560">(!mChart_MasterShip_OneMVB1_ChnannelExistPath)&amp;&amp;JVSE2M(31,aCommonAutomaton)</label>
    <label kind="assignment" x="225" y="575">CommonAutomatonCommunicateWithControllerAndConditional(31,51),ClearChart_MasterShip_OneMVB1_ChnannelPathSelect()</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="51"/>
    <label kind="guard" x="290" y="550">(mChart_MasterShip_OneMVB1_ChnannelChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB1_ChnannelExistPath)&amp;&amp;JVSE2M(31,aCommonAutomaton)</label>
    <label kind="assignment" x="290" y="565">DispatchEvent(eDeActivationOver,31,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_ChnannelExistPath = false</label>
    <nail x="-145" y="500"/>
    <nail x="305" y="500"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="51"/>
    <label kind="guard" x="345" y="470">(mChart_MasterShip_OneMVB1_ChnannelChildPath[0] == 1)&amp;&amp;JVSEF2M(31,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="345" y="485">PopOneEvent(),mChart_MasterShip_OneMVB1_ChnannelHistoryState=-1,mChart_MasterShip_OneMVB1_ChnannelLoseControl=false,mChart_MasterShip_OneMVB1_ChnannelHistoryState=51,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-170" y="520"/>
    <nail x="330" y="520"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="51"/>
    <label kind="guard" x="385" y="440">(mChart_MasterShip_OneMVB1_ChnannelChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB1_ChnannelExistPath)&amp;&amp;JVSE2M(31,aCommonAutomaton)</label>
    <label kind="assignment" x="385" y="455">DispatchEvent(eDeActivationOver,31,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_ChnannelExistPath = false</label>
    <nail x="-195" y="540"/>
    <nail x="355" y="540"/>
</transition>
<transition>
    <source ref="99799"/>
    <target ref="99798"/>
    <label kind="assignment" x="-30" y="115">Chart_valid_master_frame=0</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99798"/>
    <target ref="99797"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,31,-1,aCommonAutomaton),DispatchFuncEvent(49,29,13)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99797"/>
    <target ref="51"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(31,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_ChnannelHistoryState=51,PopOneEvent(),mChart_MasterShip_OneMVB1_ChnannelLoseControl=false,mChart_MasterShip_OneMVB1_ChnannelHistoryState=51,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="99799"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB1_ChnannelChildPath[0] == 2)&amp;&amp;JVSEF2M(31,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB1_ChnannelHistoryState=-1,mChart_MasterShip_OneMVB1_ChnannelLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="51"/>
    <label kind="guard" x="425" y="410">(mChart_MasterShip_OneMVB1_ChnannelChildPath[0] == 3)&amp;&amp;(mChart_MasterShip_OneMVB1_ChnannelExistPath)&amp;&amp;JVSE2M(31,aCommonAutomaton)</label>
    <label kind="assignment" x="425" y="425">DispatchEvent(eDeActivationOver,31,-1,aCommonAutomaton),mChart_MasterShip_OneMVB1_ChnannelExistPath = false</label>
    <nail x="-220" y="560"/>
    <nail x="380" y="560"/>
</transition>
<transition>
    <source ref="99795"/>
    <target ref="99794"/>
    <label kind="assignment" x="-30" y="115">Chart_valid_master_frame=Chart_valid_master_input</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99794"/>
    <target ref="99793"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,31,-1,aCommonAutomaton),DispatchFuncEvent(49,29,13)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99793"/>
    <target ref="51"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(31,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_ChnannelHistoryState=51,PopOneEvent(),mChart_MasterShip_OneMVB1_ChnannelLoseControl=false,mChart_MasterShip_OneMVB1_ChnannelHistoryState=51,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="99795"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB1_ChnannelChildPath[0] == 3)&amp;&amp;JVSEF2M(31,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB1_ChnannelHistoryState=-1,mChart_MasterShip_OneMVB1_ChnannelLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Chnannel_Master_Frame_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Master_Frame_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(51,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(31)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(51,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(31,51)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(51,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(31,51)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(51,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB1_Chnannel_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">Chnannel_ser_cond_initial</name>
    <urgent/>
</location>
<location id="51" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB1_Chnannel_Master_Frame</name>
    <urgent/>
</location>
<location id="99801" x = "80" y = "80">
    <urgent/>
</location>
<location id="99800" x = "0" y = "0">
    <urgent/>
</location>
<location id="99796" x = "0" y = "0">
    <urgent/>
</location>
<location id="99792" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(31,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_ChnannelPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB1_ChnannelExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(31,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="51"/>
    <label kind="guard" x="145" y="150">JVI2T(31,51,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(31,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99801"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB1_ChnannelPathSelect[0]==1&amp;&amp;JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_ChnannelPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99801"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB1_ChnannelChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99801"/>
    <target ref="51"/>
    <label kind="guard" x="100" y="300">JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB1_ChnannelChildPath[0]=0,mChart_MasterShip_OneMVB1_ChnannelExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="51"/>
    <label kind="guard" x="340" y="280">JVSE2M(31,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB1_ChnannelPathSelect[0]==4</label>
    <label kind="assignment" x="340" y="295">mChart_MasterShip_OneMVB1_ChnannelExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="99800"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_ChnannelPathSelect[0]==1&amp;&amp;JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_ChnannelPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99800"/>
    <target ref="51"/>
    <label kind="guard" x="10" y="260">JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(31,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==2))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_ChnannelChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99800"/>
    <target ref="51"/>
    <label kind="guard" x="-24" y="222">JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(31,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==2)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_ChnannelChildPath[0]=1,mChart_MasterShip_OneMVB1_ChnannelExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="99796"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_ChnannelPathSelect[0]==2&amp;&amp;JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_ChnannelPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99796"/>
    <target ref="51"/>
    <label kind="guard" x="10" y="260">JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(31,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==1))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_ChnannelChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99796"/>
    <target ref="51"/>
    <label kind="guard" x="-24" y="222">JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(31,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==1)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_ChnannelChildPath[0]=2,mChart_MasterShip_OneMVB1_ChnannelExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="51"/>
    <target ref="99792"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB1_ChnannelPathSelect[0]==3&amp;&amp;JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB1_ChnannelPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99792"/>
    <target ref="51"/>
    <label kind="guard" x="10" y="260">JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(31,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==0))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB1_ChnannelChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99792"/>
    <target ref="51"/>
    <label kind="guard" x="-24" y="222">JVSE2M(31,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(31,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==0)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB1_ChnannelChildPath[0]=3,mChart_MasterShip_OneMVB1_ChnannelExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2HistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2HistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2LoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">OneMVB2_ctrl_initial</name>
    <urgent/>
</location>
<location id="99790" x = "880" y = "210">
    <urgent/>
</location>
<location id="99789" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99790"/>
    <label kind="guard" x="528" y="276">JVSAO(30,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99790"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99790"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,28,30,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(30,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(true,21)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(30,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(28,JNCRA(),true,true,false,false,21),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(30,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,true,21)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(30,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99789"/>
    <label kind="guard" x="84" y="374">JVSDaO(30,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99789"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99789"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(52),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(30,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,29,28)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(30,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,true),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(30,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,29,28)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(30,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">FirstRoundEventDispatchHandle(false, 30,true,true,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(30,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 30,true,true,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(30,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(30)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(21,true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(30,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">OneMVB2_parallel_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">JVSE2M(30,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">PopOneEvent()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Chnannel_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2_ChnannelHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2_ChnannelHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2_ChnannelLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Chnannel_ctrl_initial</name>
    <urgent/>
</location>
<location id="99787" x = "880" y = "210">
    <urgent/>
</location>
<location id="99786" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99787"/>
    <label kind="guard" x="528" y="276">JVSAO(52,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99787"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99787"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,30,52,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(52,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(52,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(30,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(52,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(52,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99786"/>
    <label kind="guard" x="84" y="374">JVSDaO(52,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99786"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99786"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(52,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,53,30)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(52,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(52,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,53,30)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(52,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 52,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(52,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 52,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(52,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),52,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(52)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(52,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Chnannel</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">Chnannel_serial_initial</name>
    <urgent/>
</location>
<location id="54" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Chnannel_Master_Frame</name>
    <urgent/>
</location>
<location id="99781" x = "0" y = "0">
    <urgent/>
</location>
<location id="99780" x = "0" y = "0">
    <urgent/>
</location>
<location id="99779" x = "0" y = "0">
    <urgent/>
</location>
<location id="99777" x = "0" y = "0">
    <urgent/>
</location>
<location id="99776" x = "0" y = "0">
    <urgent/>
</location>
<location id="99775" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB2_ChnannelExistPath)&amp;&amp;JVSE2M(52,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(52,0),ClearChart_MasterShip_OneMVB2_ChnannelPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="54"/>
    <label kind="guard" x="100" y="300">JVI2T(52,54,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(52,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="54"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB2_ChnannelChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB2_ChnannelExistPath)&amp;&amp;JVSE2M(52,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB2_ChnannelExistPath = false,mChart_MasterShip_OneMVB2_ChnannelHistoryState=-1,mChart_MasterShip_OneMVB2_ChnannelLoseControl=false,mChart_MasterShip_OneMVB2_ChnannelHistoryState=54,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="54"/>
    <label kind="guard" x="225" y="560">(!mChart_MasterShip_OneMVB2_ChnannelExistPath)&amp;&amp;JVSE2M(52,aCommonAutomaton)</label>
    <label kind="assignment" x="225" y="575">CommonAutomatonCommunicateWithControllerAndConditional(52,54),ClearChart_MasterShip_OneMVB2_ChnannelPathSelect()</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="54"/>
    <label kind="guard" x="290" y="550">(mChart_MasterShip_OneMVB2_ChnannelChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB2_ChnannelExistPath)&amp;&amp;JVSE2M(52,aCommonAutomaton)</label>
    <label kind="assignment" x="290" y="565">DispatchEvent(eDeActivationOver,52,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_ChnannelExistPath = false</label>
    <nail x="-145" y="500"/>
    <nail x="305" y="500"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="54"/>
    <label kind="guard" x="345" y="470">(mChart_MasterShip_OneMVB2_ChnannelChildPath[0] == 1)&amp;&amp;JVSEF2M(52,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="345" y="485">PopOneEvent(),mChart_MasterShip_OneMVB2_ChnannelHistoryState=-1,mChart_MasterShip_OneMVB2_ChnannelLoseControl=false,mChart_MasterShip_OneMVB2_ChnannelHistoryState=54,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-170" y="520"/>
    <nail x="330" y="520"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="54"/>
    <label kind="guard" x="385" y="440">(mChart_MasterShip_OneMVB2_ChnannelChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB2_ChnannelExistPath)&amp;&amp;JVSE2M(52,aCommonAutomaton)</label>
    <label kind="assignment" x="385" y="455">DispatchEvent(eDeActivationOver,52,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_ChnannelExistPath = false</label>
    <nail x="-195" y="540"/>
    <nail x="355" y="540"/>
</transition>
<transition>
    <source ref="99781"/>
    <target ref="99780"/>
    <label kind="assignment" x="-30" y="115">Chart_valid_master_frame=0</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99780"/>
    <target ref="99779"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,52,-1,aCommonAutomaton),DispatchFuncEvent(59,30,21)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99779"/>
    <target ref="54"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(52,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_ChnannelHistoryState=54,PopOneEvent(),mChart_MasterShip_OneMVB2_ChnannelLoseControl=false,mChart_MasterShip_OneMVB2_ChnannelHistoryState=54,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="99781"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB2_ChnannelChildPath[0] == 2)&amp;&amp;JVSEF2M(52,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB2_ChnannelHistoryState=-1,mChart_MasterShip_OneMVB2_ChnannelLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="54"/>
    <label kind="guard" x="425" y="410">(mChart_MasterShip_OneMVB2_ChnannelChildPath[0] == 3)&amp;&amp;(mChart_MasterShip_OneMVB2_ChnannelExistPath)&amp;&amp;JVSE2M(52,aCommonAutomaton)</label>
    <label kind="assignment" x="425" y="425">DispatchEvent(eDeActivationOver,52,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_ChnannelExistPath = false</label>
    <nail x="-220" y="560"/>
    <nail x="380" y="560"/>
</transition>
<transition>
    <source ref="99777"/>
    <target ref="99776"/>
    <label kind="assignment" x="-30" y="115">Chart_valid_master_frame=Chart_valid_master_input</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99776"/>
    <target ref="99775"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,52,-1,aCommonAutomaton),DispatchFuncEvent(59,30,21)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99775"/>
    <target ref="54"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(52,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_ChnannelHistoryState=54,PopOneEvent(),mChart_MasterShip_OneMVB2_ChnannelLoseControl=false,mChart_MasterShip_OneMVB2_ChnannelHistoryState=54,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="99777"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB2_ChnannelChildPath[0] == 3)&amp;&amp;JVSEF2M(52,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB2_ChnannelHistoryState=-1,mChart_MasterShip_OneMVB2_ChnannelLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Chnannel_Master_Frame_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Master_Frame_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(54,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(52)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(54,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(52,54)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(54,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(52,54)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(54,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Chnannel_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">Chnannel_ser_cond_initial</name>
    <urgent/>
</location>
<location id="54" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Chnannel_Master_Frame</name>
    <urgent/>
</location>
<location id="99783" x = "80" y = "80">
    <urgent/>
</location>
<location id="99782" x = "0" y = "0">
    <urgent/>
</location>
<location id="99778" x = "0" y = "0">
    <urgent/>
</location>
<location id="99774" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(52,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_ChnannelPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB2_ChnannelExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(52,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="54"/>
    <label kind="guard" x="145" y="150">JVI2T(52,54,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(52,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99783"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB2_ChnannelPathSelect[0]==1&amp;&amp;JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_ChnannelPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99783"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_ChnannelChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99783"/>
    <target ref="54"/>
    <label kind="guard" x="100" y="300">JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB2_ChnannelChildPath[0]=0,mChart_MasterShip_OneMVB2_ChnannelExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="54"/>
    <label kind="guard" x="340" y="280">JVSE2M(52,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_ChnannelPathSelect[0]==4</label>
    <label kind="assignment" x="340" y="295">mChart_MasterShip_OneMVB2_ChnannelExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="99782"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_ChnannelPathSelect[0]==1&amp;&amp;JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_ChnannelPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99782"/>
    <target ref="54"/>
    <label kind="guard" x="10" y="260">JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(52,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==2))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_ChnannelChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99782"/>
    <target ref="54"/>
    <label kind="guard" x="-24" y="222">JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(52,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==2)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_ChnannelChildPath[0]=1,mChart_MasterShip_OneMVB2_ChnannelExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="99778"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_ChnannelPathSelect[0]==2&amp;&amp;JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_ChnannelPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99778"/>
    <target ref="54"/>
    <label kind="guard" x="10" y="260">JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(52,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==1))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_ChnannelChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99778"/>
    <target ref="54"/>
    <label kind="guard" x="-24" y="222">JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(52,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==1)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_ChnannelChildPath[0]=2,mChart_MasterShip_OneMVB2_ChnannelExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="54"/>
    <target ref="99774"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_ChnannelPathSelect[0]==3&amp;&amp;JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_ChnannelPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99774"/>
    <target ref="54"/>
    <label kind="guard" x="10" y="260">JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(52,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==0))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_ChnannelChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99774"/>
    <target ref="54"/>
    <label kind="guard" x="-24" y="222">JVSE2M(52,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(52,53,aConditionalAutomaton)&amp;&amp;(Chart_master_frame_error==0)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_ChnannelChildPath[0]=3,mChart_MasterShip_OneMVB2_ChnannelExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2_TimerHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2_TimerHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2_TimerLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Timer_ctrl_initial</name>
    <urgent/>
</location>
<location id="99772" x = "880" y = "210">
    <urgent/>
</location>
<location id="99771" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99772"/>
    <label kind="guard" x="528" y="276">JVSAO(53,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99772"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99772"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,30,53,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(53,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(true,55)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(53,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(30,JNCRA(),true,true,false,false,55),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(53,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,true,55)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(53,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(52)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99771"/>
    <label kind="guard" x="84" y="374">JVSDaO(53,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99771"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99771"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(56),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(53,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,21,30)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(53,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,true),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(53,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,21,30)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(53,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">FirstRoundEventDispatchHandle(false, 53,true,true,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(53,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 53,true,true,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(53,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(53)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(55,true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(53,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(52)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">Timer_parallel_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">JVSE2M(53,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">PopOneEvent()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2_Timer_BControllerHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2_Timer_BControllerHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2_Timer_BControllerLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">BController_ctrl_initial</name>
    <urgent/>
</location>
<location id="99769" x = "880" y = "210">
    <urgent/>
</location>
<location id="99768" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99769"/>
    <label kind="guard" x="528" y="276">JVSAO(55,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99769"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99769"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,53,55,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(55,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(true,57)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(55,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(53,JNCRA(),true,true,false,false,57),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(55,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,true,57)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(55,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(56)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99768"/>
    <label kind="guard" x="84" y="374">JVSDaO(55,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99768"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99768"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(58),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(55,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,false,-1,53)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(55,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,true),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(55,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,false,-1,53)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(55,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">FirstRoundEventDispatchHandle(false, 55,true,true,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(55,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 55,true,true,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(55,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(55)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(57,true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(55,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(56)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">BController_parallel_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">JVSE2M(55,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">PopOneEvent()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_AC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2_Timer_BController_ACLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">AC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99766" x = "880" y = "210">
    <urgent/>
</location>
<location id="99765" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99766"/>
    <label kind="guard" x="528" y="276">JVSAO(57,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99766"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99766"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,55,57,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(57,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(57,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(55,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(57,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(57,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(59)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99765"/>
    <label kind="guard" x="84" y="374">JVSDaO(57,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99765"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99765"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(57,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,false,-1,55)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(57,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(57,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,false,-1,55)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(57,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 57,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(57,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 57,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(57,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),57,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(57)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(57,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(59)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_AC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">AC_serial_initial</name>
    <urgent/>
</location>
<location id="10" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timer</name>
    <urgent/>
</location>
<location id="99761" x = "0" y = "0">
    <urgent/>
</location>
<location id="99759" x = "0" y = "0">
    <urgent/>
</location>
<location id="99757" x = "0" y = "0">
    <urgent/>
</location>
<location id="99756" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(57,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(57,0),ClearChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="10"/>
    <label kind="guard" x="100" y="300">JVI2T(57,10,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(57,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="10"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(57,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath = false,mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_BController_ACLoseControl=false,mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState=10,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounterCleaner(),SetOneIfIncToFalse(10)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="10"/>
    <label kind="guard" x="200" y="540">(!mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(57,aCommonAutomaton)</label>
    <label kind="assignment" x="200" y="555">CommonAutomatonCommunicateWithControllerAndConditional(57,10),ClearChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect()</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="10"/>
    <label kind="guard" x="265" y="530">(mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(57,aCommonAutomaton)</label>
    <label kind="assignment" x="265" y="545">DispatchEvent(eDeActivationOver,57,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath = false</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="99761"/>
    <target ref="10"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB2_Timer_BController_AC_run=1,mChart_MasterShip_OneMVB2_Timer_BController_ACLoseControl=false,mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState=10,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounterCleaner(),SetOneIfIncToFalse(10)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="99761"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0] == 1)&amp;&amp;JVSEF2M(57,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_BController_ACLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="10"/>
    <label kind="guard" x="320" y="450">(mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(57,aCommonAutomaton)</label>
    <label kind="assignment" x="320" y="465">DispatchEvent(eDeActivationOver,57,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath = false</label>
    <nail x="-145" y="500"/>
    <nail x="305" y="500"/>
</transition>
<transition>
    <source ref="99759"/>
    <target ref="10"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB2_Timer_BController_AC_run=0,mChart_MasterShip_OneMVB2_Timer_BController_ACLoseControl=false,mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState=10,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounterCleaner(),SetOneIfIncToFalse(10)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="99759"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0] == 2)&amp;&amp;JVSEF2M(57,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_BController_ACLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="10"/>
    <label kind="guard" x="360" y="420">(mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0] == 3)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath)&amp;&amp;JVSE2M(57,aCommonAutomaton)</label>
    <label kind="assignment" x="360" y="435">DispatchEvent(eDeActivationOver,57,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath = false</label>
    <nail x="-170" y="520"/>
    <nail x="330" y="520"/>
</transition>
<transition>
    <source ref="99757"/>
    <target ref="99756"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,57,-1,aCommonAutomaton),DispatchFuncEvent(62,28,30)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99756"/>
    <target ref="10"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(57,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState=10,PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_BController_ACLoseControl=false,mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState=10,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounterCleaner(),SetOneIfIncToFalse(10)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="99757"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0] == 3)&amp;&amp;JVSEF2M(57,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_BController_ACHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_BController_ACLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timer_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">T_standby_timer_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(10,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(57)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(10,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(57,10)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(10,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(57,10)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(10,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_AC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">AC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="10" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timer</name>
    <urgent/>
</location>
<location id="99762" x = "80" y = "80">
    <urgent/>
</location>
<location id="99760" x = "0" y = "0">
    <urgent/>
</location>
<location id="99758" x = "0" y = "0">
    <urgent/>
</location>
<location id="99755" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(57,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(57,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="10"/>
    <label kind="guard" x="145" y="150">JVI2T(57,10,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(57,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99762"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[0]==1&amp;&amp;JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99762"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99762"/>
    <target ref="10"/>
    <label kind="guard" x="100" y="300">JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0]=0,mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="10"/>
    <label kind="guard" x="300" y="310">JVSE2M(57,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[0]==4</label>
    <label kind="assignment" x="300" y="325">mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="99760"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[0]==1&amp;&amp;JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99760"/>
    <target ref="10"/>
    <label kind="guard" x="10" y="260">JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(57,60,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99760"/>
    <target ref="10"/>
    <label kind="guard" x="-24" y="222">JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(57,60,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0]=1,mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="99758"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[0]==2&amp;&amp;JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99758"/>
    <target ref="10"/>
    <label kind="guard" x="10" y="260">JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(57,61,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99758"/>
    <target ref="10"/>
    <label kind="guard" x="-24" y="222">JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(57,61,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0]=2,mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="10"/>
    <target ref="99755"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[0]==3&amp;&amp;JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_BController_ACPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99755"/>
    <target ref="10"/>
    <label kind="guard" x="10" y="260">JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB2_Timer_BController_AC_run==1&amp;&amp;Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounter[0]&gt;=(11/1)))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99755"/>
    <target ref="10"/>
    <label kind="guard" x="-24" y="222">JVSE2M(57,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB2_Timer_BController_AC_run==1&amp;&amp;Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timerEventCounter[0]&gt;=(11/1))</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_BController_ACChildPath[0]=3,mChart_MasterShip_OneMVB2_Timer_BController_ACExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_BC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2_Timer_BController_BCLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">BC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99753" x = "880" y = "210">
    <urgent/>
</location>
<location id="99752" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99753"/>
    <label kind="guard" x="528" y="276">JVSAO(59,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99753"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99753"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,55,59,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(59,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(59,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(55,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(59,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(59,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(58)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99752"/>
    <label kind="guard" x="84" y="374">JVSDaO(59,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99752"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99752"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(59,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,57,55)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(59,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(59,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,57,55)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(59,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 59,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(59,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 59,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(59,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),59,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(59)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(59,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(58)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_BC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">BC_serial_initial</name>
    <urgent/>
</location>
<location id="11" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timer</name>
    <urgent/>
</location>
<location id="99748" x = "0" y = "0">
    <urgent/>
</location>
<location id="99746" x = "0" y = "0">
    <urgent/>
</location>
<location id="99744" x = "0" y = "0">
    <urgent/>
</location>
<location id="99743" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(59,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(59,0),ClearChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="11"/>
    <label kind="guard" x="100" y="300">JVI2T(59,11,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(59,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="11"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(59,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath = false,mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_BController_BCLoseControl=false,mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState=11,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounterCleaner(),SetOneIfIncToFalse(11)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="11"/>
    <label kind="guard" x="200" y="540">(!mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(59,aCommonAutomaton)</label>
    <label kind="assignment" x="200" y="555">CommonAutomatonCommunicateWithControllerAndConditional(59,11),ClearChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect()</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="11"/>
    <label kind="guard" x="265" y="530">(mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(59,aCommonAutomaton)</label>
    <label kind="assignment" x="265" y="545">DispatchEvent(eDeActivationOver,59,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath = false</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="99748"/>
    <target ref="11"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB2_Timer_BController_BC_run=1,mChart_MasterShip_OneMVB2_Timer_BController_BCLoseControl=false,mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState=11,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounterCleaner(),SetOneIfIncToFalse(11)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="99748"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0] == 1)&amp;&amp;JVSEF2M(59,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_BController_BCLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="11"/>
    <label kind="guard" x="320" y="450">(mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(59,aCommonAutomaton)</label>
    <label kind="assignment" x="320" y="465">DispatchEvent(eDeActivationOver,59,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath = false</label>
    <nail x="-145" y="500"/>
    <nail x="305" y="500"/>
</transition>
<transition>
    <source ref="99746"/>
    <target ref="11"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB2_Timer_BController_BC_run=0,mChart_MasterShip_OneMVB2_Timer_BController_BCLoseControl=false,mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState=11,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounterCleaner(),SetOneIfIncToFalse(11)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="99746"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0] == 2)&amp;&amp;JVSEF2M(59,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_BController_BCLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="11"/>
    <label kind="guard" x="360" y="420">(mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0] == 3)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath)&amp;&amp;JVSE2M(59,aCommonAutomaton)</label>
    <label kind="assignment" x="360" y="435">DispatchEvent(eDeActivationOver,59,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath = false</label>
    <nail x="-170" y="520"/>
    <nail x="330" y="520"/>
</transition>
<transition>
    <source ref="99744"/>
    <target ref="99743"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,59,-1,aCommonAutomaton),DispatchFuncEvent(65,28,30)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99743"/>
    <target ref="11"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(59,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState=11,PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_BController_BCLoseControl=false,mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState=11,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounterCleaner(),SetOneIfIncToFalse(11)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="99744"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0] == 3)&amp;&amp;JVSEF2M(59,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_BController_BCHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_BController_BCLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timer_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">T_master_turn_timer_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(11,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(59)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(11,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(59,11)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(11,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(59,11)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(11,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_BC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">BC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="11" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timer</name>
    <urgent/>
</location>
<location id="99749" x = "80" y = "80">
    <urgent/>
</location>
<location id="99747" x = "0" y = "0">
    <urgent/>
</location>
<location id="99745" x = "0" y = "0">
    <urgent/>
</location>
<location id="99742" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(59,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(59,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="11"/>
    <label kind="guard" x="145" y="150">JVI2T(59,11,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(59,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99749"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[0]==1&amp;&amp;JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99749"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99749"/>
    <target ref="11"/>
    <label kind="guard" x="100" y="300">JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0]=0,mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="11"/>
    <label kind="guard" x="300" y="310">JVSE2M(59,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[0]==4</label>
    <label kind="assignment" x="300" y="325">mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="99747"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[0]==1&amp;&amp;JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99747"/>
    <target ref="11"/>
    <label kind="guard" x="10" y="260">JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(59,63,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99747"/>
    <target ref="11"/>
    <label kind="guard" x="-24" y="222">JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(59,63,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0]=1,mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="99745"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[0]==2&amp;&amp;JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99745"/>
    <target ref="11"/>
    <label kind="guard" x="10" y="260">JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(59,64,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99745"/>
    <target ref="11"/>
    <label kind="guard" x="-24" y="222">JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(59,64,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0]=2,mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="11"/>
    <target ref="99742"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[0]==3&amp;&amp;JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_BController_BCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99742"/>
    <target ref="11"/>
    <label kind="guard" x="10" y="260">JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB2_Timer_BController_BC_run==1&amp;&amp;Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounter[0]&gt;=(4/1)))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99742"/>
    <target ref="11"/>
    <label kind="guard" x="-24" y="222">JVSE2M(59,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB2_Timer_BController_BC_run==1&amp;&amp;Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timerEventCounter[0]&gt;=(4/1))</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_BController_BCChildPath[0]=3,mChart_MasterShip_OneMVB2_Timer_BController_BCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_CC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2_Timer_BController_CCHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2_Timer_BController_CCHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2_Timer_BController_CCLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">CC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99740" x = "880" y = "210">
    <urgent/>
</location>
<location id="99739" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99740"/>
    <label kind="guard" x="528" y="276">JVSAO(58,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99740"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99740"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,55,58,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(58,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(58,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(55,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(58,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(58,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99739"/>
    <label kind="guard" x="84" y="374">JVSDaO(58,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99739"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99739"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(58,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,59,55)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(58,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(58,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,59,55)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(58,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 58,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(58,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 58,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(58,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),58,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(58)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(58,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_CC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">CC_serial_initial</name>
    <urgent/>
</location>
<location id="60" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_BController_CC_resign_event_watcher</name>
    <urgent/>
</location>
<location id="99735" x = "0" y = "0">
    <urgent/>
</location>
<location id="99733" x = "0" y = "0">
    <urgent/>
</location>
<location id="99732" x = "0" y = "0">
    <urgent/>
</location>
<location id="99731" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath)&amp;&amp;JVSE2M(58,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(58,0),ClearChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="60"/>
    <label kind="guard" x="100" y="300">JVI2T(58,60,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="60"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(58,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="60"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath)&amp;&amp;JVSE2M(58,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath = false,mChart_MasterShip_OneMVB2_Timer_BController_CCHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_BController_CCLoseControl=false,mChart_MasterShip_OneMVB2_Timer_BController_CCHistoryState=60,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="60"/>
    <target ref="60"/>
    <label kind="guard" x="175" y="520">(!mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath)&amp;&amp;JVSE2M(58,aCommonAutomaton)</label>
    <label kind="assignment" x="175" y="535">CommonAutomatonCommunicateWithControllerAndConditional(58,60),ClearChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect()</label>
    <nail x="-45" y="420"/>
    <nail x="205" y="420"/>
</transition>
<transition>
    <source ref="60"/>
    <target ref="60"/>
    <label kind="guard" x="240" y="510">(mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath)&amp;&amp;JVSE2M(58,aCommonAutomaton)</label>
    <label kind="assignment" x="240" y="525">DispatchEvent(eDeActivationOver,58,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath = false</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="99735"/>
    <target ref="60"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB2_Timer_BController_CC_canpatch=1,mChart_MasterShip_OneMVB2_Timer_BController_CCLoseControl=false,mChart_MasterShip_OneMVB2_Timer_BController_CCHistoryState=60,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="60"/>
    <target ref="99735"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[0] == 1)&amp;&amp;JVSEF2M(58,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_BController_CCHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_BController_CCLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="60"/>
    <target ref="60"/>
    <label kind="guard" x="295" y="430">(mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath)&amp;&amp;JVSE2M(58,aCommonAutomaton)</label>
    <label kind="assignment" x="295" y="445">DispatchEvent(eDeActivationOver,58,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath = false</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="99733"/>
    <target ref="99732"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,58,-1,aCommonAutomaton),DispatchFuncEvent(67,28,30)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99732"/>
    <target ref="99731"/>
    <label kind="guard" x="-30" y="100">JVSEF2M(58,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-30" y="115">PopOneEvent(),Chart_MasterShip_OneMVB2_Timer_BController_CC_canpatch=0</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99731"/>
    <target ref="60"/>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_BController_CCLoseControl=false,mChart_MasterShip_OneMVB2_Timer_BController_CCHistoryState=60,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="60"/>
    <target ref="99733"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[0] == 2)&amp;&amp;JVSEF2M(58,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_BController_CCHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_BController_CCLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_CC_resign_event_watcher_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">resign_event_watcher_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(60,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(58)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(60,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(58,60)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(60,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(58,60)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(60,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_BController_CC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">CC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="60" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_BController_CC_resign_event_watcher</name>
    <urgent/>
</location>
<location id="99736" x = "80" y = "80">
    <urgent/>
</location>
<location id="99734" x = "0" y = "0">
    <urgent/>
</location>
<location id="99730" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(58,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(58,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="60"/>
    <label kind="guard" x="145" y="150">JVI2T(58,60,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="60"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(58,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99736"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect[0]==1&amp;&amp;JVSE2M(58,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99736"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(58,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99736"/>
    <target ref="60"/>
    <label kind="guard" x="100" y="300">JVSE2M(58,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[0]=0,mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="60"/>
    <target ref="60"/>
    <label kind="guard" x="260" y="340">JVSE2M(58,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect[0]==3</label>
    <label kind="assignment" x="260" y="355">mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="60"/>
    <target ref="99734"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect[0]==1&amp;&amp;JVSE2M(58,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99734"/>
    <target ref="60"/>
    <label kind="guard" x="10" y="260">JVSE2M(58,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(58,66,aConditionalAutomaton)&amp;&amp;(Chart_resign==0))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99734"/>
    <target ref="60"/>
    <label kind="guard" x="-24" y="222">JVSE2M(58,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(58,66,aConditionalAutomaton)&amp;&amp;(Chart_resign==0)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[0]=1,mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="60"/>
    <target ref="99730"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect[0]==2&amp;&amp;JVSE2M(58,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_BController_CCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99730"/>
    <target ref="60"/>
    <label kind="guard" x="10" y="260">JVSE2M(58,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_resign==1&amp;&amp;Chart_MasterShip_OneMVB2_Timer_BController_CC_canpatch==1))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99730"/>
    <target ref="60"/>
    <label kind="guard" x="-24" y="222">JVSE2M(58,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_resign==1&amp;&amp;Chart_MasterShip_OneMVB2_Timer_BController_CC_canpatch==1)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_BController_CCChildPath[0]=2,mChart_MasterShip_OneMVB2_Timer_BController_CCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2_Timer_AControllerHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2_Timer_AControllerHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2_Timer_AControllerLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">AController_ctrl_initial</name>
    <urgent/>
</location>
<location id="99728" x = "880" y = "210">
    <urgent/>
</location>
<location id="99727" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99728"/>
    <label kind="guard" x="528" y="276">JVSAO(56,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99728"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99728"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,53,56,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(56,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(true,61)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(56,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(53,JNCRA(),true,true,false,false,61),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(56,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,true,61)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(56,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99727"/>
    <label kind="guard" x="84" y="374">JVSDaO(56,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99727"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99727"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(62),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(56,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,55,53)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(56,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,true),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(56,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,55,53)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(56,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">FirstRoundEventDispatchHandle(false, 56,true,true,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(56,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 56,true,true,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(56,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(56)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(61,true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(56,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">AController_parallel_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">JVSE2M(56,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">PopOneEvent()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_DC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2_Timer_AController_DCLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">DC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99725" x = "880" y = "210">
    <urgent/>
</location>
<location id="99724" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99725"/>
    <label kind="guard" x="528" y="276">JVSAO(61,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99725"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99725"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,56,61,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(61,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(61,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(56,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(61,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(61,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(63)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99724"/>
    <label kind="guard" x="84" y="374">JVSDaO(61,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99724"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99724"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(61,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,false,-1,56)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(61,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(61,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,false,-1,56)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(61,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 61,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(61,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 61,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(61,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),61,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(61)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(61,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(63)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_DC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">DC_serial_initial</name>
    <urgent/>
</location>
<location id="7" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timer</name>
    <urgent/>
</location>
<location id="99720" x = "0" y = "0">
    <urgent/>
</location>
<location id="99718" x = "0" y = "0">
    <urgent/>
</location>
<location id="99716" x = "0" y = "0">
    <urgent/>
</location>
<location id="99715" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(61,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(61,0),ClearChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="7"/>
    <label kind="guard" x="100" y="300">JVI2T(61,7,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(61,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="7"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(61,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath = false,mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_AController_DCLoseControl=false,mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState=7,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounterCleaner(),SetOneIfIncToFalse(7)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="7"/>
    <label kind="guard" x="200" y="540">(!mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(61,aCommonAutomaton)</label>
    <label kind="assignment" x="200" y="555">CommonAutomatonCommunicateWithControllerAndConditional(61,7),ClearChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect()</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="7"/>
    <label kind="guard" x="265" y="530">(mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(61,aCommonAutomaton)</label>
    <label kind="assignment" x="265" y="545">DispatchEvent(eDeActivationOver,61,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath = false</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="99720"/>
    <target ref="7"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB2_Timer_AController_DC_run=1,mChart_MasterShip_OneMVB2_Timer_AController_DCLoseControl=false,mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState=7,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounterCleaner(),SetOneIfIncToFalse(7)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="99720"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0] == 1)&amp;&amp;JVSEF2M(61,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_AController_DCLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="7"/>
    <label kind="guard" x="320" y="450">(mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(61,aCommonAutomaton)</label>
    <label kind="assignment" x="320" y="465">DispatchEvent(eDeActivationOver,61,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath = false</label>
    <nail x="-145" y="500"/>
    <nail x="305" y="500"/>
</transition>
<transition>
    <source ref="99718"/>
    <target ref="7"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB2_Timer_AController_DC_run=0,mChart_MasterShip_OneMVB2_Timer_AController_DCLoseControl=false,mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState=7,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounterCleaner(),SetOneIfIncToFalse(7)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="99718"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0] == 2)&amp;&amp;JVSEF2M(61,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_AController_DCLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="7"/>
    <label kind="guard" x="360" y="420">(mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0] == 3)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath)&amp;&amp;JVSE2M(61,aCommonAutomaton)</label>
    <label kind="assignment" x="360" y="435">DispatchEvent(eDeActivationOver,61,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath = false</label>
    <nail x="-170" y="520"/>
    <nail x="330" y="520"/>
</transition>
<transition>
    <source ref="99716"/>
    <target ref="99715"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,61,-1,aCommonAutomaton),DispatchFuncEvent(70,28,30)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99715"/>
    <target ref="7"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(61,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState=7,PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_AController_DCLoseControl=false,mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState=7,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounterCleaner(),SetOneIfIncToFalse(7)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="99716"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0] == 3)&amp;&amp;JVSEF2M(61,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_AController_DCHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_AController_DCLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timer_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">T_interim_timer_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(7,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(61)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(7,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(61,7)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(7,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(61,7)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(7,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_DC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">DC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="7" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timer</name>
    <urgent/>
</location>
<location id="99721" x = "80" y = "80">
    <urgent/>
</location>
<location id="99719" x = "0" y = "0">
    <urgent/>
</location>
<location id="99717" x = "0" y = "0">
    <urgent/>
</location>
<location id="99714" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(61,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(61,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="7"/>
    <label kind="guard" x="145" y="150">JVI2T(61,7,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(61,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99721"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[0]==1&amp;&amp;JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99721"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99721"/>
    <target ref="7"/>
    <label kind="guard" x="100" y="300">JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0]=0,mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="7"/>
    <label kind="guard" x="300" y="310">JVSE2M(61,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[0]==4</label>
    <label kind="assignment" x="300" y="325">mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="99719"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[0]==1&amp;&amp;JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99719"/>
    <target ref="7"/>
    <label kind="guard" x="10" y="260">JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(61,68,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99719"/>
    <target ref="7"/>
    <label kind="guard" x="-24" y="222">JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(61,68,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0]=1,mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="99717"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[0]==2&amp;&amp;JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99717"/>
    <target ref="7"/>
    <label kind="guard" x="10" y="260">JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(61,69,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99717"/>
    <target ref="7"/>
    <label kind="guard" x="-24" y="222">JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(61,69,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0]=2,mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="7"/>
    <target ref="99714"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[0]==3&amp;&amp;JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_AController_DCPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99714"/>
    <target ref="7"/>
    <label kind="guard" x="10" y="260">JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB2_Timer_AController_DC_run==1&amp;&amp;Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounter[0]&gt;=(5/1)))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99714"/>
    <target ref="7"/>
    <label kind="guard" x="-24" y="222">JVSE2M(61,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB2_Timer_AController_DC_run==1&amp;&amp;Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timerEventCounter[0]&gt;=(5/1))</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_AController_DCChildPath[0]=3,mChart_MasterShip_OneMVB2_Timer_AController_DCExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_EC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2_Timer_AController_ECLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">EC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99712" x = "880" y = "210">
    <urgent/>
</location>
<location id="99711" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99712"/>
    <label kind="guard" x="528" y="276">JVSAO(63,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99712"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99712"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,56,63,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(63,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(63,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(56,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(63,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(63,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(62)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99711"/>
    <label kind="guard" x="84" y="374">JVSDaO(63,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99711"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99711"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(63,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,61,56)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(63,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(63,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,61,56)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(63,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 63,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(63,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 63,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(63,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),63,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(63)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(63,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(62)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_EC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">EC_serial_initial</name>
    <urgent/>
</location>
<location id="8" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timer</name>
    <urgent/>
</location>
<location id="99707" x = "0" y = "0">
    <urgent/>
</location>
<location id="99705" x = "0" y = "0">
    <urgent/>
</location>
<location id="99703" x = "0" y = "0">
    <urgent/>
</location>
<location id="99702" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(63,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(63,0),ClearChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="8"/>
    <label kind="guard" x="100" y="300">JVI2T(63,8,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(63,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="8"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(63,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath = false,mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_AController_ECLoseControl=false,mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState=8,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounterCleaner(),SetOneIfIncToFalse(8)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="8"/>
    <label kind="guard" x="200" y="540">(!mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(63,aCommonAutomaton)</label>
    <label kind="assignment" x="200" y="555">CommonAutomatonCommunicateWithControllerAndConditional(63,8),ClearChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect()</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="8"/>
    <label kind="guard" x="265" y="530">(mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(63,aCommonAutomaton)</label>
    <label kind="assignment" x="265" y="545">DispatchEvent(eDeActivationOver,63,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath = false</label>
    <nail x="-120" y="480"/>
    <nail x="280" y="480"/>
</transition>
<transition>
    <source ref="99707"/>
    <target ref="8"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB2_Timer_AController_EC_run=1,mChart_MasterShip_OneMVB2_Timer_AController_ECLoseControl=false,mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState=8,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounterCleaner(),SetOneIfIncToFalse(8)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="99707"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0] == 1)&amp;&amp;JVSEF2M(63,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_AController_ECLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="8"/>
    <label kind="guard" x="320" y="450">(mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(63,aCommonAutomaton)</label>
    <label kind="assignment" x="320" y="465">DispatchEvent(eDeActivationOver,63,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath = false</label>
    <nail x="-145" y="500"/>
    <nail x="305" y="500"/>
</transition>
<transition>
    <source ref="99705"/>
    <target ref="8"/>
    <label kind="assignment" x="58" y="263">Chart_MasterShip_OneMVB2_Timer_AController_EC_run=0,mChart_MasterShip_OneMVB2_Timer_AController_ECLoseControl=false,mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState=8,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounterCleaner(),SetOneIfIncToFalse(8)</label>
    <nail x="88" y="148"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="99705"/>
    <label kind="guard" x="10" y="260">(mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0] == 2)&amp;&amp;JVSEF2M(63,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="10" y="275">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_AController_ECLoseControl=true</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="8"/>
    <label kind="guard" x="360" y="420">(mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0] == 3)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath)&amp;&amp;JVSE2M(63,aCommonAutomaton)</label>
    <label kind="assignment" x="360" y="435">DispatchEvent(eDeActivationOver,63,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath = false</label>
    <nail x="-170" y="520"/>
    <nail x="330" y="520"/>
</transition>
<transition>
    <source ref="99703"/>
    <target ref="99702"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,63,-1,aCommonAutomaton),DispatchFuncEvent(73,28,30)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99702"/>
    <target ref="8"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(63,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState=8,PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_AController_ECLoseControl=false,mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState=8,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounterCleaner(),SetOneIfIncToFalse(8)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="99703"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0] == 3)&amp;&amp;JVSEF2M(63,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_AController_ECHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_AController_ECLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timer_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">T_find_timer_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(8,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(63)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(8,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(63,8)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(8,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(63,8)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(8,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_EC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">EC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="8" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timer</name>
    <urgent/>
</location>
<location id="99708" x = "80" y = "80">
    <urgent/>
</location>
<location id="99706" x = "0" y = "0">
    <urgent/>
</location>
<location id="99704" x = "0" y = "0">
    <urgent/>
</location>
<location id="99701" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(63,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(63,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="8"/>
    <label kind="guard" x="145" y="150">JVI2T(63,8,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(63,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99708"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[0]==1&amp;&amp;JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99708"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99708"/>
    <target ref="8"/>
    <label kind="guard" x="100" y="300">JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0]=0,mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="8"/>
    <label kind="guard" x="300" y="310">JVSE2M(63,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[0]==4</label>
    <label kind="assignment" x="300" y="325">mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-95" y="460"/>
    <nail x="255" y="460"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="99706"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[0]==1&amp;&amp;JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99706"/>
    <target ref="8"/>
    <label kind="guard" x="10" y="260">JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(63,71,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99706"/>
    <target ref="8"/>
    <label kind="guard" x="-24" y="222">JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(63,71,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0]=1,mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="99704"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[0]==2&amp;&amp;JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99704"/>
    <target ref="8"/>
    <label kind="guard" x="10" y="260">JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(63,72,aConditionalAutomaton))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99704"/>
    <target ref="8"/>
    <label kind="guard" x="-24" y="222">JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(63,72,aConditionalAutomaton)</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0]=2,mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
<transition>
    <source ref="8"/>
    <target ref="99701"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[0]==3&amp;&amp;JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_AController_ECPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99701"/>
    <target ref="8"/>
    <label kind="guard" x="10" y="260">JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB2_Timer_AController_EC_run==1&amp;&amp;Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounter[0]&gt;=(5/1)))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99701"/>
    <target ref="8"/>
    <label kind="guard" x="-24" y="222">JVSE2M(63,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB2_Timer_AController_EC_run==1&amp;&amp;Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timerEventCounter[0]&gt;=(5/1))</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_AController_ECChildPath[0]=3,mChart_MasterShip_OneMVB2_Timer_AController_ECExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">UltimateController_ctrl_initial</name>
    <urgent/>
</location>
<location id="99699" x = "880" y = "210">
    <urgent/>
</location>
<location id="99698" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99699"/>
    <label kind="guard" x="528" y="276">JVSAO(62,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99699"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99699"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,56,62,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(62,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(62,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(56,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(62,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(62,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99698"/>
    <label kind="guard" x="84" y="374">JVSDaO(62,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99698"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99698"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(62,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,true,63,56)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(62,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(62,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,true,63,56)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(62,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 62,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(62,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 62,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(62,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),62,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(62)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(62,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_UltimateController</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">UltimateController_serial_initial</name>
    <urgent/>
</location>
<location id="9" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_Time</name>
    <urgent/>
</location>
<location id="99694" x = "0" y = "0">
    <urgent/>
</location>
<location id="99693" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerExistPath)&amp;&amp;JVSE2M(62,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(62,0),ClearChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="9"/>
    <label kind="guard" x="100" y="300">JVI2T(62,9,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="9"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(62,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="9"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerExistPath)&amp;&amp;JVSE2M(62,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerExistPath = false,mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerLoseControl=false,mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerHistoryState=9,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounterCleaner(),SetOneIfIncToFalse(9)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="9"/>
    <target ref="9"/>
    <label kind="guard" x="150" y="500">(!mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerExistPath)&amp;&amp;JVSE2M(62,aCommonAutomaton)</label>
    <label kind="assignment" x="150" y="515">CommonAutomatonCommunicateWithControllerAndConditional(62,9),ClearChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect()</label>
    <nail x="-20" y="400"/>
    <nail x="180" y="400"/>
</transition>
<transition>
    <source ref="9"/>
    <target ref="9"/>
    <label kind="guard" x="215" y="490">(mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerExistPath)&amp;&amp;JVSE2M(62,aCommonAutomaton)</label>
    <label kind="assignment" x="215" y="505">DispatchEvent(eDeActivationOver,62,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerExistPath = false</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="99694"/>
    <target ref="99693"/>
    <label kind="assignment" x="-30" y="115">DispatchEvent(eJudgeActionOver,62,-1,aCommonAutomaton),DispatchFuncEvent(66,55,58)</label>
    <nail x="0" y="0"/>
</transition>
<transition>
    <source ref="99693"/>
    <target ref="9"/>
    <label kind="guard" x="-38" y="272">JVSEF2M(62,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerHistoryState=9,PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerLoseControl=false,mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerHistoryState=9,mTryFindPath = false,CommonActionEventConsumed(true,true),Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounterCleaner(),SetOneIfIncToFalse(9)</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="9"/>
    <target ref="99694"/>
    <label kind="guard" x="-38" y="272">(mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerChildPath[0] == 1)&amp;&amp;JVSEF2M(62,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-38" y="287">PopOneEvent(),mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerHistoryState=-1,mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerLoseControl=true</label>
    <nail x="-8" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_Time_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">The_Time_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(9,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(62)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(9,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(62,9)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(9,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(62,9)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(9,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">UltimateController_ser_cond_initial</name>
    <urgent/>
</location>
<location id="9" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_Time</name>
    <urgent/>
</location>
<location id="99695" x = "80" y = "80">
    <urgent/>
</location>
<location id="99692" x = "0" y = "0">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(62,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(62,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="9"/>
    <label kind="guard" x="145" y="150">JVI2T(62,9,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="9"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(62,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99695"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect[0]==1&amp;&amp;JVSE2M(62,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99695"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(62,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99695"/>
    <target ref="9"/>
    <label kind="guard" x="100" y="300">JVSE2M(62,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerChildPath[0]=0,mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="9"/>
    <target ref="9"/>
    <label kind="guard" x="220" y="370">JVSE2M(62,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect[0]==2</label>
    <label kind="assignment" x="220" y="385">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-45" y="420"/>
    <nail x="205" y="420"/>
</transition>
<transition>
    <source ref="9"/>
    <target ref="99692"/>
    <label kind="guard" x="-38" y="272">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect[0]==1&amp;&amp;JVSE2M(62,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-38" y="287">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerPathSelect[0]++</label>
    <nail x="-8" y="172"/>
</transition>
<transition>
    <source ref="99692"/>
    <target ref="9"/>
    <label kind="guard" x="10" y="260">JVSE2M(62,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounter[0]&gt;=(1/1)))</label>
    <label kind="assignment" x="10" y="275">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerChildPath[0]=-1</label>
    <nail x="40" y="160"/>
</transition>
<transition>
    <source ref="99692"/>
    <target ref="9"/>
    <label kind="guard" x="-24" y="222">JVSE2M(62,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_TimeEventCounter[0]&gt;=(1/1))</label>
    <label kind="assignment" x="-24" y="237">mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerChildPath[0]=1,mChart_MasterShip_OneMVB2_Timer_AController_UltimateControllerExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-9" y="172"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return mChart_MasterShip_OneMVB2_LOGICHistoryState != -1;
}

int GHS()
{
    return mChart_MasterShip_OneMVB2_LOGICHistoryState;
}

bool IsLoseControl()
{
    return mChart_MasterShip_OneMVB2_LOGICLoseControl;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">LOGIC_ctrl_initial</name>
    <urgent/>
</location>
<location id="99690" x = "880" y = "210">
    <urgent/>
</location>
<location id="99689" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99690"/>
    <label kind="guard" x="528" y="276">JVSAO(21,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99690"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99690"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,30,21,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(21,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(21,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(30,JNCRA(),false,true,false,false,-1),MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(21,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(true,true,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(21,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(53)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99689"/>
    <label kind="guard" x="84" y="374">JVSDaO(21,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99689"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="325">!(JNCRA())</label>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="99689"/>
    <target ref="0"/>
    <label kind="guard" x="111" y="225">JNCRA()</label>
    <label kind="assignment" x="111" y="240">MSEAutoDest(GHS()),MSEAutoInfo(-GetStackTopInfo())</label>
    <nail x="126" y="175"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(21,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(true,false,-1,30)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(21,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(false,true,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(21,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(true,false,-1,30)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(21,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 21,true,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(21,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 21,true,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(21,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSEDispatchToSelfLogic(JNCRA(),21,true,false,IsLoseControl())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(21)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),true)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(21,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(53)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC</name>
<declaration>// Place local declarations here.
bool mTryFindPath = false;
void ReturnToController()
{
	MSEAutoType(aControllerAutomaton);
    //MSEAutoInfo(iSelfLogicOver);
    DispatchEvent(eSelfLogicOver,GetStackTopDest(),GetStackTopInfo(),aControllerAutomaton);
}

void CommonAutomatonCommunicateWithControllerAndConditional(int parentid,int childid)
{
    if (mTryFindPath)
    {
        mTryFindPath = false;
        ReturnToController();
    }
    else
    {
    	mTryFindPath = true;
        MSEAutoType(aConditionalAutomaton);
        ResetConditionAutomaton(parentid,childid);
    }
}
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">LOGIC_serial_initial</name>
    <urgent/>
</location>
<location id="64" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_LOGIC_ps</name>
    <urgent/>
</location>
<location id="65" x = "-127" y = "494">
    <name x="-137" y="479">Chart_MasterShip_OneMVB2_LOGIC_Standby_Master</name>
    <urgent/>
</location>
<location id="20" x = "54" y = "650">
    <name x="44" y="635">SSID939</name>
    <urgent/>
</location>
<location id="25" x = "266" y = "810">
    <name x="256" y="795">SSID943</name>
    <urgent/>
</location>
<location id="22" x = "266" y = "810">
    <name x="256" y="795">SSID940</name>
    <urgent/>
</location>
<location id="68" x = "440" y = "720">
    <name x="430" y="705">Chart_MasterShip_OneMVB2_LOGIC_bt</name>
    <urgent/>
</location>
<location id="66" x = "892" y = "-280">
    <name x="882" y="-295">Chart_MasterShip_OneMVB2_LOGIC_Rrgular_Master</name>
    <urgent/>
</location>
<location id="99652" x = "553" y = "470">
    <urgent/>
</location>
<location id="99651" x = "666" y = "220">
    <urgent/>
</location>
<location id="99650" x = "779" y = "-30">
    <urgent/>
</location>
<location id="99648" x = "637" y = "-86">
    <urgent/>
</location>
<location id="24" x = "892" y = "-280">
    <name x="882" y="-295">SSID942</name>
    <urgent/>
</location>
<location id="23" x = "665" y = "-280">
    <name x="655" y="-295">SSID941</name>
    <urgent/>
</location>
<location id="99644" x = "642" y = "-280">
    <urgent/>
</location>
<location id="99642" x = "915" y = "-280">
    <urgent/>
</location>
<location id="71" x = "-586" y = "446">
    <name x="-596" y="431">Chart_MasterShip_OneMVB2_LOGIC_Find_Next</name>
    <urgent/>
</location>
<location id="99640" x = "415" y = "-134">
    <urgent/>
</location>
<location id="99639" x = "164" y = "11">
    <urgent/>
</location>
<location id="99638" x = "-86" y = "156">
    <urgent/>
</location>
<location id="99637" x = "-336" y = "301">
    <urgent/>
</location>
<location id="69" x = "-817" y = "215">
    <name x="-827" y="200">Chart_MasterShip_OneMVB2_LOGIC_sr</name>
    <urgent/>
</location>
<location id="70" x = "-2067" y = "560">
    <name x="-2077" y="545">Chart_MasterShip_OneMVB2_LOGIC_Interim_Master</name>
    <urgent/>
</location>
<location id="99634" x = "-1067" y = "284">
    <urgent/>
</location>
<location id="99633" x = "-1317" y = "353">
    <urgent/>
</location>
<location id="99632" x = "-1567" y = "422">
    <urgent/>
</location>
<location id="99631" x = "-1817" y = "491">
    <urgent/>
</location>
<location id="27" x = "-2315" y = "603">
    <name x="-2325" y="588">SSID945</name>
    <urgent/>
</location>
<location id="99629" x = "-2317" y = "603">
    <urgent/>
</location>
<location id="26" x = "-2288" y = "569">
    <name x="-2298" y="554">SSID944</name>
    <urgent/>
</location>
<location id="99626" x = "-2317" y = "570">
    <urgent/>
</location>
<location id="99623" x = "-2317" y = "603">
    <urgent/>
</location>
<location id="72" x = "-586" y = "446">
    <name x="-596" y="431">Chart_MasterShip_OneMVB2_LOGIC_T_F</name>
    <urgent/>
</location>
<location id="99618" x = "642" y = "-280">
    <urgent/>
</location>
<location id="67" x = "240" y = "564">
    <name x="230" y="549">Chart_MasterShip_OneMVB2_LOGIC_st</name>
    <urgent/>
</location>
<location id="99614" x = "-10" y = "516">
    <urgent/>
</location>
<location id="99613" x = "-260" y = "468">
    <urgent/>
</location>
<location id="99612" x = "-510" y = "420">
    <urgent/>
</location>
<location id="99610" x = "16" y = "608">
    <urgent/>
</location>
<location id="99607" x = "123" y = "709">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="220">(!mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="100" y="235">CommonAutomatonCommunicateWithControllerAndConditional(21,0),ClearChart_MasterShip_OneMVB2_LOGICPathSelect()</label>
    <nail x="30" y="120"/>
    <nail x="130" y="120"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="64"/>
    <label kind="guard" x="100" y="300">JVI2T(21,64,1)</label>
    <label kind="assignment" x="100" y="315">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="64"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="300">JVT2I(21,1)</label>
    <label kind="assignment" x="50" y="315">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="64"/>
    <label kind="guard" x="15" y="250">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 0)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="15" y="265">mChart_MasterShip_OneMVB2_LOGICExistPath = false,mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=64,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="30" y="200"/>
</transition>
<transition>
    <source ref="64"/>
    <target ref="64"/>
    <label kind="guard" x="150" y="500">(!mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="150" y="515">CommonAutomatonCommunicateWithControllerAndConditional(21,64),ClearChart_MasterShip_OneMVB2_LOGICPathSelect()</label>
    <nail x="-20" y="400"/>
    <nail x="180" y="400"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="65"/>
    <label kind="guard" x="-9" y="409">JVI2T(21,65,1)</label>
    <label kind="assignment" x="-9" y="424">PopOneEvent()</label>
    <nail x="21" y="309"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="0"/>
    <label kind="guard" x="-53" y="387">JVT2I(21,1)</label>
    <label kind="assignment" x="-53" y="402">DelEvtIfOnlyBack()</label>
    <nail x="-23" y="287"/>
</transition>
<transition>
    <source ref="64"/>
    <target ref="64"/>
    <label kind="guard" x="215" y="490">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 1)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="215" y="505">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-70" y="440"/>
    <nail x="230" y="440"/>
</transition>
<transition>
    <source ref="64"/>
    <target ref="65"/>
    <label kind="guard" x="-21" y="545">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 1)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-21" y="560">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=65,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(65,65)</label>
    <nail x="9" y="445"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="65"/>
    <label kind="guard" x="-7" y="714">(!mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-7" y="729">CommonAutomatonCommunicateWithControllerAndConditional(21,65),ClearChart_MasterShip_OneMVB2_LOGICPathSelect()</label>
    <nail x="-277" y="614"/>
    <nail x="23" y="614"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="20"/>
    <label kind="guard" x="86" y="467">JVI2T(21,20,1)</label>
    <label kind="assignment" x="86" y="482">PopOneEvent()</label>
    <nail x="116" y="367"/>
</transition>
<transition>
    <source ref="20"/>
    <target ref="0"/>
    <label kind="guard" x="37" y="465">JVT2I(21,1)</label>
    <label kind="assignment" x="37" y="480">DelEvtIfOnlyBack()</label>
    <nail x="67" y="365"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="65"/>
    <label kind="guard" x="58" y="704">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 2)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="58" y="719">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(65,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-327" y="654"/>
    <nail x="73" y="654"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="20"/>
    <label kind="guard" x="-34" y="635">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 2)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-34" y="650">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=20,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="-4" y="535"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="25"/>
    <label kind="guard" x="191" y="533">JVI2T(21,25,1)</label>
    <label kind="assignment" x="191" y="548">PopOneEvent()</label>
    <nail x="221" y="433"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="0"/>
    <label kind="guard" x="143" y="545">JVT2I(21,1)</label>
    <label kind="assignment" x="143" y="560">DelEvtIfOnlyBack()</label>
    <nail x="173" y="445"/>
</transition>
<transition>
    <source ref="20"/>
    <target ref="20"/>
    <label kind="guard" x="99" y="810">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 3)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="99" y="825">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-21" y="710"/>
    <nail x="129" y="710"/>
</transition>
<transition>
    <source ref="20"/>
    <target ref="25"/>
    <label kind="guard" x="160" y="791">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 3)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="160" y="806">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=25,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="190" y="691"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="22"/>
    <label kind="guard" x="191" y="533">JVI2T(21,22,1)</label>
    <label kind="assignment" x="191" y="548">PopOneEvent()</label>
    <nail x="221" y="433"/>
</transition>
<transition>
    <source ref="22"/>
    <target ref="0"/>
    <label kind="guard" x="143" y="545">JVT2I(21,1)</label>
    <label kind="assignment" x="143" y="560">DelEvtIfOnlyBack()</label>
    <nail x="173" y="445"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="25"/>
    <label kind="guard" x="336" y="990">(mChart_MasterShip_OneMVB2_LOGICChildPath[2] == 4)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="336" y="1005">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="166" y="890"/>
    <nail x="366" y="890"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="22"/>
    <label kind="guard" x="236" y="910">(mChart_MasterShip_OneMVB2_LOGICChildPath[2] == 4)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="236" y="925">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=22,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="266" y="810"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="68"/>
    <label kind="guard" x="273" y="476">JVI2T(21,68,1)</label>
    <label kind="assignment" x="273" y="491">PopOneEvent()</label>
    <nail x="303" y="376"/>
</transition>
<transition>
    <source ref="68"/>
    <target ref="0"/>
    <label kind="guard" x="230" y="500">JVT2I(21,1)</label>
    <label kind="assignment" x="230" y="515">DelEvtIfOnlyBack()</label>
    <nail x="260" y="400"/>
</transition>
<transition>
    <source ref="22"/>
    <target ref="22"/>
    <label kind="guard" x="311" y="970">(mChart_MasterShip_OneMVB2_LOGICChildPath[3] == 5)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="311" y="985">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="191" y="870"/>
    <nail x="341" y="870"/>
</transition>
<transition>
    <source ref="22"/>
    <target ref="68"/>
    <label kind="guard" x="301" y="821">(mChart_MasterShip_OneMVB2_LOGICChildPath[3] == 5)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="301" y="836">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=68,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="331" y="721"/>
</transition>
<transition>
    <source ref="68"/>
    <target ref="68"/>
    <label kind="guard" x="510" y="900">(!mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="510" y="915">CommonAutomatonCommunicateWithControllerAndConditional(21,68),ClearChart_MasterShip_OneMVB2_LOGICPathSelect()</label>
    <nail x="340" y="800"/>
    <nail x="540" y="800"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="66"/>
    <label kind="guard" x="314" y="351">JVI2T(21,66,1)</label>
    <label kind="assignment" x="314" y="366">PopOneEvent()</label>
    <nail x="344" y="251"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="0"/>
    <label kind="guard" x="281" y="388">JVT2I(21,1)</label>
    <label kind="assignment" x="281" y="403">DelEvtIfOnlyBack()</label>
    <nail x="311" y="288"/>
</transition>
<transition>
    <source ref="68"/>
    <target ref="68"/>
    <label kind="guard" x="575" y="890">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 6)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="575" y="905">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="290" y="840"/>
    <nail x="590" y="840"/>
</transition>
<transition>
    <source ref="99652"/>
    <target ref="99651"/>
    <label kind="assignment" x="624" y="480">Chart_CurrentMasterId=Chart_MasterShip_OneMVB2_CNMVBId</label>
    <nail x="654" y="365"/>
</transition>
<transition>
    <source ref="99651"/>
    <target ref="99650"/>
    <label kind="assignment" x="737" y="230">DispatchEvent(eJudgeActionOver,21,-1,aCommonAutomaton),DispatchFuncEvent(50,1,-1)</label>
    <nail x="767" y="115"/>
</transition>
<transition>
    <source ref="99650"/>
    <target ref="66"/>
    <label kind="guard" x="850" y="-35">JVSEF2M(21,eJudgeActionOver,1)</label>
    <label kind="assignment" x="850" y="-20">mChart_MasterShip_OneMVB2_LOGICHistoryState=66,PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=66,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(66,66)</label>
    <nail x="880" y="-135"/>
</transition>
<transition>
    <source ref="68"/>
    <target ref="99652"/>
    <label kind="guard" x="421" y="675">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 6)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="421" y="690">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="451" y="575"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="66"/>
    <label kind="guard" x="1012" y="-60">(!mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="1012" y="-45">CommonAutomatonCommunicateWithControllerAndConditional(21,66),ClearChart_MasterShip_OneMVB2_LOGICPathSelect()</label>
    <nail x="742" y="-160"/>
    <nail x="1042" y="-160"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="66"/>
    <label kind="guard" x="1077" y="-70">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 7)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="1077" y="-55">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(66,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="692" y="-120"/>
    <nail x="1092" y="-120"/>
</transition>
<transition>
    <source ref="99648"/>
    <target ref="65"/>
    <label kind="assignment" x="255" y="358">Chart_MasterShip_OneMVB2_LOGIC_HasMasterFrame=1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=65,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(65,65)</label>
    <nail x="285" y="243"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="99648"/>
    <label kind="guard" x="764" y="-44">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 7)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="764" y="-29">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="794" y="-144"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="66"/>
    <label kind="guard" x="1132" y="-150">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 8)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="1132" y="-135">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(66,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="667" y="-100"/>
    <nail x="1117" y="-100"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="65"/>
    <label kind="guard" x="382" y="246">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 8)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="382" y="261">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=65,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(65,65)</label>
    <nail x="412" y="146"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="24"/>
    <label kind="guard" x="436" y="-45">JVI2T(21,24,1)</label>
    <label kind="assignment" x="436" y="-30">PopOneEvent()</label>
    <nail x="466" y="-145"/>
</transition>
<transition>
    <source ref="24"/>
    <target ref="0"/>
    <label kind="guard" x="456" y="0">JVT2I(21,1)</label>
    <label kind="assignment" x="456" y="15">DelEvtIfOnlyBack()</label>
    <nail x="486" y="-100"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="66"/>
    <label kind="guard" x="1172" y="-180">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 9)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="1172" y="-165">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(66,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="642" y="-80"/>
    <nail x="1142" y="-80"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="24"/>
    <label kind="guard" x="862" y="-180">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 9)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="862" y="-165">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=24,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="892" y="-280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="23"/>
    <label kind="guard" x="316" y="-42">JVI2T(21,23,1)</label>
    <label kind="assignment" x="316" y="-27">PopOneEvent()</label>
    <nail x="346" y="-142"/>
</transition>
<transition>
    <source ref="23"/>
    <target ref="0"/>
    <label kind="guard" x="342" y="0">JVT2I(21,1)</label>
    <label kind="assignment" x="342" y="15">DelEvtIfOnlyBack()</label>
    <nail x="372" y="-100"/>
</transition>
<transition>
    <source ref="24"/>
    <target ref="24"/>
    <label kind="guard" x="937" y="-120">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 10)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="937" y="-105">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="817" y="-220"/>
    <nail x="967" y="-220"/>
</transition>
<transition>
    <source ref="99644"/>
    <target ref="23"/>
    <label kind="assignment" x="623" y="-215">Chart_BAitr=Chart_BAitr+2,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=23,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="653" y="-330"/>
</transition>
<transition>
    <source ref="24"/>
    <target ref="99644"/>
    <label kind="guard" x="737" y="-130">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 10)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="737" y="-115">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="767" y="-230"/>
</transition>
<transition>
    <source ref="23"/>
    <target ref="23"/>
    <label kind="guard" x="710" y="-120">(mChart_MasterShip_OneMVB2_LOGICChildPath[2] == 11)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="710" y="-105">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="590" y="-220"/>
    <nail x="740" y="-220"/>
</transition>
<transition>
    <source ref="99642"/>
    <target ref="66"/>
    <label kind="assignment" x="873" y="-115">Chart_BAitr=0,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=66,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(66,66)</label>
    <nail x="903" y="-230"/>
</transition>
<transition>
    <source ref="23"/>
    <target ref="99642"/>
    <label kind="guard" x="760" y="-230">(mChart_MasterShip_OneMVB2_LOGICChildPath[2] == 11)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="760" y="-215">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="790" y="-330"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="71"/>
    <label kind="guard" x="235" y="6">JVI2T(21,71,1)</label>
    <label kind="assignment" x="235" y="21">PopOneEvent()</label>
    <nail x="265" y="-94"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="0"/>
    <label kind="guard" x="261" y="48">JVT2I(21,1)</label>
    <label kind="assignment" x="261" y="63">DelEvtIfOnlyBack()</label>
    <nail x="291" y="-52"/>
</transition>
<transition>
    <source ref="23"/>
    <target ref="23"/>
    <label kind="guard" x="750" y="-150">(mChart_MasterShip_OneMVB2_LOGICChildPath[2] == 12)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="750" y="-135">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="565" y="-200"/>
    <nail x="765" y="-200"/>
</transition>
<transition>
    <source ref="99640"/>
    <target ref="99639"/>
    <label kind="assignment" x="234" y="11">Chart_ReqId=Chart_CNStatusRequest</label>
    <nail x="264" y="-104"/>
</transition>
<transition>
    <source ref="99639"/>
    <target ref="99638"/>
    <label kind="assignment" x="-16" y="155">Chart_RevMVBId=Chart_BAitr</label>
    <nail x="14" y="40"/>
</transition>
<transition>
    <source ref="99638"/>
    <target ref="99637"/>
    <label kind="assignment" x="-266" y="300">DispatchEvent(eJudgeActionOver,21,-1,aCommonAutomaton),DispatchFuncEvent(53,1,-1)</label>
    <nail x="-236" y="185"/>
</transition>
<transition>
    <source ref="99637"/>
    <target ref="71"/>
    <label kind="guard" x="-516" y="430">JVSEF2M(21,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-516" y="445">mChart_MasterShip_OneMVB2_LOGICHistoryState=71,PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=71,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(71,71)</label>
    <nail x="-486" y="330"/>
</transition>
<transition>
    <source ref="23"/>
    <target ref="99640"/>
    <label kind="guard" x="535" y="-64">(mChart_MasterShip_OneMVB2_LOGICChildPath[2] == 12)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="535" y="-49">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="565" y="-164"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="71"/>
    <label kind="guard" x="-466" y="666">(!mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-466" y="681">CommonAutomatonCommunicateWithControllerAndConditional(21,71),ClearChart_MasterShip_OneMVB2_LOGICPathSelect()</label>
    <nail x="-736" y="566"/>
    <nail x="-436" y="566"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="69"/>
    <label kind="guard" x="-391" y="296">JVI2T(21,69,1)</label>
    <label kind="assignment" x="-391" y="311">PopOneEvent()</label>
    <nail x="-361" y="196"/>
</transition>
<transition>
    <source ref="69"/>
    <target ref="0"/>
    <label kind="guard" x="-398" y="247">JVT2I(21,1)</label>
    <label kind="assignment" x="-398" y="262">DelEvtIfOnlyBack()</label>
    <nail x="-368" y="147"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="71"/>
    <label kind="guard" x="-401" y="656">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 13)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-401" y="671">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(71,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-786" y="606"/>
    <nail x="-386" y="606"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="69"/>
    <label kind="guard" x="-766" y="465">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 13)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-766" y="480">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=69,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-736" y="365"/>
</transition>
<transition>
    <source ref="69"/>
    <target ref="69"/>
    <label kind="guard" x="-747" y="395">(!mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-747" y="410">CommonAutomatonCommunicateWithControllerAndConditional(21,69),ClearChart_MasterShip_OneMVB2_LOGICPathSelect()</label>
    <nail x="-917" y="295"/>
    <nail x="-717" y="295"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="70"/>
    <label kind="guard" x="-512" y="330">JVI2T(21,70,1)</label>
    <label kind="assignment" x="-512" y="345">PopOneEvent()</label>
    <nail x="-482" y="230"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="0"/>
    <label kind="guard" x="-520" y="281">JVT2I(21,1)</label>
    <label kind="assignment" x="-520" y="296">DelEvtIfOnlyBack()</label>
    <nail x="-490" y="181"/>
</transition>
<transition>
    <source ref="69"/>
    <target ref="69"/>
    <label kind="guard" x="-682" y="385">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 14)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-682" y="400">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-967" y="335"/>
    <nail x="-667" y="335"/>
</transition>
<transition>
    <source ref="99634"/>
    <target ref="99633"/>
    <label kind="assignment" x="-1235" y="385">Chart_ReqId=Chart_CNMasterShip</label>
    <nail x="-1205" y="270"/>
</transition>
<transition>
    <source ref="99633"/>
    <target ref="99632"/>
    <label kind="assignment" x="-1485" y="454">Chart_RevMVBId=Chart_BAitr</label>
    <nail x="-1455" y="339"/>
</transition>
<transition>
    <source ref="99632"/>
    <target ref="99631"/>
    <label kind="assignment" x="-1735" y="523">DispatchEvent(eJudgeActionOver,21,-1,aCommonAutomaton),DispatchFuncEvent(53,1,-1)</label>
    <nail x="-1705" y="408"/>
</transition>
<transition>
    <source ref="99631"/>
    <target ref="70"/>
    <label kind="guard" x="-1985" y="577">JVSEF2M(21,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-1985" y="592">mChart_MasterShip_OneMVB2_LOGICHistoryState=70,PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=70,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(70,70)</label>
    <nail x="-1955" y="477"/>
</transition>
<transition>
    <source ref="69"/>
    <target ref="99634"/>
    <label kind="guard" x="-959" y="397">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 14)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-959" y="412">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="-929" y="297"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="70"/>
    <label kind="guard" x="-1947" y="780">(!mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-1947" y="795">CommonAutomatonCommunicateWithControllerAndConditional(21,70),ClearChart_MasterShip_OneMVB2_LOGICPathSelect()</label>
    <nail x="-2217" y="680"/>
    <nail x="-1917" y="680"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="27"/>
    <label kind="guard" x="-1137" y="489">JVI2T(21,27,1)</label>
    <label kind="assignment" x="-1137" y="504">PopOneEvent()</label>
    <nail x="-1107" y="389"/>
</transition>
<transition>
    <source ref="27"/>
    <target ref="0"/>
    <label kind="guard" x="-1147" y="441">JVT2I(21,1)</label>
    <label kind="assignment" x="-1147" y="456">DelEvtIfOnlyBack()</label>
    <nail x="-1117" y="341"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="70"/>
    <label kind="guard" x="-1882" y="770">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 15)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-1882" y="785">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(70,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-2267" y="720"/>
    <nail x="-1867" y="720"/>
</transition>
<transition>
    <source ref="99629"/>
    <target ref="27"/>
    <label kind="assignment" x="-2346" y="668">Chart_error=0,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=27,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="-2316" y="553"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="99629"/>
    <label kind="guard" x="-2214" y="730">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 15)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-2214" y="745">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="-2184" y="630"/>
</transition>
<transition>
    <source ref="27"/>
    <target ref="27"/>
    <label kind="guard" x="-2295" y="743">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 16)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-2295" y="758">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-2365" y="643"/>
    <nail x="-2265" y="643"/>
</transition>
<transition>
    <source ref="27"/>
    <target ref="65"/>
    <label kind="guard" x="-1253" y="599">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 16)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-1253" y="614">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=65,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(65,65)</label>
    <nail x="-1223" y="499"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="26"/>
    <label kind="guard" x="-1124" y="472">JVI2T(21,26,1)</label>
    <label kind="assignment" x="-1124" y="487">PopOneEvent()</label>
    <nail x="-1094" y="372"/>
</transition>
<transition>
    <source ref="26"/>
    <target ref="0"/>
    <label kind="guard" x="-1134" y="424">JVT2I(21,1)</label>
    <label kind="assignment" x="-1134" y="439">DelEvtIfOnlyBack()</label>
    <nail x="-1104" y="324"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="70"/>
    <label kind="guard" x="-1827" y="690">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 17)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-1827" y="705">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(70,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-2292" y="740"/>
    <nail x="-1842" y="740"/>
</transition>
<transition>
    <source ref="99626"/>
    <target ref="26"/>
    <label kind="assignment" x="-2333" y="635">Chart_error=1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=26,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="-2303" y="520"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="99626"/>
    <label kind="guard" x="-2221" y="714">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 17)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-2221" y="729">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="-2191" y="614"/>
</transition>
<transition>
    <source ref="26"/>
    <target ref="26"/>
    <label kind="guard" x="-2268" y="709">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 18)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-2268" y="724">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-2338" y="609"/>
    <nail x="-2238" y="609"/>
</transition>
<transition>
    <source ref="26"/>
    <target ref="65"/>
    <label kind="guard" x="-1238" y="582">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 18)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-1238" y="597">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=65,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(65,65)</label>
    <nail x="-1208" y="482"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="70"/>
    <label kind="guard" x="-1787" y="660">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 19)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-1787" y="675">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(70,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-2317" y="760"/>
    <nail x="-1817" y="760"/>
</transition>
<transition>
    <source ref="99623"/>
    <target ref="27"/>
    <label kind="assignment" x="-2346" y="668">Chart_error=1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=27,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="-2316" y="553"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="99623"/>
    <label kind="guard" x="-2214" y="730">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 19)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-2214" y="745">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="-2184" y="630"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="72"/>
    <label kind="guard" x="-259" y="406">JVI2T(21,72,1)</label>
    <label kind="assignment" x="-259" y="421">PopOneEvent()</label>
    <nail x="-229" y="306"/>
</transition>
<transition>
    <source ref="72"/>
    <target ref="0"/>
    <label kind="guard" x="-283" y="363">JVT2I(21,1)</label>
    <label kind="assignment" x="-283" y="378">DelEvtIfOnlyBack()</label>
    <nail x="-253" y="263"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="71"/>
    <label kind="guard" x="-346" y="576">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 20)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-346" y="591">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(71,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-811" y="626"/>
    <nail x="-361" y="626"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="72"/>
    <label kind="guard" x="-616" y="546">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 20)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-616" y="561">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=72,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-586" y="446"/>
</transition>
<transition>
    <source ref="72"/>
    <target ref="72"/>
    <label kind="guard" x="-516" y="626">(!mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-516" y="641">CommonAutomatonCommunicateWithControllerAndConditional(21,72),ClearChart_MasterShip_OneMVB2_LOGICPathSelect()</label>
    <nail x="-686" y="526"/>
    <nail x="-486" y="526"/>
</transition>
<transition>
    <source ref="72"/>
    <target ref="72"/>
    <label kind="guard" x="-451" y="616">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 21)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-451" y="631">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-736" y="566"/>
    <nail x="-436" y="566"/>
</transition>
<transition>
    <source ref="72"/>
    <target ref="24"/>
    <label kind="guard" x="101" y="139">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 21)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="101" y="154">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=24,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="131" y="39"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="71"/>
    <label kind="guard" x="-306" y="546">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 22)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="-306" y="561">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(71,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-836" y="646"/>
    <nail x="-336" y="646"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="72"/>
    <label kind="guard" x="-601" y="496">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 22)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-601" y="511">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=72,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="-586" y="446"/>
</transition>
<transition>
    <source ref="24"/>
    <target ref="24"/>
    <label kind="guard" x="977" y="-150">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 23)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="977" y="-135">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="792" y="-200"/>
    <nail x="992" y="-200"/>
</transition>
<transition>
    <source ref="99618"/>
    <target ref="23"/>
    <label kind="assignment" x="623" y="-215">Chart_BAitr=Chart_BAitr+1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=23,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="653" y="-330"/>
</transition>
<transition>
    <source ref="24"/>
    <target ref="99618"/>
    <label kind="guard" x="737" y="-130">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 23)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="737" y="-115">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="767" y="-230"/>
</transition>
<transition>
    <source ref="22"/>
    <target ref="22"/>
    <label kind="guard" x="351" y="940">(mChart_MasterShip_OneMVB2_LOGICChildPath[3] == 24)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="351" y="955">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="166" y="890"/>
    <nail x="366" y="890"/>
</transition>
<transition>
    <source ref="22"/>
    <target ref="65"/>
    <label kind="guard" x="8" y="790">(mChart_MasterShip_OneMVB2_LOGICChildPath[3] == 24)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="8" y="805">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=65,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(65,65)</label>
    <nail x="38" y="690"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="67"/>
    <label kind="guard" x="177" y="407">JVI2T(21,67,1)</label>
    <label kind="assignment" x="177" y="422">PopOneEvent()</label>
    <nail x="207" y="307"/>
</transition>
<transition>
    <source ref="67"/>
    <target ref="0"/>
    <label kind="guard" x="130" y="422">JVT2I(21,1)</label>
    <label kind="assignment" x="130" y="437">DelEvtIfOnlyBack()</label>
    <nail x="160" y="322"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="25"/>
    <label kind="guard" x="376" y="960">(mChart_MasterShip_OneMVB2_LOGICChildPath[2] == 25)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="376" y="975">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="141" y="910"/>
    <nail x="391" y="910"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="67"/>
    <label kind="guard" x="174" y="792">(mChart_MasterShip_OneMVB2_LOGICChildPath[2] == 25)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="174" y="807">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=67,mTryFindPath = false,CommonActionEventConsumed(true,true)</label>
    <nail x="204" y="692"/>
</transition>
<transition>
    <source ref="67"/>
    <target ref="67"/>
    <label kind="guard" x="310" y="744">(!mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="310" y="759">CommonAutomatonCommunicateWithControllerAndConditional(21,67),ClearChart_MasterShip_OneMVB2_LOGICPathSelect()</label>
    <nail x="140" y="644"/>
    <nail x="340" y="644"/>
</transition>
<transition>
    <source ref="67"/>
    <target ref="67"/>
    <label kind="guard" x="375" y="734">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 26)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="375" y="749">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="90" y="684"/>
    <nail x="390" y="684"/>
</transition>
<transition>
    <source ref="99614"/>
    <target ref="99613"/>
    <label kind="assignment" x="-156" y="558">Chart_status_response_type=1</label>
    <nail x="-126" y="443"/>
</transition>
<transition>
    <source ref="99613"/>
    <target ref="99612"/>
    <label kind="assignment" x="-406" y="510">DispatchEvent(eJudgeActionOver,21,-1,aCommonAutomaton),DispatchFuncEvent(54,1,-1)</label>
    <nail x="-376" y="395"/>
</transition>
<transition>
    <source ref="99612"/>
    <target ref="65"/>
    <label kind="guard" x="-357" y="606">JVSEF2M(21,eJudgeActionOver,1)</label>
    <label kind="assignment" x="-357" y="621">mChart_MasterShip_OneMVB2_LOGICHistoryState=65,PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=65,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(65,65)</label>
    <nail x="-327" y="506"/>
</transition>
<transition>
    <source ref="67"/>
    <target ref="99614"/>
    <label kind="guard" x="76" y="689">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 26)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="76" y="704">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="106" y="589"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="25"/>
    <label kind="guard" x="431" y="880">(mChart_MasterShip_OneMVB2_LOGICChildPath[2] == 27)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="431" y="895">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="116" y="930"/>
    <nail x="416" y="930"/>
</transition>
<transition>
    <source ref="99610"/>
    <target ref="65"/>
    <label kind="assignment" x="-116" y="705">Chart_status_response_type=2,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=65,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(65,65)</label>
    <nail x="-86" y="590"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="99610"/>
    <label kind="guard" x="80" y="847">(mChart_MasterShip_OneMVB2_LOGICChildPath[2] == 27)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="80" y="862">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="110" y="747"/>
</transition>
<transition>
    <source ref="20"/>
    <target ref="20"/>
    <label kind="guard" x="139" y="780">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 28)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="139" y="795">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-46" y="730"/>
    <nail x="154" y="730"/>
</transition>
<transition>
    <source ref="20"/>
    <target ref="65"/>
    <label kind="guard" x="-66" y="672">(mChart_MasterShip_OneMVB2_LOGICChildPath[1] == 28)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="-66" y="687">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=65,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(65,65)</label>
    <nail x="-36" y="572"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="65"/>
    <label kind="guard" x="113" y="624">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 29)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="113" y="639">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(65,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-352" y="674"/>
    <nail x="98" y="674"/>
</transition>
<transition>
    <source ref="99607"/>
    <target ref="20"/>
    <label kind="assignment" x="26" y="832">Chart_MasterShip_OneMVB2_LOGIC_HasMasterFrame=0,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=20,mTryFindPath = false,CommonActionEventConsumed(true,false)</label>
    <nail x="56" y="717"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="99607"/>
    <label kind="guard" x="0" y="664">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 29)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="0" y="679">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=true</label>
    <nail x="30" y="564"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="65"/>
    <label kind="guard" x="153" y="594">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 30)&amp;&amp;(mChart_MasterShip_OneMVB2_LOGICExistPath)&amp;&amp;JVSE2M(21,aCommonAutomaton)</label>
    <label kind="assignment" x="153" y="609">DispatchEvent(eDeActivationOver,21,-1,aCommonAutomaton),Deactive(65,21),mChart_MasterShip_OneMVB2_LOGICExistPath = false</label>
    <nail x="-377" y="694"/>
    <nail x="123" y="694"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="66"/>
    <label kind="guard" x="352" y="207">(mChart_MasterShip_OneMVB2_LOGICChildPath[0] == 30)&amp;&amp;JVSEF2M(21,eDeActivationOver,aCommonAutomaton)</label>
    <label kind="assignment" x="352" y="222">PopOneEvent(),mChart_MasterShip_OneMVB2_LOGICHistoryState=-1,mChart_MasterShip_OneMVB2_LOGICLoseControl=false,mChart_MasterShip_OneMVB2_LOGICHistoryState=66,mTryFindPath = false,CommonActionEventConsumed(true,true),Active(66,66)</label>
    <nail x="382" y="107"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_ps_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">ps_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(64,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(64,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,64)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(64,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,64)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(64,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_Standby_Master_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return false;
}

int GHS()
{
    return -1;
}

bool IsLoseControl()
{
    return false;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Standby_Master_ctrl_initial</name>
    <urgent/>
</location>
<location id="99683" x = "880" y = "210">
    <urgent/>
</location>
<location id="99682" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99683"/>
    <label kind="guard" x="528" y="276">JVSAO(65,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99683"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99683"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,21,65,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(65,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(65,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(21,JNCRA(),false,false,true,true,-1),(!JNCRA())?mChart_MasterShip_OneMVB2_LOGICHistoryState=65:mEmptyOp=0,MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(65,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(false,false,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(65,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99682"/>
    <label kind="guard" x="84" y="374">JVSDaO(65,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99682"/>
    <target ref="0"/>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(65,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(false,false,-1,21)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(65,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(true,false,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(65,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(false,false,-1,21)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(65,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 65,false,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(65,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 65,false,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(65,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(65)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),false)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(65,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_Standby_Master_ctrlaction</name>
<declaration>// Place local declarations here.
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Standby_Master_ctrl_act_initial</name>
    <urgent/>
</location>
<location id="99686" x = "360" y = "400">
    <urgent/>
</location>
<location id="99685" x = "120" y = "400">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="260" y="380">JVSEF2M(65,eTransToStateDirectly,aControllerActionAutomaton)</label>
    <label kind="assignment" x="260" y="395">PopOneEvent()</label>
    <nail x="190" y="280"/>
    <nail x="290" y="280"/>
</transition>
<transition>
    <source ref="99686"/>
    <target ref="0"/>
    <label kind="guard" x="310" y="390">JVT2I(65,3)</label>
    <label kind="assignment" x="310" y="405">DelEvtIfOnlyBack()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99686"/>
    <label kind="guard" x="270" y="420">JVSEF2M(65,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="270" y="435">DispatchFuncEvent(60,30,53)</label>
    <nail x="300" y="320"/>
</transition>
<transition>
    <source ref="99686"/>
    <target ref="0"/>
    <label kind="guard" x="325" y="340">JVSEF2M(65,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="325" y="355">PopOneEvent()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="99685"/>
    <target ref="0"/>
    <label kind="guard" x="190" y="450">JVT2I(65,3)</label>
    <label kind="assignment" x="190" y="465">DelEvtIfOnlyBack()</label>
    <nail x="220" y="350"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99685"/>
    <label kind="guard" x="150" y="420">JVSEF2M(65,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="150" y="435">DispatchFuncEvent(61,30,53)</label>
    <nail x="180" y="320"/>
</transition>
<transition>
    <source ref="99685"/>
    <target ref="0"/>
    <label kind="guard" x="205" y="400">JVSEF2M(65,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="205" y="415">PopOneEvent()</label>
    <nail x="220" y="350"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_Rrgular_Master_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return false;
}

int GHS()
{
    return -1;
}

bool IsLoseControl()
{
    return false;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Rrgular_Master_ctrl_initial</name>
    <urgent/>
</location>
<location id="99677" x = "880" y = "210">
    <urgent/>
</location>
<location id="99676" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99677"/>
    <label kind="guard" x="528" y="276">JVSAO(66,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99677"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99677"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,21,66,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(66,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(66,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(21,JNCRA(),false,false,true,true,-1),(!JNCRA())?mChart_MasterShip_OneMVB2_LOGICHistoryState=66:mEmptyOp=0,MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(66,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(false,false,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(66,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99676"/>
    <label kind="guard" x="84" y="374">JVSDaO(66,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99676"/>
    <target ref="0"/>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(66,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(false,false,-1,21)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(66,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(true,false,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(66,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(false,false,-1,21)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(66,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 66,false,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(66,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 66,false,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(66,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(66)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),false)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(66,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_Rrgular_Master_ctrlaction</name>
<declaration>// Place local declarations here.
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Rrgular_Master_ctrl_act_initial</name>
    <urgent/>
</location>
<location id="99680" x = "360" y = "400">
    <urgent/>
</location>
<location id="99679" x = "120" y = "400">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="260" y="380">JVSEF2M(66,eTransToStateDirectly,aControllerActionAutomaton)</label>
    <label kind="assignment" x="260" y="395">PopOneEvent()</label>
    <nail x="190" y="280"/>
    <nail x="290" y="280"/>
</transition>
<transition>
    <source ref="99680"/>
    <target ref="0"/>
    <label kind="guard" x="310" y="390">JVT2I(66,3)</label>
    <label kind="assignment" x="310" y="405">DelEvtIfOnlyBack()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99680"/>
    <label kind="guard" x="270" y="420">JVSEF2M(66,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="270" y="435">DispatchFuncEvent(63,30,53)</label>
    <nail x="300" y="320"/>
</transition>
<transition>
    <source ref="99680"/>
    <target ref="0"/>
    <label kind="guard" x="325" y="340">JVSEF2M(66,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="325" y="355">PopOneEvent()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="99679"/>
    <target ref="0"/>
    <label kind="guard" x="190" y="450">JVT2I(66,3)</label>
    <label kind="assignment" x="190" y="465">DelEvtIfOnlyBack()</label>
    <nail x="220" y="350"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99679"/>
    <label kind="guard" x="150" y="420">JVSEF2M(66,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="150" y="435">DispatchFuncEvent(64,30,53)</label>
    <nail x="180" y="320"/>
</transition>
<transition>
    <source ref="99679"/>
    <target ref="0"/>
    <label kind="guard" x="205" y="400">JVSEF2M(66,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="205" y="415">PopOneEvent()</label>
    <nail x="220" y="350"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_st_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">st_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(67,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(67,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,67)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(67,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,67)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(67,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_bt_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">bt_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(68,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(68,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,68)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(68,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,68)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(68,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_sr_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">sr_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(69,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(69,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,69)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(69,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,69)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(69,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_Interim_Master_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return false;
}

int GHS()
{
    return -1;
}

bool IsLoseControl()
{
    return false;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Interim_Master_ctrl_initial</name>
    <urgent/>
</location>
<location id="99668" x = "880" y = "210">
    <urgent/>
</location>
<location id="99667" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99668"/>
    <label kind="guard" x="528" y="276">JVSAO(70,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99668"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99668"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,21,70,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(70,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(70,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(21,JNCRA(),false,false,true,true,-1),(!JNCRA())?mChart_MasterShip_OneMVB2_LOGICHistoryState=70:mEmptyOp=0,MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(70,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(false,false,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(70,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99667"/>
    <label kind="guard" x="84" y="374">JVSDaO(70,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99667"/>
    <target ref="0"/>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(70,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(false,false,-1,21)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(70,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(true,false,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(70,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(false,false,-1,21)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(70,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 70,false,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(70,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 70,false,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(70,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(70)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),false)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(70,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_Interim_Master_ctrlaction</name>
<declaration>// Place local declarations here.
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Interim_Master_ctrl_act_initial</name>
    <urgent/>
</location>
<location id="99671" x = "360" y = "400">
    <urgent/>
</location>
<location id="99670" x = "120" y = "400">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="260" y="380">JVSEF2M(70,eTransToStateDirectly,aControllerActionAutomaton)</label>
    <label kind="assignment" x="260" y="395">PopOneEvent()</label>
    <nail x="190" y="280"/>
    <nail x="290" y="280"/>
</transition>
<transition>
    <source ref="99671"/>
    <target ref="0"/>
    <label kind="guard" x="310" y="390">JVT2I(70,3)</label>
    <label kind="assignment" x="310" y="405">DelEvtIfOnlyBack()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99671"/>
    <label kind="guard" x="270" y="420">JVSEF2M(70,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="270" y="435">DispatchFuncEvent(68,30,53)</label>
    <nail x="300" y="320"/>
</transition>
<transition>
    <source ref="99671"/>
    <target ref="0"/>
    <label kind="guard" x="325" y="340">JVSEF2M(70,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="325" y="355">PopOneEvent()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="99670"/>
    <target ref="0"/>
    <label kind="guard" x="190" y="450">JVT2I(70,3)</label>
    <label kind="assignment" x="190" y="465">DelEvtIfOnlyBack()</label>
    <nail x="220" y="350"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99670"/>
    <label kind="guard" x="150" y="420">JVSEF2M(70,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="150" y="435">DispatchFuncEvent(69,30,53)</label>
    <nail x="180" y="320"/>
</transition>
<transition>
    <source ref="99670"/>
    <target ref="0"/>
    <label kind="guard" x="205" y="400">JVSEF2M(70,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="205" y="415">PopOneEvent()</label>
    <nail x="220" y="350"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_Find_Next_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;
bool JHV()
{
    return false;
}

int GHS()
{
    return -1;
}

bool IsLoseControl()
{
    return false;
}

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Find_Next_ctrl_initial</name>
    <urgent/>
</location>
<location id="99662" x = "880" y = "210">
    <urgent/>
</location>
<location id="99661" x = "0" y = "210">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="99662"/>
    <label kind="guard" x="528" y="276">JVSAO(71,aControllerAutomaton)</label>
    <label kind="assignment" x="528" y="291">MSO2L()</label>
    <nail x="558" y="176"/>
</transition>
<transition>
    <source ref="99662"/>
    <target ref="0"/>
    <label kind="guard" x="530" y="325">JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="530" y="340">ActivationStopDispatch(JNCRA())</label>
    <nail x="560" y="225"/>
</transition>
<transition>
    <source ref="99662"/>
    <target ref="0"/>
    <label kind="guard" x="547" y="325">!JVSAH(aControllerAutomaton)</label>
    <label kind="assignment" x="547" y="340">PushOneEvent(eActivation,21,71,-GetStackTopInfo(),true,aControllerAutomaton,-1,-1)</label>
    <nail x="562" y="275"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="215" y="510">JVSEF2M(71,eDefaultActivation,aControllerAutomaton)</label>
    <label kind="assignment" x="215" y="525">HandleeDefaultActivation(false,-1)</label>
    <nail x="280" y="290"/>
    <nail x="290" y="260"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="270" y="470">JVSAL(71,aControllerAutomaton)</label>
    <label kind="assignment" x="270" y="485">HandleeActivation(21,JNCRA(),false,false,true,true,-1),(!JNCRA())?mChart_MasterShip_OneMVB2_LOGICHistoryState=71:mEmptyOp=0,MNRA()</label>
    <nail x="304" y="322"/>
    <nail x="330" y="270"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="340" y="380">JVSEF2M(71,eActiveChild,aControllerAutomaton)</label>
    <label kind="assignment" x="340" y="395">HandleeActiveChild(false,false,false,-1)</label>
    <nail x="328" y="354"/>
    <nail x="370" y="280"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="395" y="340">JVSEF2M(71,eActiveParallel,aControllerAutomaton)</label>
    <label kind="assignment" x="395" y="355">HandleeActiveParallel(-1)</label>
    <nail x="352" y="386"/>
    <nail x="410" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99661"/>
    <label kind="guard" x="84" y="374">JVSDaO(71,aControllerAutomaton)</label>
    <label kind="assignment" x="84" y="389">MSO2L()</label>
    <nail x="114" y="274"/>
</transition>
<transition>
    <source ref="99661"/>
    <target ref="0"/>
    <nail x="120" y="225"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="125" y="540">JVSDaL(71,aControllerAutomaton) &amp;&amp; JNCRDA()</label>
    <label kind="assignment" x="125" y="555">HandleInactiveInDeactivation(false,false,-1,21)</label>
    <nail x="190" y="260"/>
    <nail x="200" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="100" y="500">JVSDaL(71,aControllerAutomaton) &amp;&amp; JNCRA()</label>
    <label kind="assignment" x="100" y="515">HandleActiveInDeactivation(true,false,false),MNRDA()</label>
    <nail x="166" y="292"/>
    <nail x="160" y="300"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="90" y="410">JVSEF2M(71,eExitActionOver,aControllerAutomaton)</label>
    <label kind="assignment" x="90" y="425">HandleeExitActionOver(false,false,-1,21)</label>
    <nail x="142" y="324"/>
    <nail x="120" y="310"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="305" y="105">JVSE2M(71,aControllerAutomaton) &amp;&amp; JVSETrigger()</label>
    <label kind="assignment" x="305" y="120">WhichInvokeForStateIdAndEvtId(GHS()),FirstRoundEventDispatchHandle(false, 71,false,false,GHS())</label>
    <nail x="205" y="205"/>
    <nail x="275" y="205"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="345" y="80">JVSE2M(71,aControllerAutomaton) &amp;&amp; !JVSETrigger()</label>
    <label kind="assignment" x="345" y="95">FirstRoundEventDispatchHandle(false, 71,false,false,GHS())</label>
    <nail x="165" y="180"/>
    <nail x="315" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="385" y="55">JVSEF2M(71,eDispathToSelfLogic,aControllerAutomaton)</label>
    <label kind="assignment" x="385" y="70">MNSESelfLogicOver(JNCRA())</label>
    <nail x="125" y="155"/>
    <nail x="355" y="155"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="425" y="30">JNSESelfLogicOver(71)</label>
    <label kind="assignment" x="425" y="45">MNSEDispatchToChild(GHS(),false)</label>
    <nail x="85" y="130"/>
    <nail x="395" y="130"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="465" y="5">JVSEF2M(71,eChildOver,aControllerAutomaton)</label>
    <label kind="assignment" x="465" y="20">MNSEDispatchToParallel(-1)</label>
    <nail x="45" y="105"/>
    <nail x="435" y="105"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_Find_Next_ctrlaction</name>
<declaration>// Place local declarations here.
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">Find_Next_ctrl_act_initial</name>
    <urgent/>
</location>
<location id="99665" x = "360" y = "400">
    <urgent/>
</location>
<location id="99664" x = "120" y = "400">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="260" y="380">JVSEF2M(71,eTransToStateDirectly,aControllerActionAutomaton)</label>
    <label kind="assignment" x="260" y="395">PopOneEvent()</label>
    <nail x="190" y="280"/>
    <nail x="290" y="280"/>
</transition>
<transition>
    <source ref="99665"/>
    <target ref="0"/>
    <label kind="guard" x="310" y="390">JVT2I(71,3)</label>
    <label kind="assignment" x="310" y="405">DelEvtIfOnlyBack()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99665"/>
    <label kind="guard" x="270" y="420">JVSEF2M(71,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="270" y="435">DispatchFuncEvent(71,30,53)</label>
    <nail x="300" y="320"/>
</transition>
<transition>
    <source ref="99665"/>
    <target ref="0"/>
    <label kind="guard" x="325" y="340">JVSEF2M(71,eActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="325" y="355">PopOneEvent()</label>
    <nail x="340" y="290"/>
</transition>
<transition>
    <source ref="99664"/>
    <target ref="0"/>
    <label kind="guard" x="190" y="450">JVT2I(71,3)</label>
    <label kind="assignment" x="190" y="465">DelEvtIfOnlyBack()</label>
    <nail x="220" y="350"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99664"/>
    <label kind="guard" x="150" y="420">JVSEF2M(71,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="150" y="435">DispatchFuncEvent(72,30,53)</label>
    <nail x="180" y="320"/>
</transition>
<transition>
    <source ref="99664"/>
    <target ref="0"/>
    <label kind="guard" x="205" y="400">JVSEF2M(71,eDeActivation,aControllerActionAutomaton)</label>
    <label kind="assignment" x="205" y="415">PopOneEvent()</label>
    <nail x="220" y="350"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_T_F_controller</name>
<declaration>// Place local declarations here.
int mRunStatus = mStatusDeActive;

bool JNCRA()
{
    return mRunStatus == mStatusActive;
}

void MNRA()
{
    mRunStatus = mStatusActive;
}

bool JNCRDA()
{
    return mRunStatus == mStatusDeActive;
}

void MNRDA()
{
    mRunStatus = mStatusDeActive;
}
</declaration>
<location id="0" x = "240" y = "240">
    <name x="230" y="225">T_F_ctrl_initial</name>
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="335" y="440">JVSDaO(72,aControllerAutomaton)</label>
    <label kind="assignment" x="335" y="455">HandleSimpleDeactivation(21)</label>
    <nail x="115" y="340"/>
    <nail x="365" y="340"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="375" y="410">JVSAO(72,aControllerAutomaton)</label>
    <label kind="assignment" x="375" y="425">HandleSimpleActivationOnStack(21,72)</label>
    <nail x="90" y="360"/>
    <nail x="390" y="360"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="430" y="330">JVSAL(72,aControllerAutomaton)</label>
    <label kind="assignment" x="430" y="345">HandleSimpleActivationLeaveStack(21,72)</label>
    <nail x="65" y="380"/>
    <nail x="415" y="380"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="470" y="300">JVSE2MForAll(72,aControllerAutomaton) &amp;&amp; NotDeactiveAndActiveRelatedEvents()</label>
    <label kind="assignment" x="470" y="315">PopOneEvent()</label>
    <nail x="40" y="400"/>
    <nail x="440" y="400"/>
</transition>
</template>
<template>
<name>Chart_MasterShip_OneMVB2_LOGIC_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[4];
const int mSourceRecordLength = 4;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">LOGIC_ser_cond_initial</name>
    <urgent/>
</location>
<location id="64" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip_OneMVB2_LOGIC_ps</name>
    <urgent/>
</location>
<location id="99658" x = "80" y = "80">
    <urgent/>
</location>
<location id="65" x = "-127" y = "494">
    <name x="-137" y="479">Chart_MasterShip_OneMVB2_LOGIC_Standby_Master</name>
    <urgent/>
</location>
<location id="99657" x = "-170" y = "-420">
    <urgent/>
</location>
<location id="20" x = "54" y = "650">
    <name x="44" y="635">SSID939</name>
    <urgent/>
</location>
<location id="99656" x = "123" y = "373">
    <urgent/>
</location>
<location id="25" x = "266" y = "810">
    <name x="256" y="795">SSID943</name>
    <urgent/>
</location>
<location id="99655" x = "304" y = "554">
    <urgent/>
</location>
<location id="22" x = "266" y = "810">
    <name x="256" y="795">SSID940</name>
    <urgent/>
</location>
<location id="99654" x = "0" y = "0">
    <urgent/>
</location>
<location id="68" x = "440" y = "720">
    <name x="430" y="705">Chart_MasterShip_OneMVB2_LOGIC_bt</name>
    <urgent/>
</location>
<location id="99653" x = "516" y = "766">
    <urgent/>
</location>
<location id="66" x = "542" y = "496">
    <name x="532" y="481">Chart_MasterShip_OneMVB2_LOGIC_Rrgular_Master</name>
    <urgent/>
</location>
<location id="99649" x = "553" y = "666">
    <urgent/>
</location>
<location id="99647" x = "292" y = "42">
    <urgent/>
</location>
<location id="99646" x = "292" y = "42">
    <urgent/>
</location>
<location id="24" x = "892" y = "-280">
    <name x="882" y="-295">SSID942</name>
    <urgent/>
</location>
<location id="99645" x = "654" y = "766">
    <urgent/>
</location>
<location id="23" x = "665" y = "-280">
    <name x="655" y="-295">SSID941</name>
    <urgent/>
</location>
<location id="99643" x = "642" y = "392">
    <urgent/>
</location>
<location id="99641" x = "625" y = "585">
    <urgent/>
</location>
<location id="71" x = "502" y = "-185">
    <name x="492" y="-200">Chart_MasterShip_OneMVB2_LOGIC_Find_Next</name>
    <urgent/>
</location>
<location id="99636" x = "415" y = "165">
    <urgent/>
</location>
<location id="69" x = "-817" y = "215">
    <name x="-827" y="200">Chart_MasterShip_OneMVB2_LOGIC_sr</name>
    <urgent/>
</location>
<location id="99635" x = "172" y = "-157">
    <urgent/>
</location>
<location id="70" x = "-1061" y = "283">
    <name x="-1071" y="268">Chart_MasterShip_OneMVB2_LOGIC_Interim_Master</name>
    <urgent/>
</location>
<location id="99630" x = "-1067" y = "-1317">
    <urgent/>
</location>
<location id="27" x = "-2315" y = "603">
    <name x="-2325" y="588">SSID945</name>
    <urgent/>
</location>
<location id="99628" x = "-1374" y = "-1687">
    <urgent/>
</location>
<location id="99627" x = "-1768" y = "-1221">
    <urgent/>
</location>
<location id="26" x = "-2288" y = "569">
    <name x="-2298" y="554">SSID944</name>
    <urgent/>
</location>
<location id="99625" x = "-1367" y = "-1673">
    <urgent/>
</location>
<location id="99624" x = "-1747" y = "-1206">
    <urgent/>
</location>
<location id="99622" x = "-1374" y = "-1687">
    <urgent/>
</location>
<location id="72" x = "-586" y = "446">
    <name x="-596" y="431">Chart_MasterShip_OneMVB2_LOGIC_T_F</name>
    <urgent/>
</location>
<location id="99621" x = "230" y = "-42">
    <urgent/>
</location>
<location id="99620" x = "-216" y = "153">
    <urgent/>
</location>
<location id="99619" x = "230" y = "-42">
    <urgent/>
</location>
<location id="99617" x = "642" y = "392">
    <urgent/>
</location>
<location id="99616" x = "16" y = "-234">
    <urgent/>
</location>
<location id="67" x = "240" y = "564">
    <name x="230" y="549">Chart_MasterShip_OneMVB2_LOGIC_st</name>
    <urgent/>
</location>
<location id="99615" x = "239" y = "212">
    <urgent/>
</location>
<location id="99611" x = "-9" y = "-259">
    <urgent/>
</location>
<location id="99609" x = "16" y = "-234">
    <urgent/>
</location>
<location id="99608" x = "-196" y = "-446">
    <urgent/>
</location>
<location id="99606" x = "123" y = "373">
    <urgent/>
</location>
<location id="99605" x = "123" y = "373">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="140" y="190">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="140" y="205">mChart_MasterShip_OneMVB2_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="5" y="140"/>
    <nail x="155" y="140"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="195" y="110">JVSEF2M(21,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="195" y="125">PopOneEvent()</label>
    <nail x="-20" y="160"/>
    <nail x="180" y="160"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="64"/>
    <label kind="guard" x="145" y="150">JVI2T(21,64,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="64"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(21,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99658"/>
    <label kind="guard" x="50" y="180">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99658"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99658"/>
    <target ref="64"/>
    <label kind="guard" x="100" y="300">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=0,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="64"/>
    <target ref="64"/>
    <label kind="guard" x="220" y="370">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="220" y="385">mChart_MasterShip_OneMVB2_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-45" y="420"/>
    <nail x="205" y="420"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="65"/>
    <label kind="guard" x="6" y="359">JVI2T(21,65,0)</label>
    <label kind="assignment" x="6" y="374">PopOneEvent()</label>
    <nail x="21" y="309"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="0"/>
    <label kind="guard" x="-38" y="337">JVT2I(21,0)</label>
    <label kind="assignment" x="-38" y="352">DelEvtIfOnlyBack()</label>
    <nail x="-23" y="287"/>
</transition>
<transition>
    <source ref="64"/>
    <target ref="99657"/>
    <label kind="guard" x="-122" y="66">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-122" y="81">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="-92" y="-34"/>
</transition>
<transition>
    <source ref="99657"/>
    <target ref="64"/>
    <label kind="guard" x="-75" y="50">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-75" y="65">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="-45" y="-50"/>
</transition>
<transition>
    <source ref="99657"/>
    <target ref="65"/>
    <label kind="guard" x="-129" y="135">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-129" y="150">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=1,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-99" y="35"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="65"/>
    <label kind="guard" x="93" y="484">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==4</label>
    <label kind="assignment" x="93" y="499">mChart_MasterShip_OneMVB2_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-302" y="634"/>
    <nail x="48" y="634"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="20"/>
    <label kind="guard" x="101" y="417">JVI2T(21,20,0)</label>
    <label kind="assignment" x="101" y="432">PopOneEvent()</label>
    <nail x="116" y="367"/>
</transition>
<transition>
    <source ref="20"/>
    <target ref="0"/>
    <label kind="guard" x="52" y="415">JVT2I(21,0)</label>
    <label kind="assignment" x="52" y="430">DelEvtIfOnlyBack()</label>
    <nail x="67" y="365"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="99656"/>
    <label kind="guard" x="-53" y="488">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-53" y="503">mSourceRecordArray[1]=2,mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="-23" y="388"/>
</transition>
<transition>
    <source ref="99656"/>
    <target ref="65"/>
    <label kind="guard" x="-32" y="533">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(21,59,aConditionalAutomaton)&amp;&amp;(Chart_valid_master_frame==1))</label>
    <label kind="assignment" x="-32" y="548">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="-2" y="433"/>
</transition>
<transition>
    <source ref="99656"/>
    <target ref="20"/>
    <label kind="guard" x="106" y="623">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(21,59,aConditionalAutomaton)&amp;&amp;(Chart_valid_master_frame==1)</label>
    <label kind="assignment" x="106" y="638">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=2</label>
    <nail x="136" y="523"/>
</transition>
<transition>
    <source ref="20"/>
    <target ref="65"/>
    <label kind="guard" x="-19" y="585">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==2&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==3</label>
    <label kind="assignment" x="-19" y="600">mChart_MasterShip_OneMVB2_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(1)</label>
    <nail x="-4" y="535"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="25"/>
    <label kind="guard" x="206" y="483">JVI2T(21,25,0)</label>
    <label kind="assignment" x="206" y="498">PopOneEvent()</label>
    <nail x="221" y="433"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="0"/>
    <label kind="guard" x="158" y="495">JVT2I(21,0)</label>
    <label kind="assignment" x="158" y="510">DelEvtIfOnlyBack()</label>
    <nail x="173" y="445"/>
</transition>
<transition>
    <source ref="20"/>
    <target ref="99655"/>
    <label kind="guard" x="132" y="656">mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="132" y="671">mSourceRecordArray[2]=3,mChart_MasterShip_OneMVB2_LOGICPathSelect[1]++</label>
    <nail x="162" y="556"/>
</transition>
<transition>
    <source ref="99655"/>
    <target ref="20"/>
    <label kind="guard" x="149" y="702">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_RevMVBId==Chart_MasterShip_OneMVB2_CNMVBId))</label>
    <label kind="assignment" x="149" y="717">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=-1</label>
    <nail x="179" y="602"/>
</transition>
<transition>
    <source ref="99655"/>
    <target ref="25"/>
    <label kind="guard" x="304" y="789">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_RevMVBId==Chart_MasterShip_OneMVB2_CNMVBId)</label>
    <label kind="assignment" x="304" y="804">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=3</label>
    <nail x="334" y="689"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="20"/>
    <label kind="guard" x="160" y="791">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[2]==3&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[2]==4</label>
    <label kind="assignment" x="160" y="806">mChart_MasterShip_OneMVB2_LOGICChildPath[1] = -1,ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(2)</label>
    <nail x="190" y="691"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="22"/>
    <label kind="guard" x="206" y="483">JVI2T(21,22,0)</label>
    <label kind="assignment" x="206" y="498">PopOneEvent()</label>
    <nail x="221" y="433"/>
</transition>
<transition>
    <source ref="22"/>
    <target ref="0"/>
    <label kind="guard" x="158" y="495">JVT2I(21,0)</label>
    <label kind="assignment" x="158" y="510">DelEvtIfOnlyBack()</label>
    <nail x="173" y="445"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="99654"/>
    <label kind="guard" x="56" y="520">mChart_MasterShip_OneMVB2_LOGICPathSelect[2]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="56" y="535">mSourceRecordArray[3]=4,mChart_MasterShip_OneMVB2_LOGICPathSelect[2]++</label>
    <nail x="86" y="420"/>
</transition>
<transition>
    <source ref="99654"/>
    <target ref="25"/>
    <label kind="guard" x="103" y="505">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_ReqId==Chart_CNMasterShip))</label>
    <label kind="assignment" x="103" y="520">mChart_MasterShip_OneMVB2_LOGICChildPath[2]=-1</label>
    <nail x="133" y="405"/>
</transition>
<transition>
    <source ref="99654"/>
    <target ref="22"/>
    <label kind="guard" x="150" y="490">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_ReqId==Chart_CNMasterShip)</label>
    <label kind="assignment" x="150" y="505">mChart_MasterShip_OneMVB2_LOGICChildPath[2]=4</label>
    <nail x="180" y="390"/>
</transition>
<transition>
    <source ref="22"/>
    <target ref="25"/>
    <label kind="guard" x="236" y="910">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[3]==4&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[3]==3</label>
    <label kind="assignment" x="236" y="925">mChart_MasterShip_OneMVB2_LOGICChildPath[2] = -1,ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(3)</label>
    <nail x="266" y="810"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="68"/>
    <label kind="guard" x="288" y="426">JVI2T(21,68,0)</label>
    <label kind="assignment" x="288" y="441">PopOneEvent()</label>
    <nail x="303" y="376"/>
</transition>
<transition>
    <source ref="68"/>
    <target ref="0"/>
    <label kind="guard" x="245" y="450">JVT2I(21,0)</label>
    <label kind="assignment" x="245" y="465">DelEvtIfOnlyBack()</label>
    <nail x="260" y="400"/>
</transition>
<transition>
    <source ref="22"/>
    <target ref="99653"/>
    <label kind="guard" x="353" y="839">mChart_MasterShip_OneMVB2_LOGICPathSelect[3]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="353" y="854">mChart_MasterShip_OneMVB2_LOGICPathSelect[3]++</label>
    <nail x="383" y="739"/>
</transition>
<transition>
    <source ref="99653"/>
    <target ref="22"/>
    <label kind="guard" x="361" y="888">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB2_CNACT==1))</label>
    <label kind="assignment" x="361" y="903">mChart_MasterShip_OneMVB2_LOGICChildPath[3]=-1</label>
    <nail x="391" y="788"/>
</transition>
<transition>
    <source ref="99653"/>
    <target ref="68"/>
    <label kind="guard" x="423" y="885">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB2_CNACT==1)</label>
    <label kind="assignment" x="423" y="900">mChart_MasterShip_OneMVB2_LOGICChildPath[3]=5,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="453" y="785"/>
</transition>
<transition>
    <source ref="68"/>
    <target ref="68"/>
    <label kind="guard" x="580" y="770">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="580" y="785">mChart_MasterShip_OneMVB2_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="315" y="820"/>
    <nail x="565" y="820"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="66"/>
    <label kind="guard" x="329" y="301">JVI2T(21,66,0)</label>
    <label kind="assignment" x="329" y="316">PopOneEvent()</label>
    <nail x="344" y="251"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="0"/>
    <label kind="guard" x="296" y="338">JVT2I(21,0)</label>
    <label kind="assignment" x="296" y="353">DelEvtIfOnlyBack()</label>
    <nail x="311" y="288"/>
</transition>
<transition>
    <source ref="68"/>
    <target ref="99649"/>
    <label kind="guard" x="445" y="748">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="445" y="763">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="475" y="648"/>
</transition>
<transition>
    <source ref="99649"/>
    <target ref="68"/>
    <label kind="guard" x="466" y="793">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="466" y="808">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="496" y="693"/>
</transition>
<transition>
    <source ref="99649"/>
    <target ref="66"/>
    <label kind="guard" x="468" y="684">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="468" y="699">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=6,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="498" y="584"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="66"/>
    <label kind="guard" x="762" y="486">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==4</label>
    <label kind="assignment" x="762" y="501">mChart_MasterShip_OneMVB2_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="367" y="636"/>
    <nail x="717" y="636"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="99647"/>
    <label kind="guard" x="344" y="393">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="344" y="408">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="374" y="293"/>
</transition>
<transition>
    <source ref="99647"/>
    <target ref="66"/>
    <label kind="guard" x="387" y="369">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(21,59,aConditionalAutomaton)&amp;&amp;(Chart_ReqId==Chart_CNMasterShip||Chart_ReqId==Chart_CNStatusRequest))</label>
    <label kind="assignment" x="387" y="384">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="417" y="269"/>
</transition>
<transition>
    <source ref="99647"/>
    <target ref="65"/>
    <label kind="guard" x="88" y="401">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(21,59,aConditionalAutomaton)&amp;&amp;(Chart_ReqId==Chart_CNMasterShip||Chart_ReqId==Chart_CNStatusRequest)</label>
    <label kind="assignment" x="88" y="416">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=7,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="118" y="301"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="99646"/>
    <label kind="guard" x="344" y="393">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==2&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="344" y="408">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="374" y="293"/>
</transition>
<transition>
    <source ref="99646"/>
    <target ref="66"/>
    <label kind="guard" x="387" y="369">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(21,67,aConditionalAutomaton))</label>
    <label kind="assignment" x="387" y="384">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="417" y="269"/>
</transition>
<transition>
    <source ref="99646"/>
    <target ref="65"/>
    <label kind="guard" x="88" y="401">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(21,67,aConditionalAutomaton)</label>
    <label kind="assignment" x="88" y="416">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=8,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="118" y="301"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="24"/>
    <label kind="guard" x="451" y="-95">JVI2T(21,24,0)</label>
    <label kind="assignment" x="451" y="-80">PopOneEvent()</label>
    <nail x="466" y="-145"/>
</transition>
<transition>
    <source ref="24"/>
    <target ref="0"/>
    <label kind="guard" x="471" y="-50">JVT2I(21,0)</label>
    <label kind="assignment" x="471" y="-35">DelEvtIfOnlyBack()</label>
    <nail x="486" y="-100"/>
</transition>
<transition>
    <source ref="66"/>
    <target ref="99645"/>
    <label kind="guard" x="614" y="712">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==3&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="614" y="727">mSourceRecordArray[1]=9,mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="644" y="612"/>
</transition>
<transition>
    <source ref="99645"/>
    <target ref="66"/>
    <label kind="guard" x="568" y="731">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(21,65,aConditionalAutomaton))</label>
    <label kind="assignment" x="568" y="746">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="598" y="631"/>
</transition>
<transition>
    <source ref="99645"/>
    <target ref="24"/>
    <label kind="guard" x="695" y="332">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(21,65,aConditionalAutomaton)</label>
    <label kind="assignment" x="695" y="347">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=9</label>
    <nail x="725" y="232"/>
</transition>
<transition>
    <source ref="24"/>
    <target ref="66"/>
    <label kind="guard" x="642" y="188">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==9&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==3</label>
    <label kind="assignment" x="642" y="203">mChart_MasterShip_OneMVB2_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(1)</label>
    <nail x="672" y="88"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="23"/>
    <label kind="guard" x="331" y="-92">JVI2T(21,23,0)</label>
    <label kind="assignment" x="331" y="-77">PopOneEvent()</label>
    <nail x="346" y="-142"/>
</transition>
<transition>
    <source ref="23"/>
    <target ref="0"/>
    <label kind="guard" x="357" y="-50">JVT2I(21,0)</label>
    <label kind="assignment" x="357" y="-35">DelEvtIfOnlyBack()</label>
    <nail x="372" y="-100"/>
</transition>
<transition>
    <source ref="24"/>
    <target ref="99643"/>
    <label kind="guard" x="783" y="173">mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="783" y="188">mSourceRecordArray[2]=10,mChart_MasterShip_OneMVB2_LOGICPathSelect[1]++</label>
    <nail x="813" y="73"/>
</transition>
<transition>
    <source ref="99643"/>
    <target ref="24"/>
    <label kind="guard" x="737" y="156">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_BAitr==Chart_MasterShip_OneMVB2_CNMVBId-1))</label>
    <label kind="assignment" x="737" y="171">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=-1</label>
    <nail x="767" y="56"/>
</transition>
<transition>
    <source ref="99643"/>
    <target ref="23"/>
    <label kind="guard" x="574" y="155">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_BAitr==Chart_MasterShip_OneMVB2_CNMVBId-1)</label>
    <label kind="assignment" x="574" y="170">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=10</label>
    <nail x="604" y="55"/>
</transition>
<transition>
    <source ref="23"/>
    <target ref="24"/>
    <label kind="guard" x="748" y="-130">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[2]==10&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[2]==3</label>
    <label kind="assignment" x="748" y="-115">mChart_MasterShip_OneMVB2_LOGICChildPath[1] = -1,ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(2)</label>
    <nail x="778" y="-230"/>
</transition>
<transition>
    <source ref="23"/>
    <target ref="99641"/>
    <label kind="guard" x="664" y="254">mChart_MasterShip_OneMVB2_LOGICPathSelect[2]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="664" y="269">mChart_MasterShip_OneMVB2_LOGICPathSelect[2]++</label>
    <nail x="694" y="154"/>
</transition>
<transition>
    <source ref="99641"/>
    <target ref="23"/>
    <label kind="guard" x="615" y="252">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_BAitr&gt;Chart_BAlen))</label>
    <label kind="assignment" x="615" y="267">mChart_MasterShip_OneMVB2_LOGICChildPath[2]=-1</label>
    <nail x="645" y="152"/>
</transition>
<transition>
    <source ref="99641"/>
    <target ref="66"/>
    <label kind="guard" x="517" y="674">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_BAitr&gt;Chart_BAlen)</label>
    <label kind="assignment" x="517" y="689">mChart_MasterShip_OneMVB2_LOGICChildPath[2]=11,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="547" y="574"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="71"/>
    <label kind="guard" x="250" y="-44">JVI2T(21,71,0)</label>
    <label kind="assignment" x="250" y="-29">PopOneEvent()</label>
    <nail x="265" y="-94"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="0"/>
    <label kind="guard" x="276" y="-2">JVT2I(21,0)</label>
    <label kind="assignment" x="276" y="13">DelEvtIfOnlyBack()</label>
    <nail x="291" y="-52"/>
</transition>
<transition>
    <source ref="23"/>
    <target ref="99636"/>
    <label kind="guard" x="553" y="67">mChart_MasterShip_OneMVB2_LOGICPathSelect[2]==2&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="553" y="82">mChart_MasterShip_OneMVB2_LOGICPathSelect[2]++</label>
    <nail x="583" y="-33"/>
</transition>
<transition>
    <source ref="99636"/>
    <target ref="23"/>
    <label kind="guard" x="510" y="43">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="510" y="58">mChart_MasterShip_OneMVB2_LOGICChildPath[2]=-1</label>
    <nail x="540" y="-57"/>
</transition>
<transition>
    <source ref="99636"/>
    <target ref="71"/>
    <label kind="guard" x="380" y="78">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="380" y="93">mChart_MasterShip_OneMVB2_LOGICChildPath[2]=12,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="410" y="-22"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="71"/>
    <label kind="guard" x="722" y="-195">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==4</label>
    <label kind="assignment" x="722" y="-180">mChart_MasterShip_OneMVB2_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="327" y="-45"/>
    <nail x="677" y="-45"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="69"/>
    <label kind="guard" x="-376" y="246">JVI2T(21,69,0)</label>
    <label kind="assignment" x="-376" y="261">PopOneEvent()</label>
    <nail x="-361" y="196"/>
</transition>
<transition>
    <source ref="69"/>
    <target ref="0"/>
    <label kind="guard" x="-383" y="197">JVT2I(21,0)</label>
    <label kind="assignment" x="-383" y="212">DelEvtIfOnlyBack()</label>
    <nail x="-368" y="147"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="99635"/>
    <label kind="guard" x="311" y="-22">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="311" y="-7">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="341" y="-122"/>
</transition>
<transition>
    <source ref="99635"/>
    <target ref="71"/>
    <label kind="guard" x="307" y="-71">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(21,54,aConditionalAutomaton)&amp;&amp;(Chart_status_response_type==1))</label>
    <label kind="assignment" x="307" y="-56">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="337" y="-171"/>
</transition>
<transition>
    <source ref="99635"/>
    <target ref="69"/>
    <label kind="guard" x="-335" y="175">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(21,54,aConditionalAutomaton)&amp;&amp;(Chart_status_response_type==1)</label>
    <label kind="assignment" x="-335" y="190">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=13,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-305" y="75"/>
</transition>
<transition>
    <source ref="69"/>
    <target ref="69"/>
    <label kind="guard" x="-677" y="265">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="-677" y="280">mChart_MasterShip_OneMVB2_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-942" y="315"/>
    <nail x="-692" y="315"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="70"/>
    <label kind="guard" x="-497" y="280">JVI2T(21,70,0)</label>
    <label kind="assignment" x="-497" y="295">PopOneEvent()</label>
    <nail x="-482" y="230"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="0"/>
    <label kind="guard" x="-505" y="231">JVT2I(21,0)</label>
    <label kind="assignment" x="-505" y="246">DelEvtIfOnlyBack()</label>
    <nail x="-490" y="181"/>
</transition>
<transition>
    <source ref="69"/>
    <target ref="99630"/>
    <label kind="guard" x="-1021" y="-443">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-1021" y="-428">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="-991" y="-543"/>
</transition>
<transition>
    <source ref="99630"/>
    <target ref="69"/>
    <label kind="guard" x="-972" y="-451">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-972" y="-436">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="-942" y="-551"/>
</transition>
<transition>
    <source ref="99630"/>
    <target ref="70"/>
    <label kind="guard" x="-1045" y="-417">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-1045" y="-402">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=14,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-1015" y="-517"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="70"/>
    <label kind="guard" x="-841" y="273">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==4</label>
    <label kind="assignment" x="-841" y="288">mChart_MasterShip_OneMVB2_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-1236" y="423"/>
    <nail x="-886" y="423"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="27"/>
    <label kind="guard" x="-1122" y="439">JVI2T(21,27,0)</label>
    <label kind="assignment" x="-1122" y="454">PopOneEvent()</label>
    <nail x="-1107" y="389"/>
</transition>
<transition>
    <source ref="27"/>
    <target ref="0"/>
    <label kind="guard" x="-1132" y="391">JVT2I(21,0)</label>
    <label kind="assignment" x="-1132" y="406">DelEvtIfOnlyBack()</label>
    <nail x="-1117" y="341"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="99628"/>
    <label kind="guard" x="-1296" y="-595">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-1296" y="-580">mSourceRecordArray[1]=15,mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="-1266" y="-695"/>
</transition>
<transition>
    <source ref="99628"/>
    <target ref="70"/>
    <label kind="guard" x="-1247" y="-602">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(21,50,aConditionalAutomaton)&amp;&amp;(Chart_CurrentMasterId!=Chart_MasterShip_OneMVB2_CNMVBId))</label>
    <label kind="assignment" x="-1247" y="-587">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="-1217" y="-702"/>
</transition>
<transition>
    <source ref="99628"/>
    <target ref="27"/>
    <label kind="guard" x="-1828" y="-423">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(21,50,aConditionalAutomaton)&amp;&amp;(Chart_CurrentMasterId!=Chart_MasterShip_OneMVB2_CNMVBId)</label>
    <label kind="assignment" x="-1828" y="-408">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=15</label>
    <nail x="-1798" y="-523"/>
</transition>
<transition>
    <source ref="27"/>
    <target ref="70"/>
    <label kind="guard" x="-1706" y="591">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==15&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==2</label>
    <label kind="assignment" x="-1706" y="606">mChart_MasterShip_OneMVB2_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(1)</label>
    <nail x="-1676" y="491"/>
</transition>
<transition>
    <source ref="27"/>
    <target ref="99627"/>
    <label kind="guard" x="-2118" y="-223">mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-2118" y="-208">mChart_MasterShip_OneMVB2_LOGICPathSelect[1]++</label>
    <nail x="-2088" y="-323"/>
</transition>
<transition>
    <source ref="99627"/>
    <target ref="27"/>
    <label kind="guard" x="-2071" y="-209">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-2071" y="-194">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=-1</label>
    <nail x="-2041" y="-309"/>
</transition>
<transition>
    <source ref="99627"/>
    <target ref="65"/>
    <label kind="guard" x="-941" y="-297">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-941" y="-282">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=16,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-911" y="-397"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="26"/>
    <label kind="guard" x="-1109" y="422">JVI2T(21,26,0)</label>
    <label kind="assignment" x="-1109" y="437">PopOneEvent()</label>
    <nail x="-1094" y="372"/>
</transition>
<transition>
    <source ref="26"/>
    <target ref="0"/>
    <label kind="guard" x="-1119" y="374">JVT2I(21,0)</label>
    <label kind="assignment" x="-1119" y="389">DelEvtIfOnlyBack()</label>
    <nail x="-1104" y="324"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="99625"/>
    <label kind="guard" x="-1293" y="-588">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==2&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-1293" y="-573">mSourceRecordArray[1]=17,mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="-1263" y="-688"/>
</transition>
<transition>
    <source ref="99625"/>
    <target ref="70"/>
    <label kind="guard" x="-1244" y="-595">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(21,70,aConditionalAutomaton))</label>
    <label kind="assignment" x="-1244" y="-580">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="-1214" y="-695"/>
</transition>
<transition>
    <source ref="99625"/>
    <target ref="26"/>
    <label kind="guard" x="-1811" y="-434">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(21,70,aConditionalAutomaton)</label>
    <label kind="assignment" x="-1811" y="-419">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=17</label>
    <nail x="-1781" y="-534"/>
</transition>
<transition>
    <source ref="26"/>
    <target ref="70"/>
    <label kind="guard" x="-1693" y="574">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==17&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==2</label>
    <label kind="assignment" x="-1693" y="589">mChart_MasterShip_OneMVB2_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(1)</label>
    <nail x="-1663" y="474"/>
</transition>
<transition>
    <source ref="26"/>
    <target ref="99624"/>
    <label kind="guard" x="-2094" y="-232">mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-2094" y="-217">mChart_MasterShip_OneMVB2_LOGICPathSelect[1]++</label>
    <nail x="-2064" y="-332"/>
</transition>
<transition>
    <source ref="99624"/>
    <target ref="26"/>
    <label kind="guard" x="-2047" y="-218">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-2047" y="-203">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=-1</label>
    <nail x="-2017" y="-318"/>
</transition>
<transition>
    <source ref="99624"/>
    <target ref="65"/>
    <label kind="guard" x="-931" y="-290">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-931" y="-275">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=18,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-901" y="-390"/>
</transition>
<transition>
    <source ref="70"/>
    <target ref="99622"/>
    <label kind="guard" x="-1296" y="-595">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==3&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-1296" y="-580">mSourceRecordArray[1]=19,mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="-1266" y="-695"/>
</transition>
<transition>
    <source ref="99622"/>
    <target ref="70"/>
    <label kind="guard" x="-1247" y="-602">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(21,50,aConditionalAutomaton)&amp;&amp;(Chart_CurrentMasterId==Chart_MasterShip_OneMVB2_CNMVBId))</label>
    <label kind="assignment" x="-1247" y="-587">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="-1217" y="-702"/>
</transition>
<transition>
    <source ref="99622"/>
    <target ref="27"/>
    <label kind="guard" x="-1828" y="-423">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(21,50,aConditionalAutomaton)&amp;&amp;(Chart_CurrentMasterId==Chart_MasterShip_OneMVB2_CNMVBId)</label>
    <label kind="assignment" x="-1828" y="-408">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=19</label>
    <nail x="-1798" y="-523"/>
</transition>
<transition>
    <source ref="27"/>
    <target ref="70"/>
    <label kind="guard" x="-1703" y="493">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==19&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==2</label>
    <label kind="assignment" x="-1703" y="508">mChart_MasterShip_OneMVB2_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(1)</label>
    <nail x="-1688" y="443"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="72"/>
    <label kind="guard" x="-244" y="356">JVI2T(21,72,0)</label>
    <label kind="assignment" x="-244" y="371">PopOneEvent()</label>
    <nail x="-229" y="306"/>
</transition>
<transition>
    <source ref="72"/>
    <target ref="0"/>
    <label kind="guard" x="-268" y="313">JVT2I(21,0)</label>
    <label kind="assignment" x="-268" y="328">DelEvtIfOnlyBack()</label>
    <nail x="-253" y="263"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="99621"/>
    <label kind="guard" x="359" y="31">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==2&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="359" y="46">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="389" y="-69"/>
</transition>
<transition>
    <source ref="99621"/>
    <target ref="71"/>
    <label kind="guard" x="336" y="-13">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(21,73,aConditionalAutomaton))</label>
    <label kind="assignment" x="336" y="2">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="366" y="-113"/>
</transition>
<transition>
    <source ref="99621"/>
    <target ref="72"/>
    <label kind="guard" x="-183" y="344">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(21,73,aConditionalAutomaton)</label>
    <label kind="assignment" x="-183" y="359">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=20,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-153" y="244"/>
</transition>
<transition>
    <source ref="72"/>
    <target ref="72"/>
    <label kind="guard" x="-446" y="496">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="-446" y="511">mChart_MasterShip_OneMVB2_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-711" y="546"/>
    <nail x="-461" y="546"/>
</transition>
<transition>
    <source ref="72"/>
    <target ref="99620"/>
    <label kind="guard" x="-462" y="360">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-462" y="375">mSourceRecordArray[1]=21,mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="-432" y="260"/>
</transition>
<transition>
    <source ref="99620"/>
    <target ref="72"/>
    <label kind="guard" x="-431" y="399">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-431" y="414">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="-401" y="299"/>
</transition>
<transition>
    <source ref="99620"/>
    <target ref="24"/>
    <label kind="guard" x="290" y="-9">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="290" y="6">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=21</label>
    <nail x="320" y="-109"/>
</transition>
<transition>
    <source ref="24"/>
    <target ref="72"/>
    <label kind="guard" x="101" y="139">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==21&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==3</label>
    <label kind="assignment" x="101" y="154">mChart_MasterShip_OneMVB2_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(1)</label>
    <nail x="131" y="39"/>
</transition>
<transition>
    <source ref="71"/>
    <target ref="99619"/>
    <label kind="guard" x="359" y="31">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==3&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="359" y="46">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="389" y="-69"/>
</transition>
<transition>
    <source ref="99619"/>
    <target ref="71"/>
    <label kind="guard" x="336" y="-13">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(21,54,aConditionalAutomaton)&amp;&amp;(Chart_status_response_type&gt;=2))</label>
    <label kind="assignment" x="336" y="2">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="366" y="-113"/>
</transition>
<transition>
    <source ref="99619"/>
    <target ref="72"/>
    <label kind="guard" x="-183" y="344">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(21,54,aConditionalAutomaton)&amp;&amp;(Chart_status_response_type&gt;=2)</label>
    <label kind="assignment" x="-183" y="359">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=22,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-153" y="244"/>
</transition>
<transition>
    <source ref="24"/>
    <target ref="99617"/>
    <label kind="guard" x="783" y="173">mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==2&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="783" y="188">mSourceRecordArray[2]=23,mChart_MasterShip_OneMVB2_LOGICPathSelect[1]++</label>
    <nail x="813" y="73"/>
</transition>
<transition>
    <source ref="99617"/>
    <target ref="24"/>
    <label kind="guard" x="737" y="156">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="737" y="171">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=-1</label>
    <nail x="767" y="56"/>
</transition>
<transition>
    <source ref="99617"/>
    <target ref="23"/>
    <label kind="guard" x="574" y="155">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="574" y="170">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=23</label>
    <nail x="604" y="55"/>
</transition>
<transition>
    <source ref="23"/>
    <target ref="24"/>
    <label kind="guard" x="763" y="-230">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[2]==23&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[2]==3</label>
    <label kind="assignment" x="763" y="-215">mChart_MasterShip_OneMVB2_LOGICChildPath[1] = -1,ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(2)</label>
    <nail x="778" y="-280"/>
</transition>
<transition>
    <source ref="22"/>
    <target ref="99616"/>
    <label kind="guard" x="63" y="399">mChart_MasterShip_OneMVB2_LOGICPathSelect[3]==2&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="63" y="414">mChart_MasterShip_OneMVB2_LOGICPathSelect[3]++</label>
    <nail x="93" y="299"/>
</transition>
<transition>
    <source ref="99616"/>
    <target ref="22"/>
    <label kind="guard" x="111" y="388">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="111" y="403">mChart_MasterShip_OneMVB2_LOGICChildPath[3]=-1</label>
    <nail x="141" y="288"/>
</transition>
<transition>
    <source ref="99616"/>
    <target ref="65"/>
    <label kind="guard" x="-36" y="239">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-36" y="254">mChart_MasterShip_OneMVB2_LOGICChildPath[3]=24,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-6" y="139"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="67"/>
    <label kind="guard" x="192" y="357">JVI2T(21,67,0)</label>
    <label kind="assignment" x="192" y="372">PopOneEvent()</label>
    <nail x="207" y="307"/>
</transition>
<transition>
    <source ref="67"/>
    <target ref="0"/>
    <label kind="guard" x="145" y="372">JVT2I(21,0)</label>
    <label kind="assignment" x="145" y="387">DelEvtIfOnlyBack()</label>
    <nail x="160" y="322"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="99615"/>
    <label kind="guard" x="173" y="613">mChart_MasterShip_OneMVB2_LOGICPathSelect[2]==2&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="173" y="628">mChart_MasterShip_OneMVB2_LOGICPathSelect[2]++</label>
    <nail x="203" y="513"/>
</transition>
<transition>
    <source ref="99615"/>
    <target ref="25"/>
    <label kind="guard" x="222" y="611">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_ReqId==Chart_CNStatusRequest))</label>
    <label kind="assignment" x="222" y="626">mChart_MasterShip_OneMVB2_LOGICChildPath[2]=-1</label>
    <nail x="252" y="511"/>
</transition>
<transition>
    <source ref="99615"/>
    <target ref="67"/>
    <label kind="guard" x="258" y="488">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_ReqId==Chart_CNStatusRequest)</label>
    <label kind="assignment" x="258" y="503">mChart_MasterShip_OneMVB2_LOGICChildPath[2]=25,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="288" y="388"/>
</transition>
<transition>
    <source ref="67"/>
    <target ref="67"/>
    <label kind="guard" x="380" y="614">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==2</label>
    <label kind="assignment" x="380" y="629">mChart_MasterShip_OneMVB2_LOGICExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="115" y="664"/>
    <nail x="365" y="664"/>
</transition>
<transition>
    <source ref="67"/>
    <target ref="99611"/>
    <label kind="guard" x="38" y="266">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==1&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="38" y="281">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="68" y="166"/>
</transition>
<transition>
    <source ref="99611"/>
    <target ref="67"/>
    <label kind="guard" x="85" y="252">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="85" y="267">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="115" y="152"/>
</transition>
<transition>
    <source ref="99611"/>
    <target ref="65"/>
    <label kind="guard" x="-49" y="224">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-49" y="239">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=26,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-19" y="124"/>
</transition>
<transition>
    <source ref="25"/>
    <target ref="99609"/>
    <label kind="guard" x="63" y="399">mChart_MasterShip_OneMVB2_LOGICPathSelect[2]==3&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="63" y="414">mChart_MasterShip_OneMVB2_LOGICPathSelect[2]++</label>
    <nail x="93" y="299"/>
</transition>
<transition>
    <source ref="99609"/>
    <target ref="25"/>
    <label kind="guard" x="111" y="388">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="111" y="403">mChart_MasterShip_OneMVB2_LOGICChildPath[2]=-1</label>
    <nail x="141" y="288"/>
</transition>
<transition>
    <source ref="99609"/>
    <target ref="65"/>
    <label kind="guard" x="-36" y="239">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-36" y="254">mChart_MasterShip_OneMVB2_LOGICChildPath[2]=27,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-6" y="139"/>
</transition>
<transition>
    <source ref="20"/>
    <target ref="99608"/>
    <label kind="guard" x="-149" y="213">mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==2&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-149" y="228">mChart_MasterShip_OneMVB2_LOGICPathSelect[1]++</label>
    <nail x="-119" y="113"/>
</transition>
<transition>
    <source ref="99608"/>
    <target ref="20"/>
    <label kind="guard" x="-101" y="202">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="-101" y="217">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=-1</label>
    <nail x="-71" y="102"/>
</transition>
<transition>
    <source ref="99608"/>
    <target ref="65"/>
    <label kind="guard" x="-142" y="121">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-142" y="136">mChart_MasterShip_OneMVB2_LOGICChildPath[1]=28,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-112" y="21"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="99606"/>
    <label kind="guard" x="-53" y="488">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==2&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-53" y="503">mSourceRecordArray[1]=29,mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="-23" y="388"/>
</transition>
<transition>
    <source ref="99606"/>
    <target ref="65"/>
    <label kind="guard" x="-32" y="533">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!((Chart_MasterShip_OneMVB2_LOGIC_HasMasterFrame==1&amp;&amp;Chart_valid_master_frame==1))</label>
    <label kind="assignment" x="-32" y="548">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="-2" y="433"/>
</transition>
<transition>
    <source ref="99606"/>
    <target ref="20"/>
    <label kind="guard" x="106" y="623">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;(Chart_MasterShip_OneMVB2_LOGIC_HasMasterFrame==1&amp;&amp;Chart_valid_master_frame==1)</label>
    <label kind="assignment" x="106" y="638">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=29</label>
    <nail x="136" y="523"/>
</transition>
<transition>
    <source ref="20"/>
    <target ref="65"/>
    <label kind="guard" x="-21" y="522">JVSE2M(21,aConditionalAutomaton)&amp;&amp;mSourceRecordArray[1]==29&amp;&amp;mChart_MasterShip_OneMVB2_LOGICPathSelect[1]==3</label>
    <label kind="assignment" x="-21" y="537">mChart_MasterShip_OneMVB2_LOGICChildPath[0] = -1,ClearChart_MasterShip_OneMVB2_LOGICPathSelectAtDepth(1)</label>
    <nail x="-36" y="572"/>
</transition>
<transition>
    <source ref="65"/>
    <target ref="99605"/>
    <label kind="guard" x="-53" y="488">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]==3&amp;&amp;JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="-53" y="503">mChart_MasterShip_OneMVB2_LOGICPathSelect[0]++</label>
    <nail x="-23" y="388"/>
</transition>
<transition>
    <source ref="99605"/>
    <target ref="65"/>
    <label kind="guard" x="-32" y="533">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(JVSEF2M(21,62,aConditionalAutomaton))</label>
    <label kind="assignment" x="-32" y="548">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=-1</label>
    <nail x="-2" y="433"/>
</transition>
<transition>
    <source ref="99605"/>
    <target ref="66"/>
    <label kind="guard" x="316" y="487">JVSE2M(21,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;JVSEF2M(21,62,aConditionalAutomaton)</label>
    <label kind="assignment" x="316" y="502">mChart_MasterShip_OneMVB2_LOGICChildPath[0]=30,mChart_MasterShip_OneMVB2_LOGICExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="346" y="387"/>
</transition>
</template>
<template>
<name>Chart_conditional</name>
<declaration>// Place local declarations here.
int mSourceRecordArray[1];
const int mSourceRecordLength = 1;
</declaration>
<location id="0" x = "80" y = "80">
    <name x="70" y="65">Chart_ser_cond_initial</name>
    <urgent/>
</location>
<location id="28" x = "80" y = "320">
    <name x="70" y="305">Chart_MasterShip</name>
    <urgent/>
</location>
<location id="99603" x = "80" y = "80">
    <urgent/>
</location>
<init ref="0"/>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="190" y="230">JVSE2M(1,aConditionalAutomaton)&amp;&amp;mChartPathSelect[0]==2</label>
    <label kind="assignment" x="190" y="245">mChartExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-45" y="180"/>
    <nail x="205" y="180"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="0"/>
    <label kind="guard" x="245" y="150">JVSEF2M(1,eTransToStateDirectly,aConditionalAutomaton)&amp;&amp;(JVSEDestPos(0))</label>
    <label kind="assignment" x="245" y="165">PopOneEvent()</label>
    <nail x="-70" y="200"/>
    <nail x="230" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="28"/>
    <label kind="guard" x="145" y="150">JVI2T(1,28,0)</label>
    <label kind="assignment" x="145" y="165">PopOneEvent()</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="28"/>
    <target ref="0"/>
    <label kind="guard" x="65" y="250">JVT2I(1,0)</label>
    <label kind="assignment" x="65" y="265">DelEvtIfOnlyBack()</label>
    <nail x="80" y="200"/>
</transition>
<transition>
    <source ref="0"/>
    <target ref="99603"/>
    <label kind="guard" x="50" y="180">mChartPathSelect[0]==1&amp;&amp;JVSE2M(1,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="50" y="195">mChartPathSelect[0]++</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99603"/>
    <target ref="0"/>
    <label kind="guard" x="50" y="180">JVSE2M(1,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))&amp;&amp;!(true)</label>
    <label kind="assignment" x="50" y="195">mChartChildPath[0]=-1</label>
    <nail x="80" y="80"/>
</transition>
<transition>
    <source ref="99603"/>
    <target ref="28"/>
    <label kind="guard" x="100" y="300">JVSE2M(1,aConditionalAutomaton)&amp;&amp;(!JVSEF(eTransToStateDirectly))</label>
    <label kind="assignment" x="100" y="315">mChartChildPath[0]=0,mChartExistPath=true,MSEAutoType(aCommonAutomaton)</label>
    <nail x="130" y="200"/>
</transition>
<transition>
    <source ref="28"/>
    <target ref="28"/>
    <label kind="guard" x="165" y="450">JVSE2M(1,aConditionalAutomaton)&amp;&amp;mChartPathSelect[0]==1</label>
    <label kind="assignment" x="165" y="465">mChartExistPath=false,MSEAutoType(aCommonAutomaton)</label>
    <nail x="-20" y="400"/>
    <nail x="180" y="400"/>
</transition>
</template>
<system>// Place template instantiations here.
Process_all_controller = all_controller();
Process_junc_514 = junc_514();
Process_junc_515 = junc_515();
Process_junc_516 = junc_516();
Process_junc_517 = junc_517();
Process_junc_518 = junc_518();
Process_junc_519 = junc_519();
Process_junc_520 = junc_520();
Process_junc_939 = junc_939();
Process_junc_940 = junc_940();
Process_junc_941 = junc_941();
Process_junc_942 = junc_942();
Process_junc_943 = junc_943();
Process_junc_944 = junc_944();
Process_junc_945 = junc_945();
Process_Chart_controller = Chart_controller();
Process_Chart = Chart();
Process_Chart_MasterShip_controller = Chart_MasterShip_controller();
Process_Chart_MasterShip = Chart_MasterShip();
Process_Chart_MasterShip_OneMVB1_controller = Chart_MasterShip_OneMVB1_controller();
Process_Chart_MasterShip_OneMVB1 = Chart_MasterShip_OneMVB1();
Process_Chart_MasterShip_OneMVB1_LOGIC_controller = Chart_MasterShip_OneMVB1_LOGIC_controller();
Process_Chart_MasterShip_OneMVB1_LOGIC = Chart_MasterShip_OneMVB1_LOGIC();
Process_Chart_MasterShip_OneMVB1_LOGIC_Standby_Master_controller = Chart_MasterShip_OneMVB1_LOGIC_Standby_Master_controller();
Process_Chart_MasterShip_OneMVB1_LOGIC_Standby_Master_ctrlaction = Chart_MasterShip_OneMVB1_LOGIC_Standby_Master_ctrlaction();
Process_Chart_MasterShip_OneMVB1_LOGIC_Rrgular_Master_controller = Chart_MasterShip_OneMVB1_LOGIC_Rrgular_Master_controller();
Process_Chart_MasterShip_OneMVB1_LOGIC_Rrgular_Master_ctrlaction = Chart_MasterShip_OneMVB1_LOGIC_Rrgular_Master_ctrlaction();
Process_Chart_MasterShip_OneMVB1_LOGIC_st_controller = Chart_MasterShip_OneMVB1_LOGIC_st_controller();
Process_Chart_MasterShip_OneMVB1_LOGIC_bt_controller = Chart_MasterShip_OneMVB1_LOGIC_bt_controller();
Process_Chart_MasterShip_OneMVB1_LOGIC_sr_controller = Chart_MasterShip_OneMVB1_LOGIC_sr_controller();
Process_Chart_MasterShip_OneMVB1_LOGIC_Interim_Master_controller = Chart_MasterShip_OneMVB1_LOGIC_Interim_Master_controller();
Process_Chart_MasterShip_OneMVB1_LOGIC_Interim_Master_ctrlaction = Chart_MasterShip_OneMVB1_LOGIC_Interim_Master_ctrlaction();
Process_Chart_MasterShip_OneMVB1_LOGIC_Find_Next_controller = Chart_MasterShip_OneMVB1_LOGIC_Find_Next_controller();
Process_Chart_MasterShip_OneMVB1_LOGIC_Find_Next_ctrlaction = Chart_MasterShip_OneMVB1_LOGIC_Find_Next_ctrlaction();
Process_Chart_MasterShip_OneMVB1_LOGIC_T_F_controller = Chart_MasterShip_OneMVB1_LOGIC_T_F_controller();
Process_Chart_MasterShip_OneMVB1_LOGIC_initial_controller = Chart_MasterShip_OneMVB1_LOGIC_initial_controller();
Process_Chart_MasterShip_OneMVB1_LOGIC_conditional = Chart_MasterShip_OneMVB1_LOGIC_conditional();
Process_Chart_MasterShip_OneMVB1_Timer_controller = Chart_MasterShip_OneMVB1_Timer_controller();
Process_Chart_MasterShip_OneMVB1_Timer = Chart_MasterShip_OneMVB1_Timer();
Process_Chart_MasterShip_OneMVB1_Timer_BController_controller = Chart_MasterShip_OneMVB1_Timer_BController_controller();
Process_Chart_MasterShip_OneMVB1_Timer_BController = Chart_MasterShip_OneMVB1_Timer_BController();
Process_Chart_MasterShip_OneMVB1_Timer_BController_AC_controller = Chart_MasterShip_OneMVB1_Timer_BController_AC_controller();
Process_Chart_MasterShip_OneMVB1_Timer_BController_AC = Chart_MasterShip_OneMVB1_Timer_BController_AC();
Process_Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timer_controller = Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timer_controller();
Process_Chart_MasterShip_OneMVB1_Timer_BController_AC_conditional = Chart_MasterShip_OneMVB1_Timer_BController_AC_conditional();
Process_Chart_MasterShip_OneMVB1_Timer_BController_BC_controller = Chart_MasterShip_OneMVB1_Timer_BController_BC_controller();
Process_Chart_MasterShip_OneMVB1_Timer_BController_BC = Chart_MasterShip_OneMVB1_Timer_BController_BC();
Process_Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timer_controller = Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timer_controller();
Process_Chart_MasterShip_OneMVB1_Timer_BController_BC_conditional = Chart_MasterShip_OneMVB1_Timer_BController_BC_conditional();
Process_Chart_MasterShip_OneMVB1_Timer_BController_CC_controller = Chart_MasterShip_OneMVB1_Timer_BController_CC_controller();
Process_Chart_MasterShip_OneMVB1_Timer_BController_CC = Chart_MasterShip_OneMVB1_Timer_BController_CC();
Process_Chart_MasterShip_OneMVB1_Timer_BController_CC_resign_event_watcher_controller = Chart_MasterShip_OneMVB1_Timer_BController_CC_resign_event_watcher_controller();
Process_Chart_MasterShip_OneMVB1_Timer_BController_CC_conditional = Chart_MasterShip_OneMVB1_Timer_BController_CC_conditional();
Process_Chart_MasterShip_OneMVB1_Timer_AController_controller = Chart_MasterShip_OneMVB1_Timer_AController_controller();
Process_Chart_MasterShip_OneMVB1_Timer_AController = Chart_MasterShip_OneMVB1_Timer_AController();
Process_Chart_MasterShip_OneMVB1_Timer_AController_DC_controller = Chart_MasterShip_OneMVB1_Timer_AController_DC_controller();
Process_Chart_MasterShip_OneMVB1_Timer_AController_DC = Chart_MasterShip_OneMVB1_Timer_AController_DC();
Process_Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timer_controller = Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timer_controller();
Process_Chart_MasterShip_OneMVB1_Timer_AController_DC_conditional = Chart_MasterShip_OneMVB1_Timer_AController_DC_conditional();
Process_Chart_MasterShip_OneMVB1_Timer_AController_EC_controller = Chart_MasterShip_OneMVB1_Timer_AController_EC_controller();
Process_Chart_MasterShip_OneMVB1_Timer_AController_EC = Chart_MasterShip_OneMVB1_Timer_AController_EC();
Process_Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timer_controller = Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timer_controller();
Process_Chart_MasterShip_OneMVB1_Timer_AController_EC_conditional = Chart_MasterShip_OneMVB1_Timer_AController_EC_conditional();
Process_Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_controller = Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_controller();
Process_Chart_MasterShip_OneMVB1_Timer_AController_UltimateController = Chart_MasterShip_OneMVB1_Timer_AController_UltimateController();
Process_Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_Time_controller = Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_Time_controller();
Process_Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_conditional = Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_conditional();
Process_Chart_MasterShip_OneMVB1_Chnannel_controller = Chart_MasterShip_OneMVB1_Chnannel_controller();
Process_Chart_MasterShip_OneMVB1_Chnannel = Chart_MasterShip_OneMVB1_Chnannel();
Process_Chart_MasterShip_OneMVB1_Chnannel_Master_Frame_controller = Chart_MasterShip_OneMVB1_Chnannel_Master_Frame_controller();
Process_Chart_MasterShip_OneMVB1_Chnannel_conditional = Chart_MasterShip_OneMVB1_Chnannel_conditional();
Process_Chart_MasterShip_OneMVB2_controller = Chart_MasterShip_OneMVB2_controller();
Process_Chart_MasterShip_OneMVB2 = Chart_MasterShip_OneMVB2();
Process_Chart_MasterShip_OneMVB2_Chnannel_controller = Chart_MasterShip_OneMVB2_Chnannel_controller();
Process_Chart_MasterShip_OneMVB2_Chnannel = Chart_MasterShip_OneMVB2_Chnannel();
Process_Chart_MasterShip_OneMVB2_Chnannel_Master_Frame_controller = Chart_MasterShip_OneMVB2_Chnannel_Master_Frame_controller();
Process_Chart_MasterShip_OneMVB2_Chnannel_conditional = Chart_MasterShip_OneMVB2_Chnannel_conditional();
Process_Chart_MasterShip_OneMVB2_Timer_controller = Chart_MasterShip_OneMVB2_Timer_controller();
Process_Chart_MasterShip_OneMVB2_Timer = Chart_MasterShip_OneMVB2_Timer();
Process_Chart_MasterShip_OneMVB2_Timer_BController_controller = Chart_MasterShip_OneMVB2_Timer_BController_controller();
Process_Chart_MasterShip_OneMVB2_Timer_BController = Chart_MasterShip_OneMVB2_Timer_BController();
Process_Chart_MasterShip_OneMVB2_Timer_BController_AC_controller = Chart_MasterShip_OneMVB2_Timer_BController_AC_controller();
Process_Chart_MasterShip_OneMVB2_Timer_BController_AC = Chart_MasterShip_OneMVB2_Timer_BController_AC();
Process_Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timer_controller = Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timer_controller();
Process_Chart_MasterShip_OneMVB2_Timer_BController_AC_conditional = Chart_MasterShip_OneMVB2_Timer_BController_AC_conditional();
Process_Chart_MasterShip_OneMVB2_Timer_BController_BC_controller = Chart_MasterShip_OneMVB2_Timer_BController_BC_controller();
Process_Chart_MasterShip_OneMVB2_Timer_BController_BC = Chart_MasterShip_OneMVB2_Timer_BController_BC();
Process_Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timer_controller = Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timer_controller();
Process_Chart_MasterShip_OneMVB2_Timer_BController_BC_conditional = Chart_MasterShip_OneMVB2_Timer_BController_BC_conditional();
Process_Chart_MasterShip_OneMVB2_Timer_BController_CC_controller = Chart_MasterShip_OneMVB2_Timer_BController_CC_controller();
Process_Chart_MasterShip_OneMVB2_Timer_BController_CC = Chart_MasterShip_OneMVB2_Timer_BController_CC();
Process_Chart_MasterShip_OneMVB2_Timer_BController_CC_resign_event_watcher_controller = Chart_MasterShip_OneMVB2_Timer_BController_CC_resign_event_watcher_controller();
Process_Chart_MasterShip_OneMVB2_Timer_BController_CC_conditional = Chart_MasterShip_OneMVB2_Timer_BController_CC_conditional();
Process_Chart_MasterShip_OneMVB2_Timer_AController_controller = Chart_MasterShip_OneMVB2_Timer_AController_controller();
Process_Chart_MasterShip_OneMVB2_Timer_AController = Chart_MasterShip_OneMVB2_Timer_AController();
Process_Chart_MasterShip_OneMVB2_Timer_AController_DC_controller = Chart_MasterShip_OneMVB2_Timer_AController_DC_controller();
Process_Chart_MasterShip_OneMVB2_Timer_AController_DC = Chart_MasterShip_OneMVB2_Timer_AController_DC();
Process_Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timer_controller = Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timer_controller();
Process_Chart_MasterShip_OneMVB2_Timer_AController_DC_conditional = Chart_MasterShip_OneMVB2_Timer_AController_DC_conditional();
Process_Chart_MasterShip_OneMVB2_Timer_AController_EC_controller = Chart_MasterShip_OneMVB2_Timer_AController_EC_controller();
Process_Chart_MasterShip_OneMVB2_Timer_AController_EC = Chart_MasterShip_OneMVB2_Timer_AController_EC();
Process_Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timer_controller = Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timer_controller();
Process_Chart_MasterShip_OneMVB2_Timer_AController_EC_conditional = Chart_MasterShip_OneMVB2_Timer_AController_EC_conditional();
Process_Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_controller = Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_controller();
Process_Chart_MasterShip_OneMVB2_Timer_AController_UltimateController = Chart_MasterShip_OneMVB2_Timer_AController_UltimateController();
Process_Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_Time_controller = Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_Time_controller();
Process_Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_conditional = Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_conditional();
Process_Chart_MasterShip_OneMVB2_LOGIC_controller = Chart_MasterShip_OneMVB2_LOGIC_controller();
Process_Chart_MasterShip_OneMVB2_LOGIC = Chart_MasterShip_OneMVB2_LOGIC();
Process_Chart_MasterShip_OneMVB2_LOGIC_ps_controller = Chart_MasterShip_OneMVB2_LOGIC_ps_controller();
Process_Chart_MasterShip_OneMVB2_LOGIC_Standby_Master_controller = Chart_MasterShip_OneMVB2_LOGIC_Standby_Master_controller();
Process_Chart_MasterShip_OneMVB2_LOGIC_Standby_Master_ctrlaction = Chart_MasterShip_OneMVB2_LOGIC_Standby_Master_ctrlaction();
Process_Chart_MasterShip_OneMVB2_LOGIC_Rrgular_Master_controller = Chart_MasterShip_OneMVB2_LOGIC_Rrgular_Master_controller();
Process_Chart_MasterShip_OneMVB2_LOGIC_Rrgular_Master_ctrlaction = Chart_MasterShip_OneMVB2_LOGIC_Rrgular_Master_ctrlaction();
Process_Chart_MasterShip_OneMVB2_LOGIC_st_controller = Chart_MasterShip_OneMVB2_LOGIC_st_controller();
Process_Chart_MasterShip_OneMVB2_LOGIC_bt_controller = Chart_MasterShip_OneMVB2_LOGIC_bt_controller();
Process_Chart_MasterShip_OneMVB2_LOGIC_sr_controller = Chart_MasterShip_OneMVB2_LOGIC_sr_controller();
Process_Chart_MasterShip_OneMVB2_LOGIC_Interim_Master_controller = Chart_MasterShip_OneMVB2_LOGIC_Interim_Master_controller();
Process_Chart_MasterShip_OneMVB2_LOGIC_Interim_Master_ctrlaction = Chart_MasterShip_OneMVB2_LOGIC_Interim_Master_ctrlaction();
Process_Chart_MasterShip_OneMVB2_LOGIC_Find_Next_controller = Chart_MasterShip_OneMVB2_LOGIC_Find_Next_controller();
Process_Chart_MasterShip_OneMVB2_LOGIC_Find_Next_ctrlaction = Chart_MasterShip_OneMVB2_LOGIC_Find_Next_ctrlaction();
Process_Chart_MasterShip_OneMVB2_LOGIC_T_F_controller = Chart_MasterShip_OneMVB2_LOGIC_T_F_controller();
Process_Chart_MasterShip_OneMVB2_LOGIC_conditional = Chart_MasterShip_OneMVB2_LOGIC_conditional();
Process_Chart_conditional = Chart_conditional();
system Process_all_controller,Process_junc_514,Process_junc_515,Process_junc_516,Process_junc_517,Process_junc_518,Process_junc_519,Process_junc_520,Process_junc_939,Process_junc_940,Process_junc_941,Process_junc_942,Process_junc_943,Process_junc_944,Process_junc_945,Process_Chart_controller,Process_Chart,Process_Chart_MasterShip_controller,Process_Chart_MasterShip,Process_Chart_MasterShip_OneMVB1_controller,Process_Chart_MasterShip_OneMVB1,Process_Chart_MasterShip_OneMVB1_LOGIC_controller,Process_Chart_MasterShip_OneMVB1_LOGIC,Process_Chart_MasterShip_OneMVB1_LOGIC_Standby_Master_controller,Process_Chart_MasterShip_OneMVB1_LOGIC_Standby_Master_ctrlaction,Process_Chart_MasterShip_OneMVB1_LOGIC_Rrgular_Master_controller,Process_Chart_MasterShip_OneMVB1_LOGIC_Rrgular_Master_ctrlaction,Process_Chart_MasterShip_OneMVB1_LOGIC_st_controller,Process_Chart_MasterShip_OneMVB1_LOGIC_bt_controller,Process_Chart_MasterShip_OneMVB1_LOGIC_sr_controller,Process_Chart_MasterShip_OneMVB1_LOGIC_Interim_Master_controller,Process_Chart_MasterShip_OneMVB1_LOGIC_Interim_Master_ctrlaction,Process_Chart_MasterShip_OneMVB1_LOGIC_Find_Next_controller,Process_Chart_MasterShip_OneMVB1_LOGIC_Find_Next_ctrlaction,Process_Chart_MasterShip_OneMVB1_LOGIC_T_F_controller,Process_Chart_MasterShip_OneMVB1_LOGIC_initial_controller,Process_Chart_MasterShip_OneMVB1_LOGIC_conditional,Process_Chart_MasterShip_OneMVB1_Timer_controller,Process_Chart_MasterShip_OneMVB1_Timer,Process_Chart_MasterShip_OneMVB1_Timer_BController_controller,Process_Chart_MasterShip_OneMVB1_Timer_BController,Process_Chart_MasterShip_OneMVB1_Timer_BController_AC_controller,Process_Chart_MasterShip_OneMVB1_Timer_BController_AC,Process_Chart_MasterShip_OneMVB1_Timer_BController_AC_T_standby_timer_controller,Process_Chart_MasterShip_OneMVB1_Timer_BController_AC_conditional,Process_Chart_MasterShip_OneMVB1_Timer_BController_BC_controller,Process_Chart_MasterShip_OneMVB1_Timer_BController_BC,Process_Chart_MasterShip_OneMVB1_Timer_BController_BC_T_master_turn_timer_controller,Process_Chart_MasterShip_OneMVB1_Timer_BController_BC_conditional,Process_Chart_MasterShip_OneMVB1_Timer_BController_CC_controller,Process_Chart_MasterShip_OneMVB1_Timer_BController_CC,Process_Chart_MasterShip_OneMVB1_Timer_BController_CC_resign_event_watcher_controller,Process_Chart_MasterShip_OneMVB1_Timer_BController_CC_conditional,Process_Chart_MasterShip_OneMVB1_Timer_AController_controller,Process_Chart_MasterShip_OneMVB1_Timer_AController,Process_Chart_MasterShip_OneMVB1_Timer_AController_DC_controller,Process_Chart_MasterShip_OneMVB1_Timer_AController_DC,Process_Chart_MasterShip_OneMVB1_Timer_AController_DC_T_interim_timer_controller,Process_Chart_MasterShip_OneMVB1_Timer_AController_DC_conditional,Process_Chart_MasterShip_OneMVB1_Timer_AController_EC_controller,Process_Chart_MasterShip_OneMVB1_Timer_AController_EC,Process_Chart_MasterShip_OneMVB1_Timer_AController_EC_T_find_timer_controller,Process_Chart_MasterShip_OneMVB1_Timer_AController_EC_conditional,Process_Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_controller,Process_Chart_MasterShip_OneMVB1_Timer_AController_UltimateController,Process_Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_The_Time_controller,Process_Chart_MasterShip_OneMVB1_Timer_AController_UltimateController_conditional,Process_Chart_MasterShip_OneMVB1_Chnannel_controller,Process_Chart_MasterShip_OneMVB1_Chnannel,Process_Chart_MasterShip_OneMVB1_Chnannel_Master_Frame_controller,Process_Chart_MasterShip_OneMVB1_Chnannel_conditional,Process_Chart_MasterShip_OneMVB2_controller,Process_Chart_MasterShip_OneMVB2,Process_Chart_MasterShip_OneMVB2_Chnannel_controller,Process_Chart_MasterShip_OneMVB2_Chnannel,Process_Chart_MasterShip_OneMVB2_Chnannel_Master_Frame_controller,Process_Chart_MasterShip_OneMVB2_Chnannel_conditional,Process_Chart_MasterShip_OneMVB2_Timer_controller,Process_Chart_MasterShip_OneMVB2_Timer,Process_Chart_MasterShip_OneMVB2_Timer_BController_controller,Process_Chart_MasterShip_OneMVB2_Timer_BController,Process_Chart_MasterShip_OneMVB2_Timer_BController_AC_controller,Process_Chart_MasterShip_OneMVB2_Timer_BController_AC,Process_Chart_MasterShip_OneMVB2_Timer_BController_AC_T_standby_timer_controller,Process_Chart_MasterShip_OneMVB2_Timer_BController_AC_conditional,Process_Chart_MasterShip_OneMVB2_Timer_BController_BC_controller,Process_Chart_MasterShip_OneMVB2_Timer_BController_BC,Process_Chart_MasterShip_OneMVB2_Timer_BController_BC_T_master_turn_timer_controller,Process_Chart_MasterShip_OneMVB2_Timer_BController_BC_conditional,Process_Chart_MasterShip_OneMVB2_Timer_BController_CC_controller,Process_Chart_MasterShip_OneMVB2_Timer_BController_CC,Process_Chart_MasterShip_OneMVB2_Timer_BController_CC_resign_event_watcher_controller,Process_Chart_MasterShip_OneMVB2_Timer_BController_CC_conditional,Process_Chart_MasterShip_OneMVB2_Timer_AController_controller,Process_Chart_MasterShip_OneMVB2_Timer_AController,Process_Chart_MasterShip_OneMVB2_Timer_AController_DC_controller,Process_Chart_MasterShip_OneMVB2_Timer_AController_DC,Process_Chart_MasterShip_OneMVB2_Timer_AController_DC_T_interim_timer_controller,Process_Chart_MasterShip_OneMVB2_Timer_AController_DC_conditional,Process_Chart_MasterShip_OneMVB2_Timer_AController_EC_controller,Process_Chart_MasterShip_OneMVB2_Timer_AController_EC,Process_Chart_MasterShip_OneMVB2_Timer_AController_EC_T_find_timer_controller,Process_Chart_MasterShip_OneMVB2_Timer_AController_EC_conditional,Process_Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_controller,Process_Chart_MasterShip_OneMVB2_Timer_AController_UltimateController,Process_Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_The_Time_controller,Process_Chart_MasterShip_OneMVB2_Timer_AController_UltimateController_conditional,Process_Chart_MasterShip_OneMVB2_LOGIC_controller,Process_Chart_MasterShip_OneMVB2_LOGIC,Process_Chart_MasterShip_OneMVB2_LOGIC_ps_controller,Process_Chart_MasterShip_OneMVB2_LOGIC_Standby_Master_controller,Process_Chart_MasterShip_OneMVB2_LOGIC_Standby_Master_ctrlaction,Process_Chart_MasterShip_OneMVB2_LOGIC_Rrgular_Master_controller,Process_Chart_MasterShip_OneMVB2_LOGIC_Rrgular_Master_ctrlaction,Process_Chart_MasterShip_OneMVB2_LOGIC_st_controller,Process_Chart_MasterShip_OneMVB2_LOGIC_bt_controller,Process_Chart_MasterShip_OneMVB2_LOGIC_sr_controller,Process_Chart_MasterShip_OneMVB2_LOGIC_Interim_Master_controller,Process_Chart_MasterShip_OneMVB2_LOGIC_Interim_Master_ctrlaction,Process_Chart_MasterShip_OneMVB2_LOGIC_Find_Next_controller,Process_Chart_MasterShip_OneMVB2_LOGIC_Find_Next_ctrlaction,Process_Chart_MasterShip_OneMVB2_LOGIC_T_F_controller,Process_Chart_MasterShip_OneMVB2_LOGIC_conditional,Process_Chart_conditional;
</system>
<queries>
</queries>
</nta>
